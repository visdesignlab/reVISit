{"version":3,"sources":["App.module.css","components/ProvenanceIsolatedNodes.module.css","SidePane.module.css","common/data/taskPartitioned sync /^/.//.*/.json$","common/data/provenanceMocks.js","pages/Upload.tsx","components/EventLayers.tsx","pages/Overview.tsx","pages/Export.tsx","components/eventMapping.js","components/EventFrequencies.tsx","components/GroupedNodes.tsx","components/ProvenanceNode.tsx","components/ProvenanceNodes.tsx","components/ProvenanceGraph.tsx","components/ProvenanceIsolatedNodes.tsx","components/reactTagWrapper.tsx","components/TableFilters.tsx","components/ProvenanceTable.tsx","pages/Table.tsx","Main.tsx","SidePane.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Upload","taskIds","allTaskData","i","length","push","require","provset","Set","unrelativeProvenanceData","relativeProvenanceData","forEach","taskData","unrelativeProvData","filter","value","data","provGraphs","entireProvGraph","Array","isArray","startTime","stopTime","trimmedProvGraph","provenanceNode","trimmedNode","event","time","Date","target","trigger","add","totalTime","node","absoluteTime","sort","nodeA","nodeB","Math","random","trimProvGraph","longestTime","d3","d","_","cloneDeep","provGraph","scale","EventLayers","props","onDragEnter","info","console","log","onDrop","dragObj","dropKey","eventKey","dragKey","dragNode","dropPos","pos","split","dropPosition","Number","loop","key","callback","children","state","gData","item","index","arr","splice","dropToGap","expanded","unshift","ar","setState","expandedKeys","className","defaultExpandedKeys","this","draggable","blockNode","treeData","TreeNode","React","Component","Search","Input","ItemNameWrapper","itemName","onItemNameChange","useState","doubleClicked","setDoubleClicked","currentName","setCurrentName","onDoubleClick","TextField","label","onChange","ev","newName","onKeyPress","EyeTwoTone","AppstoreOutlined","Overview","location","newData","dataArr","concat","allEvents","nodes","n","title","name","t","icon","style","padding","placeholder","enterButton","PlusSquareOutlined","size","onSearch","width","Export","colors","answerSelectColor","dragColor","sortColor","selectColor","searchColor","clearColor","eventMapping","answerBox","color","height","attrRow","SvgGrid","currentCol","currentRow","items","itemHeight","itemWidth","gridHeight","gridWidth","maxRows","floor","maxColumns","numberItems","numberColumns","numberRows","ceil","warn","gridItems","itemCounter","leftPadding","transform","onClick","EventFrequencies","frequencies","scaleFactor","icons","eventName","undefined","fontFamily","fontSize","GroupedNodes","classifier","groupedNodes","rectStartX","barHeight","x","r","baseElement","y","fill","rx","eventFreq","String","reduce","counter","p","hasOwnProperty","ProvenanceNode","circle","renderIcons","opacity","ProvenanceNodes","provenanceGraph","xScale","eventType","provNodes","xExtents","start","minimumNodeWidth","stop","yOffset","provElements","ProvenanceGraph","collapseEvents","showEvents","setShowEvents","useEffect","bars","type","eventTypes","IsolatedNode","Tooltip","TransitionComponent","Fade","TransitionProps","timeout","PopperProps","popperOptions","modifiers","offset","enabled","arrow","ProvenanceIsolatedNodes","styles","wrapper","TagWrapper","tags","onTagChange","isMaster","autofocus","allowNew","handleDelete","tag","slice","handleAddition","CategoricalFilter","labels","columnDef","onFilterChanged","occurrences","useMemo","j","obtainItemCounts","currentFilter","setCurrentFilter","maxOccurance","values","a","b","yScale","domain","range","tableData","entries","includes","pointerEvents","indexOfValue","indexOf","temp","assign","cursor","Histogram","max","niceX","nice","buckets","binner","xBand","bucket","binWidth","bandwidth","x0","Brush","brushRef","useRef","onBrushFunction","current","dayBrush","brushX","extent","on","selection","select","selectAll","enter","append","attr","call","ref","BrushableHistogram","setMinimum","setMaximum","inputs","invert","TimeFilter","minimum","maximum","debouncedMin","useDebounce","debouncedMax","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","ViewColumn","MaterialTableWrapper","provenanceData","checkedTags","setCheckedTags","rerender","setRerender","datum","field","cellStyle","maxWidth","customSort","render","customFilterAndSearch","filterResults","checked","filterComponent","TimeFilterObj","graph","timeColumn","generateCategoricalScale","uniqueValues","from","rangeRound","correctScale","eventNodes","flat","eventScale","allObj","correctWidth","correct","rowData","true","false","eventsCol","action","findIndex","iterTag","notesColumn","components","Actions","display","float","backgroundColor","Action","myComponent","ActionComponent","FilterRow","position","top","background","columns","onSelectionChange","selections","actions","removed","existing","find","tooltip","evt","datumTagIndex","currentTag","options","search","paging","filtering","maxBodyHeight","Table","taskIndex","setTaskIndex","FormControl","variant","InputLabel","Select","labelId","MenuItem","Wrapper","styled","div","withRouter","TransitionGroup","CSSTransition","classNames","path","component","SidePane","HomeLink","innerRef","to","Drawer","anchor","Divider","List","ListItem","logo","src","text","link","Fragment","button","ListItemIcon","ListItemText","primary","App","initialEntries","initialIndex","container","sidePane","main","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b956b558.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"header\":\"App_header__3ZZ1n\",\"logo\":\"App_logo__1ItuU\",\"sidePane\":\"App_sidePane__3RleR\",\"main\":\"App_main__3ZkGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProvenanceIsolatedNodes_wrapper__3cJfW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"SidePane_logo__3vZO1\"};","var map = {\n\t\"./S-task01.json\": 484,\n\t\"./S-task010.json\": 485,\n\t\"./S-task011.json\": 486,\n\t\"./S-task012.json\": 487,\n\t\"./S-task02.json\": 488,\n\t\"./S-task03.json\": 489,\n\t\"./S-task04.json\": 490,\n\t\"./S-task05.json\": 491,\n\t\"./S-task06.json\": 492,\n\t\"./S-task07.json\": 493,\n\t\"./S-task08.json\": 494,\n\t\"./S-task09.json\": 495\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 483;","//import allProvenanceData from \"./allProvenanceMocks.js\";\n//import task1Data from './task1ProvData.js'l\nimport * as d3 from \"d3\";\nimport _ from 'lodash';\nlet taskIds = [\"S-task01\", \"S-task02\", \"S-task03\", \"S-task04\", \"S-task05\", \"S-task06\", \"S-task07\", \"S-task08\", \"S-task09\", \"S-task010\", \"S-task011\", \"S-task012\"]\n\nlet allTaskData = [];\nfor (let i = 0; i < taskIds.length; i++) {\n  allTaskData.push(require(`./taskPartitioned/${taskIds[i]}.json`));\n}\n\nlet allProvData = [];\nconst allData = {\n  id: \"58c84d506d1c600001a09319_S-task01\",\n  data: {\n    id: \"58c84d506d1c600001a09319\",\n    initialSetup: \"Mon Aug 26 2019 21:27:06 GMT-0700 (Pacific Daylight Time)\",\n    mode: \"study\",\n    provGraphs: [{\n        clicked: [],\n        count: 0,\n        endTime: \"\",\n        nodes: \"\",\n        search: \"\",\n        selections: {\n          answerBox: {},\n          attrRow: {},\n          cellcol: {},\n          cellrow: {},\n          colLabel: {},\n          neighborSelect: {},\n          previousMouseovers: [],\n          rowLabel: {},\n          search: {},\n        },\n        sortKey: \"statuses_count\",\n        startTime: 1566880025209,\n        taskID: {\n          answer: {\n            nodes: [],\n            value: \"\",\n          },\n          answerKey: {\n            id: [\"18704160\"],\n            nodes: [\"T.J\"],\n          },\n          config: {\n            adjMatrix: {\n              edgeBars: true,\n              neighborHighlightColor: \"\",\n              neighborSelect: true,\n              sortKey: \"statuses_count\",\n              toggle: false,\n            },\n            adjMatrixValues: {},\n            attributeScales: {\n              edge: {\n                count: {\n                  domain: [1, 5],\n                  label: \"# Interactions\",\n                },\n                type: {\n                  domain: [\"mentions\", \"retweet\", \"interacted\"],\n                  label: \"Edge Type\",\n                  range: [\"#ff2700\", \"#008fd5\", \"rgb(91, 91, 91)\"],\n                },\n              },\n              node: {\n                continent: {\n                  domain: [\"North America\", \"South America\", \"Europe\", \"Asia\"],\n                  glyph: \"square\",\n                  label: \"Continent\",\n                  legendLabels: [\"NA\", \"SA\", \"EU\", \"AS\"],\n                  range: [\"#5ba3d0\", \"#7d6dcb\", \"#ce9333\", \"#6aa858\"],\n                },\n                count_followers_in_query: {\n                  domain: [0, 35],\n                  label: \"In-Network followers\",\n                },\n                favourites_count: {\n                  domain: [0, 8000],\n                  label: \"Likes\",\n                },\n                followers_count: {\n                  domain: [0, 1200],\n                  label: \"Followers\",\n                },\n                friends_count: {\n                  domain: [0, 1200],\n                  label: \"Friends\",\n                },\n                listed_count: {\n                  domain: [0, 120],\n                  label: \"In Lists\",\n                },\n                memberFor_days: {\n                  domain: [175, 4498],\n                  label: \"Acct. Age\",\n                },\n                query_tweet_count: {\n                  domain: [0, 10],\n                  label: \"On-topic Tweets\",\n                },\n                selected: {\n                  domain: [true, false],\n                  glyph: \"rect\",\n                  label: \"selected\",\n                  labels: [\"answer\", \"not answer\"],\n                  range: [\"#e86b45\", \"#fff\"],\n                },\n                statuses_count: {\n                  domain: [0, 5500],\n                  label: \"Tweets\",\n                },\n                type: {\n                  domain: [\"person\", \"institution\"],\n                  glyph: \"circle\",\n                  label: \"Type\",\n                  legendLabels: [\"Person\", \"Inst.\"],\n                  range: [\"#e86b45\", \"#514ed9\"],\n                },\n              },\n            },\n            edgeAttributes: [\"type\"],\n            graphFiles: {\n              cluster: \"data/network_large_undirected_singleEdge_cytoscape.json\",\n              large_directed_multiEdge: \"data/network_large_directed_multiEdge.json\",\n              large_undirected_multiEdge: \"data/network_large_undirected_multiEdge.json\",\n              large_undirected_singleEdge: \"data/network_large_undirected_singleEdge.json\",\n              sample: \"data/s_network_small_undirected_singleEdge.json\",\n              small_directed_multiEdge: \"data/network_small_directed_multiEdge.json\",\n              small_undirected_multiEdge: \"data/network_small_undirected_multiEdge.json\",\n              small_undirected_singleEdge: \"data/network_small_undirected_singleEdge.json\",\n            },\n            graphSize: \"large\",\n            isDirected: false,\n            isMultiEdge: false,\n            loadedGraph: \"large_undirected_singleEdge\",\n            nodeAttributes: [\"selected\", \"continent\", \"statuses_count\"],\n            nodeIsRect: true,\n            nodeLink: {\n              drawBars: false,\n              edgeStrokeAttr: \"type\",\n              edgeWidthAttr: null,\n              labelAttr: \"shortName\",\n              labelSize: 12,\n              noEdgeColor: \"rgb(91, 91, 91)\",\n              noNodeFill: \"rgb(153, 191, 195)\",\n              noNodeStroke: \"#c8c8c8\",\n              nodeFillAttr: \"continent\",\n              nodeHeight: 40,\n              nodeSizeAttr: \"statuses_count\",\n              nodeWidth: 40,\n              quantColors: [\n                \"#7b7cb1\",\n                \"#01a068\",\n                \"#bf8531\",\n                \"#5472cf\",\n                \"#4d8615\",\n                \"#d63d61\",\n                \"#ae76ed\",\n                \"#f26336\",\n              ],\n              selectNeighbors: true,\n            },\n            state: {\n              adjMatrix: {},\n            },\n            style: {\n              hoveredNodeColor: \"#fde8ca\",\n              selectedEdgeColor: \"#e86b45\",\n              selectedNodeColor: \"#e86b45\",\n            },\n          },\n          hypothesis: \"Distractor Effect Hypothesis, Attribute Sorting Hypothesis\",\n          order: 4,\n          prompt: \"Find the <span class='attribute'>North American</span> with the <span class='attribute'>most Tweets</span>\",\n          replyCount: 1,\n          replyType: [\"singleNodeSelection\"],\n          startTime: \"Mon Aug 26 2019 21:27:04 GMT-0700 (Pacific Daylight Time)\",\n          taskID: \"S-task01\",\n          taxonomy: {\n            target: \"single node\",\n            type: \"TGA\",\n          },\n          workerID: \"58c84d506d1c600001a09319\",\n        },\n        time: 1566880025209,\n        workerID: \"58c84d506d1c600001a09319\",\n      },\n      {\n        clicked: [],\n        count: 0,\n        endTime: \"\",\n        event: \"answerBox\",\n        nodes: \"\",\n        search: \"\",\n        selections: {\n          answerBox: {\n            \"18704160\": [\"answerBox\"],\n          },\n          attrRow: {},\n          cellcol: {},\n          cellrow: {},\n          colLabel: {},\n          neighborSelect: {},\n          previousMouseovers: [],\n          rowLabel: {},\n          search: {},\n        },\n        sortKey: \"statuses_count\",\n        startTime: 1566880025209,\n        taskID: {\n          answer: {\n            nodes: [],\n            value: \"\",\n          },\n          answerKey: {\n            id: [\"18704160\"],\n            nodes: [\"T.J\"],\n          },\n          config: {\n            adjMatrix: {\n              edgeBars: true,\n              neighborHighlightColor: \"\",\n              neighborSelect: true,\n              sortKey: \"statuses_count\",\n              toggle: false,\n            },\n            adjMatrixValues: {},\n            attributeScales: {\n              edge: {\n                count: {\n                  domain: [1, 5],\n                  label: \"# Interactions\",\n                },\n                type: {\n                  domain: [\"mentions\", \"retweet\", \"interacted\"],\n                  label: \"Edge Type\",\n                  range: [\"#ff2700\", \"#008fd5\", \"rgb(91, 91, 91)\"],\n                },\n              },\n              node: {\n                continent: {\n                  domain: [\"North America\", \"South America\", \"Europe\", \"Asia\"],\n                  glyph: \"square\",\n                  label: \"Continent\",\n                  legendLabels: [\"NA\", \"SA\", \"EU\", \"AS\"],\n                  range: [\"#5ba3d0\", \"#7d6dcb\", \"#ce9333\", \"#6aa858\"],\n                },\n                count_followers_in_query: {\n                  domain: [0, 35],\n                  label: \"In-Network followers\",\n                },\n                favourites_count: {\n                  domain: [0, 8000],\n                  label: \"Likes\",\n                },\n                followers_count: {\n                  domain: [0, 1200],\n                  label: \"Followers\",\n                },\n                friends_count: {\n                  domain: [0, 1200],\n                  label: \"Friends\",\n                },\n                listed_count: {\n                  domain: [0, 120],\n                  label: \"In Lists\",\n                },\n                memberFor_days: {\n                  domain: [175, 4498],\n                  label: \"Acct. Age\",\n                },\n                query_tweet_count: {\n                  domain: [0, 10],\n                  label: \"On-topic Tweets\",\n                },\n                selected: {\n                  domain: [true, false],\n                  glyph: \"rect\",\n                  label: \"selected\",\n                  labels: [\"answer\", \"not answer\"],\n                  range: [\"#e86b45\", \"#fff\"],\n                },\n                statuses_count: {\n                  domain: [0, 5500],\n                  label: \"Tweets\",\n                },\n                type: {\n                  domain: [\"person\", \"institution\"],\n                  glyph: \"circle\",\n                  label: \"Type\",\n                  legendLabels: [\"Person\", \"Inst.\"],\n                  range: [\"#e86b45\", \"#514ed9\"],\n                },\n              },\n            },\n            edgeAttributes: [\"type\"],\n            graphFiles: {\n              cluster: \"data/network_large_undirected_singleEdge_cytoscape.json\",\n              large_directed_multiEdge: \"data/network_large_directed_multiEdge.json\",\n              large_undirected_multiEdge: \"data/network_large_undirected_multiEdge.json\",\n              large_undirected_singleEdge: \"data/network_large_undirected_singleEdge.json\",\n              sample: \"data/s_network_small_undirected_singleEdge.json\",\n              small_directed_multiEdge: \"data/network_small_directed_multiEdge.json\",\n              small_undirected_multiEdge: \"data/network_small_undirected_multiEdge.json\",\n              small_undirected_singleEdge: \"data/network_small_undirected_singleEdge.json\",\n            },\n            graphSize: \"large\",\n            isDirected: false,\n            isMultiEdge: false,\n            loadedGraph: \"large_undirected_singleEdge\",\n            nodeAttributes: [\"selected\", \"continent\", \"statuses_count\"],\n            nodeIsRect: true,\n            nodeLink: {\n              drawBars: false,\n              edgeStrokeAttr: \"type\",\n              edgeWidthAttr: null,\n              labelAttr: \"shortName\",\n              labelSize: 12,\n              noEdgeColor: \"rgb(91, 91, 91)\",\n              noNodeFill: \"rgb(153, 191, 195)\",\n              noNodeStroke: \"#c8c8c8\",\n              nodeFillAttr: \"continent\",\n              nodeHeight: 40,\n              nodeSizeAttr: \"statuses_count\",\n              nodeWidth: 40,\n              quantColors: [\n                \"#7b7cb1\",\n                \"#01a068\",\n                \"#bf8531\",\n                \"#5472cf\",\n                \"#4d8615\",\n                \"#d63d61\",\n                \"#ae76ed\",\n                \"#f26336\",\n              ],\n              selectNeighbors: true,\n            },\n            state: {\n              adjMatrix: {},\n            },\n            style: {\n              hoveredNodeColor: \"#fde8ca\",\n              selectedEdgeColor: \"#e86b45\",\n              selectedNodeColor: \"#e86b45\",\n            },\n          },\n          hypothesis: \"Distractor Effect Hypothesis, Attribute Sorting Hypothesis\",\n          order: 4,\n          prompt: \"Find the <span class='attribute'>North American</span> with the <span class='attribute'>most Tweets</span>\",\n          replyCount: 1,\n          replyType: [\"singleNodeSelection\"],\n          startTime: \"Mon Aug 26 2019 21:27:04 GMT-0700 (Pacific Daylight Time)\",\n          taskID: \"S-task01\",\n          taxonomy: {\n            target: \"single node\",\n            type: \"TGA\",\n          },\n          workerID: \"58c84d506d1c600001a09319\",\n        },\n        time: 1566880110088,\n        workerID: \"58c84d506d1c600001a09319\",\n      },\n      {\n        clicked: [],\n        count: 0,\n        endTime: \"\",\n        event: \"Finished Task\",\n        nodes: \"\",\n        search: \"\",\n        selections: {\n          answerBox: {\n            \"18704160\": [\"answerBox\"],\n          },\n          attrRow: {},\n          cellcol: {},\n          cellrow: {},\n          colLabel: {},\n          neighborSelect: {},\n          previousMouseovers: [{\n              event: \"attrRow18704160\",\n              time: 1566880110855,\n            },\n            {\n              event: \"cell190726679_1068137549355515900\",\n              time: 1566880111007,\n            },\n            {\n              event: \"cell190726679_270431596\",\n              time: 1566880111044,\n            },\n            {\n              event: \"cell9527212_79908341\",\n              time: 1566880111091,\n            },\n            {\n              event: \"cell91169926_1055379531731796000\",\n              time: 1566880111140,\n            },\n            {\n              event: \"cell15208867_4058687172\",\n              time: 1566880111167,\n            },\n            {\n              event: \"cell14905766_743468486756868100\",\n              time: 1566880111191,\n            },\n            {\n              event: \"cell3230388598_711885257549680600\",\n              time: 1566880111216,\n            },\n            {\n              event: \"cell18406335_711885257549680600\",\n              time: 1566880111241,\n            },\n            {\n              event: \"cell10414152_711885257549680600\",\n              time: 1566880111723,\n            },\n            {\n              event: \"cell10414152_158685605\",\n              time: 1566880113574,\n            },\n            {\n              event: \"cell18406335_1667081238\",\n              time: 1566880113601,\n            },\n            {\n              event: \"cell11493602_4893004803\",\n              time: 1566880113625,\n            },\n            {\n              event: \"cell22766040_1658560038\",\n              time: 1566880113650,\n            },\n            {\n              event: \"cell22766040_1873322353\",\n              time: 1566880113675,\n            },\n            {\n              event: \"cell22766040_30009655\",\n              time: 1566880113990,\n            },\n            {\n              event: \"cell84043985_2596138699\",\n              time: 1566880114013,\n            },\n            {\n              event: \"cell84043985_241173920\",\n              time: 1566880114037,\n            },\n            {\n              event: \"cell84043985_49457800\",\n              time: 1566880114064,\n            },\n            {\n              event: \"cell84043985_208312922\",\n              time: 1566880114089,\n            },\n            {\n              event: \"cell84043985_18325271\",\n              time: 1566880114114,\n            },\n            {\n              event: \"cell84043985_16557883\",\n              time: 1566880114139,\n            },\n            {\n              event: \"cell84043985_11493602\",\n              time: 1566880114162,\n            },\n            {\n              event: \"cell84043985_15208867\",\n              time: 1566880114186,\n            },\n            {\n              event: \"cell21084111_9527212\",\n              time: 1566880114211,\n            },\n            {\n              event: \"cell6146692_318046158\",\n              time: 1566880114236,\n            },\n            {\n              event: \"rowLabel6146692\",\n              time: 1566880114260,\n            },\n          ],\n          rowLabel: {},\n          search: {},\n        },\n        sortKey: \"statuses_count\",\n        startTime: 1566880025209,\n        taskID: {\n          answer: {\n            nodes: [],\n            value: \"\",\n          },\n          answerKey: {\n            id: [\"18704160\"],\n            nodes: [\"T.J\"],\n          },\n          config: {\n            adjMatrix: {\n              edgeBars: true,\n              neighborHighlightColor: \"\",\n              neighborSelect: true,\n              sortKey: \"statuses_count\",\n              toggle: false,\n            },\n            adjMatrixValues: {},\n            attributeScales: {\n              edge: {\n                count: {\n                  domain: [1, 5],\n                  label: \"# Interactions\",\n                },\n                type: {\n                  domain: [\"mentions\", \"retweet\", \"interacted\"],\n                  label: \"Edge Type\",\n                  range: [\"#ff2700\", \"#008fd5\", \"rgb(91, 91, 91)\"],\n                },\n              },\n              node: {\n                continent: {\n                  domain: [\"North America\", \"South America\", \"Europe\", \"Asia\"],\n                  glyph: \"square\",\n                  label: \"Continent\",\n                  legendLabels: [\"NA\", \"SA\", \"EU\", \"AS\"],\n                  range: [\"#5ba3d0\", \"#7d6dcb\", \"#ce9333\", \"#6aa858\"],\n                },\n                count_followers_in_query: {\n                  domain: [0, 35],\n                  label: \"In-Network followers\",\n                },\n                favourites_count: {\n                  domain: [0, 8000],\n                  label: \"Likes\",\n                },\n                followers_count: {\n                  domain: [0, 1200],\n                  label: \"Followers\",\n                },\n                friends_count: {\n                  domain: [0, 1200],\n                  label: \"Friends\",\n                },\n                listed_count: {\n                  domain: [0, 120],\n                  label: \"In Lists\",\n                },\n                memberFor_days: {\n                  domain: [175, 4498],\n                  label: \"Acct. Age\",\n                },\n                query_tweet_count: {\n                  domain: [0, 10],\n                  label: \"On-topic Tweets\",\n                },\n                selected: {\n                  domain: [true, false],\n                  glyph: \"rect\",\n                  label: \"selected\",\n                  labels: [\"answer\", \"not answer\"],\n                  range: [\"#e86b45\", \"#fff\"],\n                },\n                statuses_count: {\n                  domain: [0, 5500],\n                  label: \"Tweets\",\n                },\n                type: {\n                  domain: [\"person\", \"institution\"],\n                  glyph: \"circle\",\n                  label: \"Type\",\n                  legendLabels: [\"Person\", \"Inst.\"],\n                  range: [\"#e86b45\", \"#514ed9\"],\n                },\n              },\n            },\n            edgeAttributes: [\"type\"],\n            graphFiles: {\n              cluster: \"data/network_large_undirected_singleEdge_cytoscape.json\",\n              large_directed_multiEdge: \"data/network_large_directed_multiEdge.json\",\n              large_undirected_multiEdge: \"data/network_large_undirected_multiEdge.json\",\n              large_undirected_singleEdge: \"data/network_large_undirected_singleEdge.json\",\n              sample: \"data/s_network_small_undirected_singleEdge.json\",\n              small_directed_multiEdge: \"data/network_small_directed_multiEdge.json\",\n              small_undirected_multiEdge: \"data/network_small_undirected_multiEdge.json\",\n              small_undirected_singleEdge: \"data/network_small_undirected_singleEdge.json\",\n            },\n            graphSize: \"large\",\n            isDirected: false,\n            isMultiEdge: false,\n            loadedGraph: \"large_undirected_singleEdge\",\n            nodeAttributes: [\"selected\", \"continent\", \"statuses_count\"],\n            nodeIsRect: true,\n            nodeLink: {\n              drawBars: false,\n              edgeStrokeAttr: \"type\",\n              edgeWidthAttr: null,\n              labelAttr: \"shortName\",\n              labelSize: 12,\n              noEdgeColor: \"rgb(91, 91, 91)\",\n              noNodeFill: \"rgb(153, 191, 195)\",\n              noNodeStroke: \"#c8c8c8\",\n              nodeFillAttr: \"continent\",\n              nodeHeight: 40,\n              nodeSizeAttr: \"statuses_count\",\n              nodeWidth: 40,\n              quantColors: [\n                \"#7b7cb1\",\n                \"#01a068\",\n                \"#bf8531\",\n                \"#5472cf\",\n                \"#4d8615\",\n                \"#d63d61\",\n                \"#ae76ed\",\n                \"#f26336\",\n              ],\n              selectNeighbors: true,\n            },\n            state: {\n              adjMatrix: {},\n            },\n            style: {\n              hoveredNodeColor: \"#fde8ca\",\n              selectedEdgeColor: \"#e86b45\",\n              selectedNodeColor: \"#e86b45\",\n            },\n          },\n          hypothesis: \"Distractor Effect Hypothesis, Attribute Sorting Hypothesis\",\n          order: 4,\n          prompt: \"Find the <span class='attribute'>North American</span> with the <span class='attribute'>most Tweets</span>\",\n          replyCount: 1,\n          replyType: [\"singleNodeSelection\"],\n          startTime: \"Mon Aug 26 2019 21:27:04 GMT-0700 (Pacific Daylight Time)\",\n          taskID: \"S-task01\",\n          taxonomy: {\n            target: \"single node\",\n            type: \"TGA\",\n          },\n          workerID: \"58c84d506d1c600001a09319\",\n        },\n        time: \"Mon Aug 26 2019 21:28:37 GMT-0700 (Pacific Daylight Time)\",\n        workerID: \"58c84d506d1c600001a09319\",\n      },\n    ],\n    update: \"Mon Aug 26 2019 21:28:37 GMT-0700 (Pacific Daylight Time)\",\n  },\n};\n//S - task01;\n//const allProvenanceData = [allData];\nlet provDataForTask = [];\nlet provset = new Set()\nlet unrelativeProvenanceData = [],\n  relativeProvenanceData = [];\nallTaskData.forEach(taskData => {\n  let forTaskFilter = taskData.filter(value => value.data.provGraphs);\n  /*allProvenanceData.filter((run) =>\n    run.id.includes(\"S-task01\")\n  );*/\n\n  function trimProvGraph(entireProvGraph) {\n    if (!entireProvGraph || !Array.isArray(entireProvGraph)) {\n      return;\n    }\n    let trimmedProvGraph = {};\n    let startTime, stopTime;\n    trimmedProvGraph[\"nodes\"] = entireProvGraph.map((provenanceNode) => {\n      let trimmedNode = {};\n\n      trimmedNode.event = provenanceNode.event ?\n        provenanceNode.event :\n        \"startedProvenance\";\n      trimmedNode.time = new Date(provenanceNode.time);\n      if (trimmedNode.event === \"startedProvenance\") {\n        startTime = new Date(provenanceNode.time);\n      }\n      if (trimmedNode.event === \"Finished Task\") {\n        stopTime = new Date(provenanceNode.time); //provenanceNode.time;\n      }\n      trimmedNode.target = null; // to display meta info about event target (ie node 'J_heer')\n      trimmedNode.trigger = null; // to display meta info about event trigger (ie click, drag, etc)\n      provset.add(trimmedNode.event);\n      return trimmedNode;\n    });\n    const totalTime = stopTime - startTime;\n    trimmedProvGraph[\"nodes\"].forEach(node => {\n\n      node.time = (node.time - startTime) / (totalTime); // relative time\n      node.absoluteTime = (node.time - startTime);\n    })\n    trimmedProvGraph[\"nodes\"].sort((nodeA, nodeB) => nodeA.time - nodeB.time)\n\n\n    trimmedProvGraph[\"startTime\"] = (startTime - startTime) / (totalTime); // 0\n    trimmedProvGraph[\"stopTime\"] = (stopTime - startTime) / (totalTime); // 1\n    trimmedProvGraph[\"totalTime\"] = totalTime;\n    trimmedProvGraph[\"correct\"] = Math.random() > .4 ? 'true' : 'false'; //60% accuracy, true and false string are used to keep data inline with categorical variables.\n\n    return trimmedProvGraph;\n  }\n\n  // find the person with longest time, \n  let unrelativeProvData = forTaskFilter.map((value) => {\n    return trimProvGraph(value.data.provGraphs);\n  });\n\n  let longestTime = d3.max(unrelativeProvData, d => {\n    if (d) {\n      return d.totalTime;\n    }\n    return 0;\n\n  });\n  if (unrelativeProvData.length === 0) {\n    return;\n  }\n  //unrelativeProvData = unrelativeProvData.filter(data => data.length > 0)\n  unrelativeProvenanceData.push(_.cloneDeep(unrelativeProvData))\n\n  //if (true) {\n  relativeProvenanceData.push(unrelativeProvData.map(provGraph => {\n    let scale = longestTime / provGraph.totalTime;\n    provGraph[\"startTime\"] = provGraph[\"startTime\"] / (scale);\n    provGraph[\"stopTime\"] = provGraph[\"stopTime\"] / (scale);\n    provGraph[\"nodes\"] = provGraph[\"nodes\"].map(node => {\n      node['time'] = node[\"time\"] / scale;\n\n      return node;\n    })\n    return provGraph;\n  }));\n  //} else {\n  //provData = unrelativeProvData;\n  //}\n  //allProvData.push(provData);\n  //const provData = allData.data.provGraphs;\n})\n\n\nexport {\n  relativeProvenanceData,\n  unrelativeProvenanceData\n};","import React from \"react\";\n\nconst Upload = () => {\n  return <div>This Is upload</div>;\n};\n\nexport default Upload;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport { Tree, Input } from \"antd\";\n\nclass EventLayers extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(\"props are\", props);\n        this.state = {\n            gData: props.gData,\n            expandedKeys: [\"0-0\"],\n        };\n    }\n\n    // state = {\n    //     gData,\n\n    // };\n\n    onDragEnter = (info) => {\n        console.log(info);\n        // expandedKeys 需要受控时设置\n        // this.setState({\n        //   expandedKeys: info.expandedKeys,\n        // });\n    };\n\n    onDrop = (info) => {\n        console.log(info);\n        const dropKey = info.node.props.eventKey;\n        const dragKey = info.dragNode.props.eventKey;\n        const dropPos = info.node.props.pos.split(\"-\");\n        const dropPosition =\n            info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n        const loop = (data, key, callback) => {\n            for (let i = 0; i < data.length; i++) {\n                if (data[i].key === key) {\n                    return callback(data[i], i, data);\n                }\n                if (data[i].children) {\n                    loop(data[i].children, key, callback);\n                }\n            }\n        };\n        const data = [...this.state.gData];\n\n        // Find dragObject\n        let dragObj;\n        loop(data, dragKey, (item, index, arr) => {\n            arr.splice(index, 1);\n            dragObj = item;\n        });\n\n        if (!info.dropToGap) {\n            // Drop on the content\n            loop(data, dropKey, (item) => {\n                item.children = item.children || [];\n                // where to insert 示例添加到尾部，可以是随意位置\n                item.children.push(dragObj);\n            });\n        } else if (\n            (info.node.props.children || []).length > 0 && // Has children\n            info.node.props.expanded && // Is expanded\n            dropPosition === 1 // On the bottom gap\n        ) {\n            loop(data, dropKey, (item) => {\n                item.children = item.children || [];\n                // where to insert 示例添加到头部，可以是随意位置\n                item.children.unshift(dragObj);\n            });\n        } else {\n            let ar;\n            let i;\n            loop(data, dropKey, (item, index, arr) => {\n                ar = arr;\n                i = index;\n            });\n            if (dropPosition === -1) {\n                ar.splice(i, 0, dragObj);\n            } else {\n                ar.splice(i + 1, 0, dragObj);\n            }\n        }\n\n        this.setState({\n            gData: data,\n        });\n    };\n\n    render() {\n        return (\n            <Tree\n                // checkable\n                // showIcon\n                // showLine\n                className=\"draggable-tree hide-file-icon\"\n                defaultExpandedKeys={this.state.expandedKeys}\n                draggable\n                blockNode\n                onDragEnter={this.onDragEnter}\n                onDrop={this.onDrop}\n                treeData={this.state.gData}\n                TreeNode={() => \"value\"}\n            />\n        );\n    }\n}\n\nexport default EventLayers;\n","import React from \"react\";\nimport { Input } from 'antd';\nimport { relativeProvenanceData } from \"../common/data/provenanceMocks.js\";\nimport EventLayers from \"../components/EventLayers\";\nimport {\n  EyeInvisibleTwoTone,\n  EyeTwoTone,\n  MenuOutlined,\n  AppstoreOutlined,\n  UserAddOutlined,\n  PlusSquareOutlined\n\n} from \"@ant-design/icons\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { getAllJSDocTags } from \"typescript\";\n\n\nconst { Search } = Input;\nconst ItemNameWrapper = ({ itemName, onItemNameChange }) => {\n  const [doubleClicked, setDoubleClicked] = React.useState(false);\n  const [currentName, setCurrentName] = React.useState(itemName);\n  return (\n    <div onDoubleClick={() => setDoubleClicked(true)}>\n      {doubleClicked ? (\n        <div>\n          <TextField\n            id={itemName}\n            label={itemName}\n            onChange={(ev) => {\n              const newName = ev.target.value;\n              // do checks here to verify name is unique?\n              setCurrentName(newName);\n            }}\n            onKeyPress={(ev) => {\n              console.log(`Pressed keyCode ${ev.key}`);\n              if (ev.key === \"Enter\") {\n                onItemNameChange(currentName);\n                setDoubleClicked(false);\n              }\n            }}\n          />\n        </div>\n      ) : (\n          <div>{currentName}  <EyeTwoTone />  <AppstoreOutlined /></div>\n        )}\n    </div>\n  );\n};\nconst Overview = ({ location }) => {\n  let newData = relativeProvenanceData[0].map((dataArr) => {\n    return { provGraph: dataArr };\n  });\n  // this is a mock for longer data sets w/ more participants.\n  for (let i = 0; i < 0; i++) {\n    newData = newData.concat(_.cloneDeep(newData));\n  }\n\n  //iterate through and create list of unique events;\n  let allEvents = [];\n\n  newData.map((d) =>\n    d.provGraph.nodes.map((n) => {\n      allEvents.push(n.event);\n    })\n  );\n\n  function handleDataUpdate(key, newValue) {\n    // in here, put the code to reorganize and set the data.\n  }\n\n  allEvents = [...new Set(allEvents)].map((d) => {\n    return {\n      title: () => (\n        <ItemNameWrapper\n          itemName={d}\n          onItemNameChange={(name) => console.log(\"to change\", name)}\n        />\n      ),\n\n      key: d,\n      // icon: <EyeTwoTone />,\n      children: [\"Alex\", \"Lane\", \"Jeff\", \"Noeska\"].map((t) => {\n        return {\n          title: () => {\n            return <div className={\"bonkers\"}>{d + \"_\" + t}</div>;\n          },\n          key: d + \"_\" + t,\n          icon: <EyeTwoTone />,\n          children: [],\n        };\n      }),\n    };\n  });\n\n  return <div style={{ padding: \"15px\" }}>\n    <Search\n      placeholder=\"Create Event Type\"\n      enterButton={<PlusSquareOutlined />}\n      size=\"large\"\n      onSearch={value => allEvents.push({\n        title: () => {\n          return <div className={\"bonkers\"}>{value}</div>;\n        },\n        key: value,\n        icon: <EyeTwoTone />,\n        children: [],\n      })\n      }\n      style={{ width: 300 }}\n    />\n    <div style={{ 'padding-top': \"15px\" }}>\n      <EventLayers gData={allEvents} />\n    </div>\n  </div >;\n};\n\nexport default Overview;\n","import React from \"react\";\n\nconst Export = () => {\n  return <div>This is Export</div>;\n};\n\nexport default Export;\n","import React from 'react';\nimport Add from \"@material-ui/icons/Add\";\nimport PanTool from \"@material-ui/icons/PanTool\";\nimport Sort from \"@material-ui/icons/Sort\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport Search from \"@material-ui/icons/Search\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport Start from \"@material-ui/icons/Star\";\nconst colors = [\"#c6e0d6\", \"#8fcab4\", \"#67aca9\", \"#5d83d2\", \"#6b56dd\", \"#9e93a1\"];\n// generated from https://leonardocolor.io/?colorKeys=%235b89d2%2C%235dbb9c%2C%23723ce7%2C%238e18b9&base=ffffff&ratios=1.4%2C1.64%2C2.12%2C2.80%2C3.71%2C4.88%2C6.35%2C9.00&mode=CAM02\nconst answerSelectColor = colors[0];\nconst dragColor = colors[1];\nconst sortColor = colors[2];\nconst selectColor = colors[3];\nconst searchColor = colors[4];\nconst clearColor = colors[5];\n\nconst eventMapping = {\n  answerBox: {\n    name: \"Add\",\n    color: answerSelectColor,\n    icon: < Add width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"Hard Selected a Node\": {\n    name: \"Add\",\n    color: answerSelectColor,\n\n    icon: < Add width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"Dragged Node\": {\n    name: \"PanTool\",\n    color: dragColor,\n    icon: < PanTool width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  sort: {\n    name: \"Sort\",\n    color: sortColor,\n    icon: < Sort width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  attrRow: {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: < FiberManualRecordIcon width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"Hard Unselected a Node\": {\n    name: \"RadioButtonUncheckedIcon\",\n    color: answerSelectColor,\n    icon: < RadioButtonUncheckedIcon width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"Select Node\": {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: < FiberManualRecordIcon width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"rowLabel\": {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: < FiberManualRecordIcon width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"colLabel\": {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: < FiberManualRecordIcon width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"search\": {\n    name: \"Search\",\n    color: searchColor,\n    icon: < Search width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"Searched for Node\": {\n    name: \"Search\",\n    color: searchColor,\n    icon: < Search width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"cell\": {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: < FiberManualRecordIcon width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"Unselect Node\": {\n    name: \"RadioButtonUncheckedIcon\",\n    color: selectColor,\n    icon: < RadioButtonUncheckedIcon width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"clear\": {\n    name: \"Clear\",\n    color: clearColor,\n    icon: < Clear width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"cleared all selected nodes\": {\n    name: \"Clear\",\n    color: clearColor,\n    icon: < Clear width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"startedProvenance\": {\n    name: \"Start\",\n    color: 'rgb(255,255,255)',\n    icon: < Start width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  },\n  \"Finished Task\": {\n    name: \"Start\",\n    color: 'rgb(255,255,255)',\n    icon: < Start width = {\n      16\n    }\n    height = {\n      16\n    }\n    /> \n  }\n};\n\nexport default eventMapping;","import React, { useRef, useEffect } from \"react\";\nimport eventMapping from \"./eventMapping.js\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport ThreeDRotation from \"@material-ui/icons/ThreeDRotation\";\n\nimport GroupedNodes from \"./GroupedNodes\";\nimport * as d3 from \"d3\";\nimport chroma from \"chroma-js\";\n\nconst EventFrequencies = ({ frequencies, scaleFactor, width, height }: any) => {\n  const icons = Object.keys(frequencies).map((eventName, index) => {\n    let icon;\n    if (eventMapping[eventName] !== undefined) {\n      icon = eventMapping[eventName].icon;\n    } else {\n      icon = <ThreeDRotation width={24} height={24}></ThreeDRotation>;\n    }\n\n    //let xTranslate = finish - start < 48 ? -12 : 0;\n    scaleFactor = 0.75;\n    const iconSize = 16;\n\n    return (\n      <g transform={`scale(${scaleFactor})`}>\n        {icon}\n        <g transform={`translate(${iconSize},${5 + iconSize / 2})`}>\n          <text fontFamily={\"Roboto\"} fontSize={\"14\"}>\n            {frequencies[eventName]}\n          </text>\n        </g>\n      </g>\n    );\n  });\n\n  return (\n    <SvgGrid\n      items={icons}\n      itemHeight={12}\n      itemWidth={24}\n      gridWidth={width}\n      gridHeight={height}></SvgGrid>\n  );\n};\n\nconst SvgGrid = ({ items, itemHeight, itemWidth, gridHeight, gridWidth }) => {\n  let maxRows = Math.floor(gridHeight / itemHeight);\n  let maxColumns = Math.floor(gridWidth / itemWidth);\n\n  let numberItems = items.length;\n\n  let numberColumns = numberItems > maxColumns ? maxColumns : numberItems;\n  let numberRows =\n    numberItems === numberColumns ? 1 : Math.ceil(numberItems / numberColumns);\n  if (numberItems > maxRows * maxColumns) {\n    // render ...\n    console.warn(\"over number of items on\", items);\n  }\n\n  //\n  let currentCol, currentRow;\n  let gridItems = [];\n  let itemCounter = 0;\n  for (currentRow = 0; currentRow < numberRows; currentRow++) {\n    //\n    let isLastRow = currentRow + 1 == numberRows;\n    let startingCol = 0;\n    let leftPadding = 0;\n    let allPadding = 0;\n    if (isLastRow) {\n      let numberItemsRemaining = numberItems - itemCounter;\n      let padding = maxColumns - numberItemsRemaining;\n      leftPadding = padding / 2;\n      //startingCol = Math.floor(padding / 2);\n      //leftPadding = Math.floor(padding / 2);\n      //allPadding = padding;\n    }\n\n    for (currentCol = startingCol; currentCol < numberColumns; currentCol++) {\n      gridItems.push(\n        <g\n          transform={`translate(${(currentCol + leftPadding) * itemWidth},${\n            currentRow * itemHeight\n          })`}\n          onClick={() => {}}>\n          {items[itemCounter]}\n        </g>\n      );\n      itemCounter++;\n    }\n  }\n  if (gridItems.length === 0) {\n    console.log(\n      \"NOITEMS\",\n      numberItems,\n      numberColumns,\n      numberRows,\n      \"mc\",\n      maxColumns,\n      \"mr\",\n      maxRows\n    );\n  }\n  return (\n    <g className={\"svggrid\"} onClick={() => {}}>\n      {gridItems}\n    </g>\n  );\n};\n\nexport default EventFrequencies;\n","import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport chroma from \"chroma-js\";\nimport EventFrequencies from \"./EventFrequencies\";\nconst svgWidth = 200;\nconst svgHeight = 100;\nconst margin = { top: 5, right: 5, bottom: 5, left: 5 };\n\nfunction count(ary, classifier) {\n  classifier = classifier || String;\n  return ary.reduce(function (counter, item) {\n    var p = classifier(item);\n    counter[p] = counter.hasOwnProperty(p) ? counter[p] + 1 : 1;\n    return counter;\n  }, {});\n}\n\nconst GroupedNodes = ({ groupedNodes, barHeight }: any) => {\n  const rectStartX = groupedNodes[0].x;\n  const rectFinishX = groupedNodes[groupedNodes.length - 1].x;\n  // if width can't accomodate all actions, expand\n  let width = rectFinishX - rectStartX;\n  const height = groupedNodes[0].r * 2;\n  const y = groupedNodes[0].y - height / 2;\n  const color = \"lightgray\";\n  const baseElement = (\n    <g>\n      <rect\n        y={0}\n        height={height}\n        width={width + groupedNodes[0].r}\n        fill={color}\n        rx={10}></rect>\n    </g>\n  );\n  const eventFreq = count(groupedNodes, function (item) {\n    return item.info;\n  });\n  let scaleFactor = width / 24;\n  scaleFactor = 1; /*Object.keys(eventFreq).length;\n  if (scaleFactor > 0.7) {\n    scaleFactor = 0.7;\n  } else if (scaleFactor < 0.5) {\n    scaleFactor = 0.5;\n  }*/\n  return (\n    <g>\n      {baseElement}\n      <EventFrequencies\n        frequencies={eventFreq}\n        scaleFactor={scaleFactor}\n        width={width + groupedNodes[0].r}\n        height={height}></EventFrequencies>\n    </g>\n  );\n};\n\nexport default GroupedNodes;\n","import React, { useRef, useEffect } from \"react\";\nimport eventMapping from \"./eventMapping.js\";\nimport Icon from \"@material-ui/core/Icon\";\nimport FileCloudDownload from \"material-ui/core/Icons\";\nimport ThreeDRotation from \"@material-ui/icons/ThreeDRotation\";\n\nimport GroupedNodes from \"./GroupedNodes\";\nimport * as d3 from \"d3\";\nimport chroma from \"chroma-js\";\n\nconst ProvenanceNode = ({ circle, barHeight, renderIcons }: any) => {\n  let node;\n  const height = barHeight - 10;\n\n  if (renderIcons) {\n    let iconSize = barHeight / 2;\n    // Note when rendering other things in svgs, you must only render things that are svg elements can render- they can't render most react components\n    let icon;\n    if (eventMapping[circle.info] !== undefined) {\n      icon = eventMapping[circle.info].icon;\n    } else {\n      icon = <ThreeDRotation width={24} height={24}></ThreeDRotation>;\n    }\n    const y = circle.y - height / 2;\n    const color = \"lightgray\";\n    const width = 21;\n    node = (\n      <g>\n        <rect\n          y={0}\n          x={0}\n          height={height}\n          width={width}\n          fill={color}\n          rx={10}></rect>\n        <g transform={`translate(${2},${14})`}>{icon}</g>\n      </g>\n    );\n  } else {\n    node = (\n      <rect\n        width={3}\n        x={0}\n        height={height}\n        color={\"black\"}\n        opacity={0.25}></rect>\n    );\n  }\n\n  return <g>{node}</g>;\n};\n\nexport default ProvenanceNode;\n","import React, { useRef, useEffect } from \"react\";\nimport GroupedNodes from \"./GroupedNodes\";\nimport ProvenanceNode from \"./ProvenanceNode\";\nimport * as d3 from \"d3\";\nimport chroma from \"chroma-js\";\n\nconst svgWidth = 200;\nconst svgHeight = 100;\nconst margin = { top: 5, right: 5, bottom: 5, left: 5 };\n\nconst ProvenanceNodes = ({\n  provenanceGraph,\n  xScale,\n  renderIcons,\n  eventType,\n}: any) => {\n  if (!provenanceGraph) {\n    return <div></div>;\n  }\n\n  let margin = { top: 5, right: 5, bottom: 5, left: 5 },\n    width = svgWidth - margin.right - margin.left,\n    height = svgHeight - margin.top - margin.bottom;\n  // set domains, needs to take in axis from parent to scale all\n\n  const barHeight = 60;\n  const yOffset = 0;\n\n  let provNodes = [];\n  let xExtents = [];\n  let minimumNodeWidth = 24;\n\n  // calculate groupings. Pass each grouping into <Grouping Etren\n  let currentGroup = [];\n\n  provenanceGraph.nodes.forEach((node) => {\n    if (\n      node.event === \"startedProvenance\" ||\n      node.event === \"Finished Task\" ||\n      (eventType && eventType !== \"overall\" && eventType !== node.event)\n    ) {\n      return;\n    }\n\n    xExtents.push({\n      start: xScale(node.time) - minimumNodeWidth / 2,\n      stop: xScale(node.time) + minimumNodeWidth / 2,\n    });\n\n    provNodes.push({\n      x: xScale(node.time * provenanceGraph.totalTime),\n      y: yOffset + barHeight / 2,\n      r: minimumNodeWidth,\n      fill: \"lightgray\",\n      info: node.event,\n    });\n  });\n  let provElements = [];\n  if (renderIcons) {\n    for (let i = 0; i < provNodes.length; i++) {\n      let d = provNodes[i];\n\n      let item;\n      // if not last node and this element overlaps with next\n      if (i < xExtents.length - 1 && xExtents[i].stop > xExtents[i + 1].start) {\n        let groupedNodes = [];\n        let data = d;\n        // start grouping\n        groupedNodes.push(data);\n        // a group starts\n        while (\n          provNodes.length - 1 > i &&\n          xExtents[i].stop > xExtents[i + 1].start\n        ) {\n          data = provNodes[i + 1];\n          groupedNodes.push(data);\n          i++;\n        }\n        data = provNodes[i];\n        //groupedNodes.push(data);\n        item = (\n          <GroupedNodes\n            groupedNodes={groupedNodes}\n            barHeight={barHeight}></GroupedNodes>\n        );\n      } else {\n        item = (\n          <ProvenanceNode\n            circle={d}\n            barHeight={barHeight}\n            renderIcons={true}></ProvenanceNode>\n        );\n      }\n      provElements.push(\n        <g transform={`translate(${d.x - d.r},${0})`}>{item}</g>\n      );\n    }\n  } else {\n    for (let i = 0; i < provNodes.length; i++) {\n      let d = provNodes[i];\n      let item = (\n        <ProvenanceNode\n          circle={d}\n          barHeight={barHeight}\n          renderIcons={false}></ProvenanceNode>\n      );\n\n      provElements.push(<g transform={`translate(${d.x},${0})`}>{item}</g>);\n    }\n  }\n\n  // for any\n\n  // Note when rendering other things in svgs, you must only render things that are svg elements can render- they can't render most react components\n  return <g>{provElements}</g>;\n};\n\nexport default ProvenanceNodes;\n","import React, { useRef, useEffect } from \"react\";\nimport ProvenanceNodes from \"./ProvenanceNodes\";\nimport eventMapping from \"./eventMapping\";\nimport * as d3 from \"d3\";\nimport chroma from \"chroma-js\";\n\nconst ProvenanceGraph = ({\n  provenanceGraph,\n  xScale,\n  renderIcons,\n  collapseEvents,\n}) => {\n  const [showEvents, setShowEvents] = React.useState(!collapseEvents);\n\n  React.useEffect(() => {\n    setShowEvents(!collapseEvents);\n  }, [collapseEvents]);\n\n  const svgWidth = 250;\n  let svgHeight = 75;\n\n  if (!provenanceGraph) {\n    return <div></div>;\n  }\n\n  const barHeight = 50;\n  const yOffset = 0;\n  const bars = [\n    {\n      x: 0,\n      y: yOffset,\n      width: xScale(provenanceGraph.totalTime),\n      height: barHeight,\n      fill: \"gray\",\n      type: \"overall\",\n    },\n  ];\n\n  let provNodes = [];\n  let eventTypes = new Set();\n  provenanceGraph.nodes.forEach((node) => {\n    if (node.event === \"startedProvenance\" || node.event === \"Finished Task\") {\n      return;\n    }\n    eventTypes.add(node.event);\n    provNodes.push({\n      x: xScale(node.absoluteTime),\n      y: yOffset + barHeight / 2,\n      r: barHeight / 3,\n      fill: \"whitesmoke\",\n    });\n  });\n  if (showEvents) {\n    svgHeight = svgHeight * (eventTypes.size + 1);\n    let counter = 1;\n    eventTypes.forEach((type) => {\n      bars.push({\n        x: 0,\n        y: (barHeight + 10) * counter,\n        width: xScale(provenanceGraph.totalTime),\n        height: barHeight,\n        fill: \"lightgray\",\n        type: type,\n      });\n      counter++;\n    });\n  }\n\n  // Note when rendering other things in svgs, you must only render things that are svg elements can render- they can't render most react components\n  return bars.map((d, i) => {\n    return (\n      <g>\n        <rect key={i} width={d.width} height={d.height} fill={d.fill} />\n        <ProvenanceNodes\n          provenanceGraph={provenanceGraph}\n          xScale={xScale}\n          renderIcons={renderIcons && d.type === \"overall\"}\n          eventType={d.type}></ProvenanceNodes>\n      </g>\n    );\n  });\n};\n\nexport default ProvenanceGraph;\n","import React from \"react\";\nimport eventMapping from \"./eventMapping.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fade from \"@material-ui/core/Fade\";\nimport styles from \"./ProvenanceIsolatedNodes.module.css\";\nconst ProvenanceIsolatedNodes = ({ nodes }) => {\n  return (\n    <div className={styles.wrapper}>\n      {nodes.map((node) => (\n        <IsolatedNode node={node}></IsolatedNode>\n      ))}\n    </div>\n  );\n};\n\nconst IsolatedNode = ({ node }) => {\n  const icon = eventMapping[node.event].icon;\n\n  return node.event !== \"startedProvenance\" &&\n    node.event !== \"Finished Task\" ? (\n    <Tooltip\n      TransitionComponent={Fade}\n      TransitionProps={{ timeout: 600 }}\n      title={node.event}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            offset: {\n              enabled: true,\n              offset: \"0px, -6px\",\n            },\n          },\n        },\n      }}\n      arrow>\n      <svg width={34} height={34}>\n        <rect\n          x={0}\n          y={0}\n          width={30}\n          height={30}\n          rx={5}\n          fill={eventMapping[node.event].color}></rect>\n        <g transform={`translate(7,5)`}>{icon}</g>\n      </svg>\n    </Tooltip>\n  ) : (\n    <div></div>\n  );\n};\n\nexport default ProvenanceIsolatedNodes;\n","import React from \"react\";\nimport ReactTags from \"react-tag-autocomplete\";\nimport \"./reacttags.css\";\n\nconst TagWrapper = ({ tags, onTagChange, isMaster }) => {\n  function handleAddTag(tag) {\n    onTagChange(\"Add\", tag);\n  }\n  function handleDeleteTag(i) {\n    const allTags = tags.slice(0);\n    const tag = allTags.splice(i, 1);\n    onTagChange(\"Delete\", tag);\n  }\n  return (\n    <ReactTags\n      autofocus={false}\n      tags={tags}\n      allowNew={true}\n      handleDelete={handleDeleteTag}\n      handleAddition={handleAddTag}\n    />\n  );\n};\nexport default TagWrapper;\n","import React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport * as d3 from \"d3\";\nimport { select, event } from \"d3-selection\";\nimport { scaleLinear } from \"d3-scale\";\nimport { brushX } from \"d3-brush\";\nimport { axisBottom } from \"d3-axis\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fade from \"@material-ui/core/Fade\";\n\nfunction obtainItemCounts(arr) {\n  let occurrences = {};\n  for (let i = 0, j = arr.length; i < j; i++) {\n    occurrences[arr[i]] = (occurrences[arr[i]] || 0) + 1;\n  }\n  return occurrences;\n}\nexport const CategoricalFilter = ({\n  data,\n  width,\n  scale,\n  labels,\n  columnDef,\n  onFilterChanged,\n}) => {\n  const occurrences = useMemo(() => obtainItemCounts(data), [data]);\n  // search through data for all states\n  const [currentFilter, setCurrentFilter] = useState(Object.keys(occurrences));\n  const height = 20;\n  const fullHeight = 20 + 15;\n  console.log(\"labels\", labels);\n  const maxOccurance = Object.values(occurrences).reduce((a, b) =>\n    a > b ? a : b\n  );\n  const yScale = d3.scaleLinear().domain([0, maxOccurance]).range([0, height]);\n  useEffect(() => {\n    onFilterChanged(columnDef.tableData.id, currentFilter);\n  }, [currentFilter]);\n\n  return (\n    <svg width={width} height={fullHeight}>\n      {Object.entries(occurrences).map(([key, value], index) => {\n        console.log(\"dywootto,\", key === true, value);\n        //key = key === \"true\" ? true : false;\n        console.log(\"labelkey\", key, labels[key]);\n        const color = currentFilter.includes(key) ? \"black\" : \"#cfcfcf\";\n        return (\n          <Tooltip\n            TransitionComponent={Fade}\n            TransitionProps={{ timeout: 600 }}\n            title={key}\n            PopperProps={{\n              popperOptions: {\n                modifiers: {\n                  offset: {\n                    enabled: true,\n                    offset: \"0px, -6px\",\n                  },\n                },\n              },\n            }}>\n            <g\n              pointerEvents={\"bounding-box\"}\n              onClick={() => {\n                const indexOfValue = currentFilter.indexOf(key);\n                let temp = Object.assign([], currentFilter);\n\n                if (indexOfValue > -1) {\n                  temp.splice(indexOfValue, 1);\n                } else {\n                  temp.push(key);\n                }\n                setCurrentFilter(temp);\n              }}\n              cursor={\"pointer\"}\n              fill={\"none\"}>\n              <rect\n                x={scale(key)}\n                width={20}\n                height={yScale(value)}\n                y={height - yScale(value)}\n                fill={color}></rect>\n\n              <g transform={`translate(${scale(key)},${height})`} fill={color}>\n                {labels[key]}\n              </g>\n            </g>\n          </Tooltip>\n        );\n      })}\n    </svg>\n  );\n};\n\nexport const Histogram = ({ data, width, height }) => {\n  const max = d3.max(data),\n    min = d3.min(data);\n\n  // the scale\n  let x = d3.scaleLinear().range([0, width - 10]);\n  let y = d3.scaleLinear().range([height - 2, 0]);\n  let niceX = d3.scaleLinear().range([0, width]).domain([0, max]).nice();\n  const binner = d3.histogram().domain(niceX.domain());\n  const buckets = binner(data);\n  let xBand = d3\n    .scaleBand()\n    .domain(d3.range(0, buckets.length))\n    .range([0, width]);\n\n  x.domain([0, d3.max(data)]);\n  y.domain([0, d3.max(buckets, (bucket) => bucket.length)]);\n  const binWidth = xBand.bandwidth();\n  const bars = (\n    <g transform={`translate(${(1 / 3) * binWidth},0)`}>\n      {buckets.map((bucket, index) => {\n        return (\n          <rect\n            key={index}\n            x={x(bucket.x0) - 0.5 * binWidth} // 1/2 xBandwidth to move to middle 1/2 another because of -1 index on xBand domain\n            y={y(bucket.length)}\n            width={binWidth}\n            height={height - y(bucket.length)}></rect>\n        );\n      })}\n    </g>\n  );\n\n  return bars;\n};\n\nconst Brush = (props) => {\n  const width = props.width;\n  const scale = props.scale;\n  const height = props.height;\n  const brushRef = useRef(null);\n  const onBrushFunction = props.onChange;\n  //const width = props.width;\n  //const scale = scaleLinear().domain([0, 30]).range([0, width]);\n  useEffect(() => {\n    const node = brushRef.current;\n\n    const dayBrush = brushX()\n      .extent([\n        [0, 0],\n        [width, height],\n      ])\n      //.on(\"brush\", brushed)\n      .on(\"end\", cleared);\n\n    select(node)\n      .selectAll(\"g.brush\")\n      .data([0])\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"brush\");\n\n    select(node).select(\"g.brush\").call(dayBrush);\n\n    /*\n    Code for updating brush if we want it to dynamically update while brushing\n    function brushed() {\n      console.warn(event);\n      onBrushFunction(event.selection);\n    }*/\n    function cleared() {\n      console.warn(\"clear\", event);\n      onBrushFunction(event.selection);\n    }\n  });\n  return (\n    <svg ref={brushRef} height={height} width={width}>\n      {props.children}\n    </svg>\n  );\n};\n\nconst BrushableHistogram = ({ data, xScale, setMinimum, setMaximum }) => {\n  const width = xScale.range()[1];\n  const height = 20;\n  const scale = xScale;\n\n  function setFilterBounds(inputs) {\n    if (inputs?.length !== 2) {\n      inputs = xScale.domain();\n    }\n    // scale inversion\n    setMinimum(scale.invert(inputs[0]));\n    // set bounds\n    setMaximum(scale.invert(inputs[1]));\n  }\n\n  return (\n    <Brush\n      width={width}\n      height={height}\n      scale={scale}\n      onChange={setFilterBounds}>\n      <Histogram\n        data={data}\n        width={width}\n        height={height}\n        scale={scale}></Histogram>\n    </Brush>\n  );\n};\n\nexport const TimeFilter = ({ data, xScale, columnDef, onFilterChanged }) => {\n  const [minimum, setMinimum] = useState(d3.min(data));\n  const [maximum, setMaximum] = useState(d3.max(data));\n  const debouncedMin = useDebounce(minimum, 100);\n  const debouncedMax = useDebounce(maximum, 100);\n  useEffect(() => {\n    onFilterChanged(columnDef.tableData.id, [debouncedMin, debouncedMax]);\n  }, [debouncedMin, debouncedMax]);\n  return (\n    <BrushableHistogram\n      xScale={xScale}\n      data={data}\n      setMinimum={setMinimum}\n      setMaximum={setMaximum}></BrushableHistogram>\n  );\n};\nfunction useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n","//@ts-nocheck\n\nimport React, { forwardRef, useMemo } from \"react\";\nimport MaterialTable, {\n  MTableToolbar,\n  MTableAction,\n  MTableActions,\n  MTableFilterRow,\n} from \"material-table\";\nimport ProvenanceGraph from \"./ProvenanceGraph\";\nimport ProvenanceIsolatedNodes from \"./ProvenanceIsolatedNodes\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport Label from \"@material-ui/icons/Label\";\n// typings are here:\nimport { Icons } from \"material-table\";\nimport * as d3 from \"d3\";\nimport TagsInput from \"react-tagsinput\";\nimport eventMapping from \"./eventMapping\";\nimport TagStyles from \"./tagstyles.module.css\";\nimport TagWrapper from \"./reactTagWrapper\";\nimport { TimeFilter, CategoricalFilter } from \"./TableFilters\";\n\nconst tableIcons: Icons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\n// import data\nconst width = 200;\nconst MaterialTableWrapper = ({ provenanceData }) => {\n  const [checkedTags, setCheckedTags] = React.useState([]);\n  const [rerender, setRerender] = React.useState(false);\n  const [min, max] = d3.extent(\n    provenanceData,\n    (datum) => datum.provGraph.totalTime\n  );\n\n  const xScale = d3.scaleLinear().domain([0, max]).range([0, width]);\n\n  function renderProvenanceNodes(data) {\n    console.log(\"render provenance nodes called\");\n    return (\n      <ProvenanceIsolatedNodes\n        nodes={data.provGraph.nodes}></ProvenanceIsolatedNodes>\n    );\n  }\n  function renderProvenanceTime(data) {\n    console.log(\"render provenance time called\");\n    return (\n      <svg width={250} height={20}>\n        <ProvenanceGraph\n          provenanceGraph={data.provGraph}\n          xScale={xScale}\n          renderIcons={false}\n          collapseEvents={true}\n        />\n      </svg>\n    );\n  }\n\n  const [timeColumn] = React.useState({\n    title: \"Time To Complete\",\n    field: \"provGraph\",\n    width: 250,\n    cellStyle: {\n      maxWidth: 250,\n      padding: \"4px 16px\",\n    },\n    customSort: (a, b) => a.provGraph.totalTime - b.provGraph.totalTime,\n    render: renderProvenanceTime,\n    customFilterAndSearch: (filterResults, datum) => {\n      // https://github.com/mbrn/material-table/pull/1351\n      if (\n        datum.provGraph.totalTime >= filterResults[0] &&\n        datum.provGraph.totalTime <= filterResults[1]\n      ) {\n        return true;\n      }\n      delete datum.tableData.checked;\n\n      return false;\n    },\n\n    filterComponent: (props) => (\n      <TimeFilterObj\n        {...props}\n        xScale={xScale}\n        data={provenanceData.map(\n          (graph) => graph.provGraph.totalTime\n        )}></TimeFilterObj>\n    ),\n  });\n  function generateCategoricalScale(data, width) {\n    const uniqueValues = Array.from(new Set(data));\n    return d3\n      .scaleBand()\n      .rangeRound([0, width])\n      .padding(0)\n      .domain(uniqueValues);\n  }\n\n  let correctWidth = 50;\n  let correctScale = generateCategoricalScale([\"true\", \"false\"], correctWidth);\n\n  const eventNodes = useMemo(() => {\n    return provenanceData\n      .map((graph) => graph.provGraph.nodes.map((node) => node.event))\n      .flat()\n      .filter(\n        (item) => item !== \"startedProvenance\" && item !== \"Finished Task\"\n      );\n  });\n\n  let eventWidth = 250;\n  let eventScale = generateCategoricalScale(eventNodes, eventWidth);\n  /*let correctScale = d3\n    .scaleBand()\n    .rangeRound([0, correctWidth])\n    .padding(0)\n    .domain([true, false]);*/\n\n  function renderProvenanceAccuracy(rowData) {\n    console.log(rowData);\n    //const values = [true, false];\n    console.log(\"x\", correctScale(rowData.provGraph.correct));\n    return (\n      <svg width={100} height={20}>\n        <rect\n          x={correctScale(rowData.provGraph.correct)}\n          width={20}\n          height={20}></rect>\n      </svg>\n    );\n  }\n  const allObj = {};\n  Object.keys(eventMapping).forEach((eventKey) => {\n    allObj[eventKey] = eventMapping[eventKey].icon;\n  });\n\n  const [correct] = React.useState({\n    title: \"Accuracy\",\n    field: \"provGraph correct\",\n    width: correctWidth + 10,\n    cellStyle: {\n      maxWidth: correctWidth + 10,\n      padding: \"4px 16px\",\n    },\n    customSort: (a, b) => a.provGraph.correct - b.provGraph.correct,\n    render: renderProvenanceAccuracy,\n    customFilterAndSearch: (filterResults, datum) => {\n      // https://github.com/mbrn/material-table/pull/1351\n      if (filterResults.includes(datum.provGraph.correct)) {\n        return true;\n      }\n      delete datum.tableData.checked;\n\n      return false;\n    },\n\n    filterComponent: (props) => (\n      <CategoricalFilter\n        {...props}\n        width={correctWidth}\n        scale={correctScale}\n        labels={{ true: \"true\", false: \"false\" }}\n        data={provenanceData.map(\n          (graph) => graph.provGraph.correct\n        )}></CategoricalFilter>\n    ),\n  });\n\n  const [eventsCol] = React.useState({\n    title: \"Events Used\",\n    field: \"provGraph\",\n    width: 500,\n    cellStyle: {\n      maxWidth: 500,\n      padding: \"4px 16px\",\n    },\n    customSort: (a, b) => a.provGraph.nodes.length - b.provGraph.nodes.length,\n    render: renderProvenanceNodes,\n    customFilterAndSearch: (filterResults, datum) => {\n      console.log(filterResults, datum);\n      // https://github.com/mbrn/material-table/pull/1351\n      for (let i = 0; i < datum.provGraph.nodes.length; i++) {\n        if (filterResults.includes(datum.provGraph.nodes[i].event)) {\n          return true;\n        }\n      }\n      // unselect any filtered items\n      delete datum.tableData.checked;\n      return false;\n    },\n    filterComponent: (props) => (\n      <CategoricalFilter\n        {...props}\n        width={eventWidth}\n        scale={eventScale}\n        labels={allObj}\n        data={eventNodes}></CategoricalFilter>\n    ),\n  });\n  const [notesColumn] = React.useState({\n    title: \"Notes\",\n    field: \"None\",\n    cellStyle: {\n      padding: \"4px 16px\",\n    },\n    width: 500,\n    customSort: (a, b) => b.tableData.tags.length - a.tableData.tags.length,\n    filterComponent: () => <div></div>,\n    render: (rowData) => {\n      if (!Array.isArray(rowData.tableData?.tags)) {\n        rowData.tableData.tags = [];\n      }\n      return (\n        <TagWrapper\n          tags={rowData.tableData.tags}\n          onTagChange={(action, tag) => {\n            // check if rowData is selected;\n            if (action === \"Add\") {\n              rowData.tableData.tags.push(tag);\n            } else {\n              const index = rowData.tableData.tags.findIndex((iterTag) => {\n                return iterTag.name === tag[0]?.name;\n              });\n              if (index > -1) {\n                rowData.tableData.tags.splice(index, 1);\n              }\n            }\n          }}></TagWrapper>\n      );\n    },\n  });\n  const TimeFilterObj = TimeFilter;\n  return (\n    <MaterialTable\n      title={\"Provenance Table\"}\n      components={{\n        Actions: (props) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                float: \"left\",\n                backgroundColor: \"#ffe2ec\",\n              }}>\n              <MTableActions {...props}></MTableActions>\n            </div>\n          );\n        },\n        Action: (props) => {\n          if (props.action.myComponent) {\n            let ActionComponent = props.action.myComponent;\n            //@ts-ignore\n            return <ActionComponent {...props}></ActionComponent>;\n          }\n          return <MTableAction {...props}></MTableAction>;\n        },\n        FilterRow: (props) => {\n          let styles = {\n            \"&:nth-child(2)\": {\n              position: \"sticky\",\n              top: \"64px\",\n              background: \"white\",\n            },\n          };\n          return <MTableFilterRow styles={styles} {...props}></MTableFilterRow>;\n        },\n      }}\n      columns={[timeColumn, correct, eventsCol, notesColumn]}\n      onSelectionChange={(selections) => {\n        if (selections.length === 0) {\n          setCheckedTags([]);\n        }\n      }}\n      actions={[\n        {\n          myComponent: (props) => {\n            return (\n              <TagWrapper\n                tags={checkedTags.filter((tag) => !tag.removed)}\n                onTagChange={(action, tag) => {\n                  // check if rowData is selected;\n                  if (action === \"Add\") {\n                    let temp = Object.assign([], checkedTags);\n                    let existing = temp.find(\n                      (checkedTags) => checkedTags.name === tag.name\n                    );\n                    if (existing) {\n                      existing.removed = false;\n                    } else {\n                      temp.push(tag);\n                    }\n\n                    setCheckedTags(temp);\n                  } else {\n                    let index = checkedTags.findIndex(\n                      (item) => item.name === tag?.[0].name\n                    );\n                    let temp = Object.assign([], checkedTags);\n\n                    if (index > -1) {\n                      temp[index].removed = true;\n                    }\n                    setCheckedTags(temp);\n                  }\n                }}></TagWrapper>\n            );\n          },\n        },\n        {\n          tooltip: \"Update tags of selected rows (appends ontop).\",\n          icon: (props, ref) => <Label {...props} ref={ref} />,\n          onClick: (evt, data) => {\n            data.forEach((datum) => {\n              if (datum.tableData.checked) {\n                checkedTags.forEach((tag) => {\n                  const datumTagIndex = datum.tableData.tags.findIndex(\n                    (currentTag) => currentTag.name === tag.name\n                  );\n                  if (datumTagIndex === -1) {\n                    if (!tag.removed) {\n                      datum.tableData.tags.push(tag);\n                    }\n                  } else {\n                    if (tag.removed) {\n                      datum.tableData.tags.splice(datumTagIndex, 1);\n                    }\n                  }\n                });\n              }\n            });\n            setRerender(!rerender);\n          },\n        },\n      ]}\n      data={provenanceData}\n      icons={tableIcons}\n      options={{\n        selection: true,\n        search: false,\n        paging: false,\n        filtering: true,\n        maxBodyHeight: \"93vh\",\n      }}\n    />\n  );\n};\n\nexport default MaterialTableWrapper;\n\n/*[\n        {\n          name: \"Mehmet\",\n          surname: \"Baran\",\n          birthYear: 1987,\n          birthCity: 63,\n          imageUrl:\n            \"https://avatars0.githubusercontent.com/u/7895451?s=460&v=4\",\n        },\n        {\n          name: \"Zerya Betül\",\n          surname: \"Baran\",\n          birthYear: 2017,\n          birthCity: 34,\n          imageUrl:\n            \"https://avatars0.githubusercontent.com/u/7895451?s=460&v=4\",\n        },\n      ]*/\n","import React from \"react\";\nimport { relativeProvenanceData } from \"../common/data/provenanceMocks.js\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport MaterialTableWrapper from \"../components/ProvenanceTable\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst Table = ({ location }) => {\n  const [taskIndex, setTaskIndex] = React.useState(0);\n\n  function handleChange(event) {\n    console.log(event);\n    setTaskIndex(event.target.value);\n  }\n  let newData = relativeProvenanceData[taskIndex].map((dataArr) => {\n    console.log(\"in rerunnew data\");\n    return { provGraph: dataArr };\n  });\n  for (let i = 0; i < 0; i++) {\n    newData = newData.concat(_.cloneDeep(newData));\n  }\n  const valuesArr = [\n    { name: \"Task 1\", key: 0 },\n    { name: \"Task 2\", key: 1 },\n    { name: \"Task 3\", key: 2 },\n    { name: \"Task 4\", key: 3 },\n    { name: \"Task 5\", key: 4 },\n    { name: \"Task 6\", key: 5 },\n    { name: \"Task 7\", key: 6 },\n    { name: \"Task 8\", key: 7 },\n    { name: \"Task 9\", key: 8 },\n  ];\n\n  return (\n    <div>\n      <FormControl variant=\"outlined\">\n        <InputLabel id=\"demo-simple-select-outlined-label\">\n          Selected Task\n        </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={taskIndex}\n          onChange={handleChange}\n          label=\"name\">\n          {valuesArr.map((value) => {\n            return <MenuItem value={value.key}>{value.name}</MenuItem>;\n          })}\n        </Select>\n      </FormControl>\n      <MaterialTableWrapper provenanceData={newData} />\n    </div>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport styles from \"./Main.module.css\";\nimport _ from \"lodash\";\nimport { relativeProvenanceData } from \"./common/data/provenanceMocks.js\";\nimport MaterialTableWrapper from \"./components/ProvenanceTable\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport Upload from \"./pages/Upload\";\nimport Overview from \"./pages/Overview\";\nimport Export from \"./pages/Export\";\nimport Table from \"./pages/Table\";\n\nconst Main = ({ location }) => {\n  return (\n    <Wrapper>\n      <TransitionGroup className=\"transition-group\">\n        <CSSTransition key={location.key} timeout={500} classNames=\"fade\">\n          <section className=\"route-section\">\n            <Switch location={location}>\n              <Route path=\"/Upload\" component={Upload}></Route>\n              <Route path=\"/Overview\" component={Overview}></Route>\n              <Route path=\"/Table\" component={Table}></Route>\n              <Route path=\"/Export\" component={Export}></Route>\n            </Switch>\n          </section>\n        </CSSTransition>\n      </TransitionGroup>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  .fade-enter {\n    opacity: 0.01;\n  }\n\n  .fade-enter.fade-enter-active {\n    opacity: 1;\n    transition: opacity 300ms ease-in;\n  }\n\n  .fade-exit {\n    opacity: 1;\n  }\n\n  .fade-exit.fade-exit-active {\n    opacity: 0.01;\n    transition: opacity 300ms ease-in;\n  }\n\n  div.transition-group {\n    position: relative;\n  }\n\n  section.route-section {\n    position: absolute;\n    width: 100%;\n    top: 0;\n    left: 0;\n  }\n`;\nexport default withRouter(Main);\n","import React from \"react\";\nimport styles from \"./SidePane.module.css\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport CloudUpload from \"@material-ui/icons/CloudUpload\";\nimport TableChart from \"@material-ui/icons/TableChart\";\nimport GetApp from \"@material-ui/icons/GetApp\";\nimport BarChart from \"@material-ui/icons/BarChart\";\nimport { Link, LinkProps } from \"react-router-dom\";\nconst SidePane = ({ }) => {\n  const HomeLink = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Home\" {...props} />);\n  const Upload = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Upload\" {...props} />);\n  const Overview = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Overview\" {...props} />);\n  const Table = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Table\" {...props} />);\n  const Export = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Export\" {...props} />);\n  return (\n    <Drawer variant=\"permanent\" anchor=\"left\">\n      <Divider />\n      <List>\n        <ListItem component={HomeLink}>\n          <img className={styles.logo} src={\"./Experi.png\"}></img>\n        </ListItem>\n        {[\n          { text: \"Upload\", link: Upload, icon: <CloudUpload></CloudUpload> },\n          { text: \"Overview\", link: Overview, icon: <BarChart></BarChart> },\n          {\n            text: \"Participant Table\",\n            link: Table,\n            icon: <TableChart></TableChart>,\n          },\n          { text: \"Export\", link: Export, icon: <GetApp></GetApp> },\n        ].map((item, index) => {\n          return (\n            //added key={index} to get rid of unique key error\n            <React.Fragment key={index}>\n              <ListItem button component={item.link}>\n                <ListItemIcon>{item.icon}</ListItemIcon>\n                <ListItemText primary={item.text} />\n              </ListItem>\n            </React.Fragment>\n          );\n        })}\n      </List>\n      <Divider />\n    </Drawer>\n  );\n};\n\nexport default SidePane;\n","import React from \"react\";\nimport { MemoryRouter, Link as RouterLink } from \"react-router-dom\";\nimport styles from \"./App.module.css\";\nimport Main from \"./Main\";\nimport SidePane from \"./SidePane\";\nimport 'antd/dist/antd.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MemoryRouter initialEntries={[\"/\"]} initialIndex={0}>\n        <div className={styles.container}>\n          <div className={styles.sidePane}>\n            <SidePane></SidePane>\n          </div>\n          <div className={styles.main}>\n            <Main></Main>\n          </div>\n        </div>\n      </MemoryRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}