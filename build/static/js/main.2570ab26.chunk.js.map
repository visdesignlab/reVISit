{"version":3,"sources":["App.module.css","components/ProvenanceIsolatedNodes.module.css","SidePane.module.css","fetchers/fetchMocks.js","hooks/hooks.js","components/ProvenanceDataContext.tsx","components/eventMapping.js","components/ProvenanceIsolatedNodes.tsx","pages/Home.tsx","pages/Upload.tsx","components/GroupSelector.tsx","components/EventAccordion.tsx","pages/Overview.tsx","pages/Export.tsx","components/ProvenanceNode.tsx","components/ProvenanceNodes.tsx","components/ProvenanceGraph.tsx","components/reactTagWrapper.tsx","components/TableFilters.tsx","components/ProvenanceTable.tsx","pages/Table.tsx","Main.tsx","components/sortMenu.tsx","SidePane.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","performPrefixSpan","data","a","console","log","postData","res","uri","postBody","fetchOptions","defaultHeaders","url","method","headers","body","JSON","stringify","completePromise","requestOptions","fetch","response","json","success","ok","useFetchAPIData","fetchingFunc","dependencies","useState","isLoading","setIsLoading","errorMessage","setErrorMessage","fetchedData","setFetchedData","onError","error","useEffect","then","result","message","catch","ProvenanceDataContext","React","createContext","ProvenanceDataContextProvider","children","taskStructure","name","key","prompt","actions","stats","taskSort","setTaskSort","unrelativeProvenanceData","filter","d","Object","keys","length","t","includes","reduce","acc","task","provenance","p","event","relativeProvenanceData","_","cloneDeep","forEach","taskId","longestTimeForTask","d3","participant","startTime","endTime","Date","index","taskPerformance","maxTime","totalTime","scale","map","node","calculateRelativeProvGraph","id","processRawProvenanceData","initProvData","allProvenanceData","setAllProvenanceData","conditions","Set","visType","accScale","domain","range","timeScale","thresholds","ticks","value","answer","accuracy","timeHistogram","minutesOnTask","singleParticipant","replace","condition","taskConditionData","histogram","average","values","Math","round","e","time","sort","b","meanAcc_a","meanAcc_b","c","push","meanA","meanB","abs","events","userData","k","i","type","visible","groups","listNativeEvents","setEvents","selectedTaskIds","setSelectedTaskIds","patterns","setPatterns","newEvents","count","sequences","selectedTaskId","participantData","find","ev","allEvents","currentTaskData","useMemo","internalTaskData","newObj","assign","dataFromServer","eventObj","arr","seq","s","Provider","handleChangeSelectedTaskId","target","hideEvent","eventName","newEvent","newName","renameEvent","origName","renameHelper","deleteEvent","toDelete","addRemoveChild","group","groupEvent","currentChildren","addChild","child","nativeEvent","reverse","parse","splice","g","colors","answerSelectColor","dragColor","sortColor","selectColor","searchColor","clearColor","eventMapping","custom","color","icon","width","height","startedProvenance","answerBox","attrRow","IsolatedNode","eventMap","Tooltip","TransitionComponent","Fade","TransitionProps","timeout","title","PopperProps","popperOptions","modifiers","offset","enabled","arrow","x","y","rx","fill","transform","ProvenanceIsolatedNodes","nodes","className","styles","wrapper","useStyles","makeStyles","root","minWidth","flexGrow","bullet","display","margin","fontSize","pos","marginBottom","maxValue","SimpleCard","classes","useContext","taskTooltip","Typography","Box","m","style","Card","CardContent","variant","component","slice","Divider","cond","frequentActions","entries","Grid","container","spacing","item","xs","justify","mt","mb","metric","label","opacity","cx","cy","r","scatter","xDomain","x0","yDomain","xScale","yScale","CardActions","Button","size","Upload","theme","marginTop","Tags","props","Autocomplete","multiple","options","getOptionLabel","option","onChange","reason","renderInput","params","TextField","placeholder","ItemNameWrapper","itemName","onItemNameChange","doubleClicked","setDoubleClicked","currentName","setCurrentName","onClick","stopPropagation","onDoubleClick","onKeyPress","withStyles","hide","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","verticalAlign","details","alignItems","column","flexBasis","smallColumn","helper","borderLeft","divider","padding","link","primary","main","textDecoration","attr","countScale","rectangle","hideEventFcn","VisibilityRounded","VisibilityOffRounded","del","deleteCustomEvent","HighlightOffRounded","all","baseIcons","ExpansionPanelDetails","f","icons","ExpansionPanel","ExpansionPanelSummary","expandIcon","classNames","nodeLink","adjMatrix","Search","Input","Overview","location","enterButton","PlusSquareOutlined","onSearch","Export","ProvenanceNode","nodeData","barHeight","renderIcons","ProvenanceNodes","performance","eventType","provNodes","yOffset","info","provElements","ProvenanceGraph","bars","eventTypes","add","TagWrapper","tags","onTagChange","isMaster","autofocus","allowNew","handleDelete","tag","handleAddition","CategoricalFilter","labels","columnDef","onFilterChanged","occurrences","j","obtainItemCounts","currentFilter","setCurrentFilter","maxOccurance","tableData","pointerEvents","indexOfValue","indexOf","temp","cursor","Histogram","max","niceX","nice","buckets","binner","xBand","bucket","binWidth","bandwidth","Brush","brushRef","useRef","onBrushFunction","current","dayBrush","brushX","extent","on","warn","selection","select","selectAll","enter","append","call","ref","BrushableHistogram","setMinimum","setMaximum","inputs","invert","TimeFilter","minimum","maximum","debouncedMin","useDebounce","debouncedMax","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","ViewColumn","generateCategoricalScale","uniqueValues","Array","from","rangeRound","renderNotesCell","rowData","isArray","action","findIndex","iterTag","renderNotesColumn","notesColumnWidth","field","cellStyle","customSort","filterComponent","render","renderProvenanceNodeCell","renderProvenanceNodeColumn","currentProvenanceData","eventColumnWidth","eventNodes","graph","flat","eventScale","allObj","eventKey","maxWidth","customFilterAndSearch","filterResults","datum","checked","renderAccuracyColumn","columnWidth","accuracyScale","renderAccuracyCell","true","false","correct","renderTimeColumn","renderTimeCell","MaterialTableWrapper","provenanceData","checkedTags","setCheckedTags","rerender","setRerender","userIdColumnWidth","renderUserIdColumn","userIdColumnDefinition","stimulusColumnDefinition","timeColumnDefinition","setTimeColumnDefinition","accuracyColumnDefinition","setAccuracyColumnDefinition","eventsColumnDefinition","setEventsColumnDefinition","notesColumnDefinition","setNotesColumnDefinition","components","Actions","float","backgroundColor","Action","myComponent","ActionComponent","FilterRow","position","top","background","GroupRow","columns","onSelectionChange","selections","removed","existing","tooltip","evt","datumTagIndex","currentTag","search","paging","pageSize","filtering","maxBodyHeight","grouping","Table","Wrapper","styled","div","withRouter","TransitionGroup","CSSTransition","path","Home","createStyles","SortMenu","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","flexDirection","List","aria-label","ListItem","button","aria-haspopup","aria-controls","currentTarget","ListItemText","keepMounted","open","Boolean","onClose","MenuItem","selected","handleMenuItemClick","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","mixins","content","SidePane","useTheme","setOpen","HomeLink","innerRef","to","taskInfo","useLocation","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","pathname","FormControl","SelectedTaskInput","Select","labelId","ml","noWrap","dangerouslySetInnerHTML","__html","Drawer","paper","direction","HomeIcon","CloudUpload","BarChart","TableChart","GetApp","Fragment","ListItemIcon","isCurrent","Icon","makeIcon","App","initialEntries","initialIndex","sidePane","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2570ab26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"header\":\"App_header__3ZZ1n\",\"logo\":\"App_logo__1ItuU\",\"sidePane\":\"App_sidePane__3RleR\",\"main\":\"App_main__3ZkGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProvenanceIsolatedNodes_wrapper__3cJfW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"SidePane_logo__3vZO1\",\"SelectedTaskInput\":\"SidePane_SelectedTaskInput__1nreK\"};","/*import {\n    postData\n} from \"./fetchingUtilities\";*/\n\nexport async function performPrefixSpan(data) {\n    console.log('postData is ', data)\n    let res = await postData(\n        // \"http://18.222.101.54//prefix\", data\n        \"http://127.0.0.1:5000/prefix\", data\n    );\n    console.log(\"dywootto\", res);\n    return res;\n}\n\nexport async function postData(uri, postBody, fetchOptions) {\n    let defaultHeaders = {\n        url: uri,\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\",\n        },\n        body: JSON.stringify(postBody),\n    };\n    return await completePromise(uri, defaultHeaders);\n}\nexport async function completePromise(uri, requestOptions) {\n    let response;\n    try {\n        response = await fetch(uri, requestOptions);\n        console.log(\"inpromise\", response);\n        response.data = await response.json();\n        response.success = response.ok;\n    } catch (err) {\n        throw err;\n    }\n    return response;\n}\n//let res = await mockAPICall(\"www.example.com\", { work: \"yeah\" }); you can mock out api calls using this","import React, {\n    useState,\n    useEffect\n} from 'react';\n\nexport function useFetchAPIData(fetchingFunc, dependencies) {\n    const [isLoading, setIsLoading] = useState(null);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [fetchedData, setFetchedData] = useState(null);\n\n    const onLoadingStart = () => {\n        setIsLoading(true);\n        setErrorMessage(\"\");\n    };\n\n    const onError = (error) => {\n        setIsLoading(false);\n        setErrorMessage(error);\n    };\n\n    const onDataFetched = (data) => {\n        setFetchedData(data);\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        onLoadingStart();\n        fetchingFunc()\n            .then(\n                (result) => {\n                    const success = result && result.success;\n                    console.log(\"result\", result);\n                    if (success && result.data) {\n                        //const fetchData = result && result.data;\n                        onDataFetched(result.data);\n                    } else {\n                        onError(`Error occured obtaining data from server`);\n                    }\n                },\n                (error) => {\n                    onError(`Error occured during data fetch ${error?.message}`);\n                }\n            )\n            .catch((error) => {\n                onError(`Error occured after data fetched ${error?.message}`);\n            });\n    }, [...dependencies]);\n    return [isLoading, errorMessage, fetchedData];\n}","import React, { useState, useEffect, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport initProvData from \"../common/data/provenance_summary.json\";\nimport prefixSpanSampleData from \"../common/data/prefix_span_sample_data.json\";\nimport * as d3 from \"d3\";\nimport _ from \"lodash\";\nimport { performPrefixSpan } from \"../fetchers/fetchMocks.js\";\nimport { useFetchAPIData } from \"../hooks/hooks\";\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\n\nconst ProvenanceDataContext = React.createContext({});\n\nexport const ProvenanceDataContextProvider = ({ children }) => {\n\n  const taskStructure = [\n    { name: \"Task 1\", key: \"S-task01\", prompt: \"\", actions: {}, stats: {} },\n    { name: \"Task 2\", key: \"S-task02\" },\n    { name: \"Task 3\", key: \"S-task03\" },\n    { name: \"Task 4\", key: \"S-task04\" },\n    { name: \"Task 5\", key: \"S-task05\" },\n    { name: \"Task 6\", key: \"S-task06\" },\n    { name: \"Task 7\", key: \"S-task07\" },\n    { name: \"Task 8\", key: \"S-task08\" },\n    { name: \"Task 9\", key: \"S-task09\" },\n    { name: \"Task 10\", key: \"S-task10\" },\n    { name: \"Task 11\", key: \"S-task11\" },\n    { name: \"Task 12\", key: \"S-task12\" },\n    { name: \"Task 13\", key: \"S-task13\" },\n    { name: \"Task 14\", key: \"S-task14\" },\n    { name: \"Task 15\", key: \"S-task15\" },\n    { name: \"Task 16\", key: \"S-task16\" },\n  ];\n\n  let [taskSort, setTaskSort] = useState('name');\n\n  const [allProvenanceData, setAllProvenanceData] = useState(() => processRawProvenanceData(initProvData));\n\n  //get all visConditions; \n  const conditions = [... new Set(allProvenanceData.map(p => p.data['S-task01'].visType))]\n\n\n  let accScale = d3.scaleLinear()\n    .domain([0, 1])\n    .range([0, 1])\n\n  let accHistogram = d3.histogram()\n    .domain(accScale.domain())\n    .thresholds(accScale.ticks(20))    // Important: how many bins approx are going to be made? It is the 'resolution' of the violin plot\n    .value(d => d.answer.accuracy)\n\n  let timeScale = d3.scaleLinear()\n    .domain([0, 5]) //hard coded. need to change to dymamic\n    .range([0, 5])\n\n  let timeHistogram = d3.histogram()\n    .domain(timeScale.domain())\n    .thresholds(timeScale.ticks(10))    // Important: how many bins approx are going to be made? It is the 'resolution' of the violin plot\n    .value(d => d.minutesOnTask)\n\n\n\n  //populate task prompt from data from first participant (hacky)\n  let singleParticipant = allProvenanceData[0].data;\n\n\n  taskStructure.map(task => {\n    task.prompt = singleParticipant[task.key].prompt.replace(/(<([^>]+)>)/ig, '');;\n    task.actions = {}; //singleParticipant[task.key].provenance;\n    task.stats = {};\n\n    conditions.map(condition => {\n      //get all data for that task, for that condition; \n      let taskConditionData = allProvenanceData.filter(d => d.data[task.key].visType == condition).map(d => d.data[task.key]);\n      task.histogram = timeHistogram(taskConditionData)\n      task.actions[condition] = {};\n      task.stats[condition] = {};\n      task.stats[condition].average = {}\n      task.stats[condition].values = taskConditionData //accHistogram(taskConditionData);\n      task.stats[condition].average.accuracy = Math.round(d3.mean(taskConditionData.map(e => e.answer.accuracy)) * 100) / 100\n      task.stats[condition].average.time = Math.round(d3.mean(taskConditionData.map(e => e.minutesOnTask)) * 100) / 100\n\n      taskConditionData.map(d => {\n        d.provenance.map(e => {\n          if (task.actions[condition][e.event]) {\n            task.actions[condition][e.event] = task.actions[condition][e.event] + 1;\n          } else {\n            task.actions[condition][e.event] = 1;\n          }\n        })\n      })\n\n      // task.stats[condition].accuracy = singleParticipant[task].answer.accuracy;\n      // task.stats[condition].time = singleParticipant[task].minutesOnTask;\n    })\n\n\n\n  })\n\n  //sort taskStructure according to selected option\n  taskStructure.sort((a, b) => {\n    if (taskSort == 'name') {\n      return a.key > b.key ? 1 : -1\n    }\n\n    if (taskSort == 'accuracy') {\n      let conditions = Object.keys(a.stats);\n      let meanAcc_a = [];\n      let meanAcc_b = [];\n      conditions.map(c => meanAcc_a.push(a.stats[c].average.accuracy))\n      conditions.map(c => meanAcc_b.push(b.stats[c].average.accuracy))\n      return d3.mean(meanAcc_a) > d3.mean(meanAcc_b) ? -1 : 1\n    }\n\n    if (taskSort == 'time') {\n      let conditions = Object.keys(a.stats);\n      let meanA = [];\n      let meanB = [];\n      conditions.map(c => meanA.push(a.stats[c].average.time))\n      conditions.map(c => meanB.push(b.stats[c].average.time))\n      return d3.mean(meanA) > d3.mean(meanB) ? -1 : 1\n    }\n\n    if (taskSort == 'diff') {\n      let conditions = Object.keys(a.stats);\n      let diffA = Math.abs(a.stats[conditions[0]].average.accuracy - a.stats[conditions[1]].average.accuracy)\n      let diffB = Math.abs(b.stats[conditions[0]].average.accuracy - b.stats[conditions[1]].average.accuracy)\n\n      return diffA > diffB ? -1 : 1\n    }\n\n\n  })\n\n  const [events, setEvents] = useState(\n    listNativeEvents(allProvenanceData)\n  );\n\n  //type of edits a user can make to events: \n  //create - eventType: grouped (create a new group) \n  //rename - eventType : nativeEvent\n  //move event into a group (A or B or C == newEvent) -> eventType : grouped \n  //group sequences (A then B then C == newEvent) -> eventType: sequence\n  //group repetitions of the same event (A then A then A == A) -> eventType: repeated\n  //hide/remove\n\n  function hideEvent(eventName) {\n    let newEvents = [...events]\n    let event = newEvents.find(e => e.name == eventName);\n    if (!event) {\n      console.log(eventName, ' is not a valid event')\n    } else {\n      event.visible = !event.visible;\n    }\n    setEvents(newEvents)\n  }\n\n  let newEvent = function (newName) {\n    let newEvent = { name: newName, type: 'group', children: [], count: 0, visible: true, id: events.length }\n    setEvents([newEvent, ...events]);\n    return newEvent\n  }\n\n  function renameEvent(origName, newName) {\n    let newEvents = [...events]\n    //modify event dictionary\n    let event = newEvents.find(e => e.name == origName);\n    if (!event) {\n      return ('This is not a valid event')\n    } else {\n      event.name = newName;\n    }\n    setEvents(newEvents)\n\n    //modify event instances in dictionary\n    renameHelper(allProvenanceData, origName, newName);\n\n    setAllProvenanceData(allProvenanceData)\n\n  }\n\n  function deleteEvent(name) {\n    let newEvents = [...events]\n    //modify event dictionary\n    let toDelete = newEvents.find(e => e.type == 'group' && e.name == name);\n    if (!toDelete) {\n      return ('cannot delete event')\n    } else {\n      newEvents = newEvents.filter(e => e !== toDelete)\n      setEvents(newEvents)\n    }\n\n    //revert event instances in dictionary\n    allProvenanceData.map(participant => {\n      let userData = participant.data\n      //tasks are objects that contain a provenance field.\n      let tasks = Object.keys(userData).filter(k => userData[k].provenance);\n      tasks.map(task => {\n        userData[task].provenance.map(e => {\n          e.event = toDelete.children.includes(e.event) ? e.id : e.event\n        })\n      })\n    });\n\n    setAllProvenanceData(allProvenanceData)\n\n  }\n\n  function renameHelper(data, origName, newName) {\n    //iterate through and rename events in allProvenance;\n    data.map(participant => {\n      let userData = participant.data\n      //tasks are objects that contain a provenance field.\n      let tasks = Object.keys(userData).filter(k => userData[k].provenance);\n      tasks.map(task => {\n        userData[task].provenance.map(e => {\n          e.event = e.event == origName ? newName : e.event\n        })\n      })\n    });\n  }\n\n\n  // group events into higher level event\n  //TO DO. CANNOT SIMPLY RENAME EVENTS WHEN GROUPING SINCE IT'S HARD TO LATER UNGROUP\n  function addRemoveChild(children, group) {\n    let newEvents = [...events]\n\n    //modify event dictionary\n    let groupEvent = newEvents.find(e => e.name == group);\n    let currentChildren = groupEvent.children;\n\n    console.log('incoming children', children);\n    console.log('currentChildren', currentChildren)\n    console.log('groupEvent', groupEvent)\n\n    let addChild = groupEvent.children.length < children.length\n\n    if (!groupEvent) {\n      return (group + ' is not a valid event')\n    } else {\n      if (addChild) {\n        let child = children.find(value => !currentChildren.includes(value))\n        let nativeEvent = newEvents.find(e => e.id == child.id);\n        groupEvent.children.push(nativeEvent);\n        //set nativeEvent visible\n        nativeEvent.visible = false;\n        //add reference to parent event \n        nativeEvent.groups.push(groupEvent);\n\n        //iterate through and create new group events in allProvenance;\n        allProvenanceData.map(participant => {\n          let userData = participant.data\n          //tasks are objects that contain a provenance field.\n          let tasks = Object.keys(userData).filter(k => userData[k].provenance);\n          tasks.map(task => {\n            Object.keys(userData[task].provenance).reverse().map((i) => {\n              let e = userData[task].provenance[i]\n              if (e.event == nativeEvent.name) {\n                //make a copy of the event and change it to a group type\n                let newEvent = JSON.parse(JSON.stringify(e));\n                newEvent.event = groupEvent.name;\n                newEvent.id = groupEvent.name;\n                newEvent.origName = nativeEvent.name\n\n                //insert new event right after current event\n                userData[task].provenance.splice(i, 0, newEvent)\n              }\n            })\n          })\n        });\n\n\n      } else {\n        //\n        console.log('should be removing children')\n        let child = currentChildren.find(value => !children.includes(value))\n        let nativeEvent = newEvents.find(e => e.id == child.id);\n        //set nativeEvent to visible\n        nativeEvent.visible = true;\n        nativeEvent.groups = nativeEvent.groups.filter(g => g.id !== groupEvent.id)\n        groupEvent.children = currentChildren.filter(value => children.includes(value))\n\n        console.log(nativeEvent, groupEvent)\n        //iterate through and remove group events in allProvenance;\n        allProvenanceData.map(participant => {\n          let userData = participant.data\n          //tasks are objects that contain a provenance field.\n          let tasks = Object.keys(userData).filter(k => userData[k].provenance);\n          tasks.map(task => {\n            Object.keys(userData[task].provenance).reverse().map((i) => {\n              let e = userData[task].provenance[i]\n              if (e.name == groupEvent.name && e.origName == nativeEvent.name) {\n                userData[task].provenance.splice(i, 1)\n              }\n            })\n          })\n        });\n\n      }\n\n      // renameHelper(allProvenanceData, child.name, groupEvent.name);\n\n    }\n\n    setEvents(newEvents)\n    setAllProvenanceData(allProvenanceData)\n\n  }\n\n  function groupSequence(sequence, name) {\n    let seqEvent = { name: name, type: 'sequence', children: sequence, visible: true, id: events.length - 1 }\n\n\n    setEvents([...events, seqEvent])\n\n    //modify provenance instances in data\n    allProvenanceData.map(participant => {\n      let userData = participant.data\n      //tasks are objects that contain a provenance field.\n      let tasks = Object.keys(userData).filter(k => userData[k].provenance);\n      tasks.map(task => {\n        let prov = userData[task].provenance //\n\n        //ADD CODE THAT REPLACES SESQUENCES MATCHING SEQUENCE WITH SEQEVENT\n      })\n    });\n    setAllProvenanceData(allProvenanceData)\n  }\n\n\n  const [selectedTaskIds, setSelectedTaskIds] = React.useState([\"S-task01\"]);\n\n  const [patterns, setPatterns] = useState(null);\n\n\n\n  //create state that maps events (including user created ones) to their children and a numeric index (for sequence mapping) \n\n  function listNativeEvents(data) {\n    let events = [];\n    data.map(participant => {\n      let userData = participant.data\n      //tasks are objects that contain a provenance field.\n      let tasks = Object.keys(userData).filter(k => userData[k].provenance);\n      tasks.map(task => {\n        userData[task].provenance.map(e => {\n          events.push(e.event)\n        })\n      })\n    });\n\n    events = [... new Set(events)];\n    events = events.map((e, i) => ({ name: e, type: 'native', visible: true, groups: [], id: i }));\n    return events;\n  }\n\n\n  function handleChangeSelectedTaskId(event) {\n    setSelectedTaskIds([event.target.value]);\n  }\n\n  //count the number of events and update sequences for this task\n  useEffect(() => {\n    let newEvents = [...events]\n    newEvents.map(e => {\n      e.count = 0;\n      e.sequences = {}\n      conditions.map((c) => {\n        e.sequences[c] = []\n      }\n      )\n    })\n\n    allProvenanceData.forEach((participant) => {\n\n      selectedTaskIds.map(selectedTaskId => {\n        if (participant.data[selectedTaskId]) {\n          let participantData = participant.data[selectedTaskId];\n          participantData.provenance\n            .map(e => {\n              let event = newEvents.find(ev => ev.name == e.event);\n              event.count = event.count + 1;\n            })\n\n          //add sequence to each unique event type\n          let allEvents = participantData.provenance.map(d => d.event)\n          let uniqueEvents = [... new Set(allEvents)];\n\n          uniqueEvents\n            .map(e => {\n              let event = newEvents.find(ev => ev.name == e);\n              event.sequences[participantData.visType].push(allEvents.map(e => {\n                let event = newEvents.find(ev => ev.name == e);\n                return event.id\n              }));\n            })\n        }\n\n      })\n\n\n    });\n\n    console.log('newEvents', newEvents)\n    setEvents(newEvents);\n\n  }, [selectedTaskIds]);\n\n  let currentTaskData = React.useMemo(() => {\n    let internalTaskData = [];\n\n    selectedTaskIds.map(selectedTaskId => {\n      allProvenanceData.forEach((participant) => {\n        const newObj = Object.assign(\n          { id: participant.id },\n          participant.data[selectedTaskId]\n        );\n\n        if (participant.data[selectedTaskId]) {\n          //add type to provenance objects and remove hidden event types;\n          newObj.provenance = newObj.provenance\n            .map(e => {\n              let event = events.find(ev => ev.name == e.event);\n              e.type = event.type\n              return e;\n            })\n            .filter(e => {\n              let event = events.find(ev => ev.name == e.event);\n              return event.visible\n            })\n          internalTaskData.push(newObj);\n        }\n      });\n\n    })\n\n\n\n    return internalTaskData;\n  }, [allProvenanceData, selectedTaskIds, events]);\n\n\n  //get pattern data from server;\n  // console.log(currentTaskData)\n  const [isLoading, isError, dataFromServer] = useFetchAPIData(async () => {\n    let sequences = {};\n    events.map(e => { sequences[e.name] = { sequences: e.sequences } });\n    return await performPrefixSpan(sequences);\n  }, [events]);\n  // console.log(\"check out the prefix span data\", isLoading, isError, dataFromServer);\n\n  useEffect(() => {\n    console.log('setting patterns', dataFromServer)\n    //convert sequences back to names; \n\n    if (dataFromServer) {\n      Object.keys(dataFromServer).map(event => {\n        let eventObj = dataFromServer[event]\n        let conditions = ['nodeLink', 'adjMatrix'] //Object.keys(eventObj);\n        conditions.map(c => {\n          eventObj[c] = eventObj[c].map(arr => {\n            let [count, seq] = arr;\n            seq = seq.map(s => {\n              let event = events.find(e => e.id == s);\n              return { id: event.name, event: event.name }\n            })\n            return { count: arr[0], seq }\n          })\n        })\n      })\n\n      setPatterns(dataFromServer)\n\n\n    }\n\n  }, [dataFromServer])\n  // console.log(\"relative\", allProvenanceData);\n  return (\n    <ProvenanceDataContext.Provider\n      value={{\n        allProvenanceData,\n        currentTaskData,\n        taskStructure,\n        handleChangeSelectedTaskId,\n        selectedTaskIds,\n        setTaskSort,\n        events,\n        patterns,\n        hideEvent,\n        newEvent,\n        renameEvent,\n        deleteEvent,\n        addRemoveChild\n      }}>\n      {children}\n    </ProvenanceDataContext.Provider>\n  );\n};\n\nfunction removeDuplicates(arr) {\n  return arr.filter(function (item, pos, arr) {\n    // Always keep the 0th element as there is nothing before it\n    // Then check if each element is different than the one before it\n    return pos === 0 || item !== arr[pos - 1];\n  });\n}\nfunction calculateRelativeProvGraph(taskPerformance, maxTime) {\n  let totalTime =\n    new Date(taskPerformance.endTime) - new Date(taskPerformance.startTime);\n  let scale = maxTime / totalTime;\n  taskPerformance[\"totalTime\"] = totalTime;\n  taskPerformance[\"relativeStartTime\"] = 0;\n  taskPerformance[\"relativeStopTime\"] = 1 / scale;\n  if (taskPerformance[\"provenance\"]) {\n    taskPerformance[\"provenance\"] = taskPerformance[\"provenance\"].map(\n      (node) => {\n        node[\"percentTime\"] =\n          (new Date(node[\"time\"]) - new Date(taskPerformance[\"startTime\"])) /\n          totalTime;\n        node[\"relativeTime\"] = node[\"percentTime\"] / scale;\n\n        return node;\n      }\n    );\n  } else {\n    taskPerformance[\"provenance\"] = [];\n  }\n\n  return taskPerformance;\n}\nfunction processRawProvenanceData(unrelativeProvenanceData) {\n\n  //remove element with no data \n  unrelativeProvenanceData = unrelativeProvenanceData.filter(d => Object.keys(d.data).length > 0);\n\n  //remove elements with no, or messed up provenance (more than one started prov event)\n  unrelativeProvenanceData = unrelativeProvenanceData.filter(d => {\n    let tasks = Object.keys(d.data).filter(t => t.includes('task'));\n\n    return tasks.reduce((acc, task) => {\n      if (!d.data[task].provenance) {\n        //participant has no provenance for a certain task. \n        return false\n      } else {\n        //element has more than on 'startedProvenance' event in the same task. \n        return acc && (d.data[task].provenance.filter(p => p.event == 'startedProvenance').length == 1)\n      }\n    }, true)\n  });\n\n  // console.trace('calling process Raw prov data')\n  const taskIds = [\n    \"S-task01\",\n    \"S-task02\",\n    \"S-task03\",\n    \"S-task04\",\n    \"S-task05\",\n    \"S-task06\",\n    \"S-task07\",\n    \"S-task08\",\n    \"S-task09\",\n    \"S-task10\",\n    \"S-task11\",\n    \"S-task12\",\n    \"S-task13\",\n    \"S-task14\",\n    \"S-task15\",\n    \"S-task16\",\n  ];\n\n  const relativeProvenanceData = _.cloneDeep(unrelativeProvenanceData)\n\n  taskIds.forEach((taskId) => {\n    let longestTimeForTask = d3.max(unrelativeProvenanceData, (participant) => {\n      if (\n        participant.data &&\n        participant.data[taskId]?.startTime &&\n        participant.data[taskId]?.endTime\n      ) {\n        return (\n          new Date(participant.data[taskId].endTime) -\n          new Date(participant.data[taskId].startTime)\n        ); // minutes->seconds->ms\n      }\n      return 0;\n    });\n    // console.log(\"longest time\", longestTimeForTask);\n    unrelativeProvenanceData.forEach((participant, index) => {\n      if (participant.data && participant.data[taskId]) {\n        relativeProvenanceData[index].data[taskId] = calculateRelativeProvGraph(\n          participant.data[taskId],\n          longestTimeForTask\n        );\n        //create id field in each provenance event (that doesn't change with edits) \n        participant.data[taskId].provenance.map(p => p.id = p.event);\n\n      } else {\n        delete relativeProvenanceData[index][taskId];\n        // console.log(\"NO DATA\", relativeProvenanceData[index], taskId);\n      }\n    });\n  });\n\n\n\n  return relativeProvenanceData;\n}\n\n// function computeSequences(){\n\n// }\n\nexport default ProvenanceDataContext;\n","import React from 'react';\nimport Add from \"@material-ui/icons/Add\";\nimport PanTool from \"@material-ui/icons/PanTool\";\nimport Sort from \"@material-ui/icons/Sort\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport Search from \"@material-ui/icons/Search\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport Start from \"@material-ui/icons/Star\";\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n\nconst colors = [\"#c6e0d6\", \"#8fcab4\", \"#67aca9\", \"#5d83d2\", \"#6b56dd\", \"#9e93a1\"];\n// generated from https://leonardocolor.io/?colorKeys=%235b89d2%2C%235dbb9c%2C%23723ce7%2C%238e18b9&base=ffffff&ratios=1.4%2C1.64%2C2.12%2C2.80%2C3.71%2C4.88%2C6.35%2C9.00&mode=CAM02\nconst answerSelectColor = colors[0];\nconst dragColor = colors[1];\nconst sortColor = colors[2];\nconst selectColor = colors[3];\nconst searchColor = colors[4];\nconst clearColor = colors[5];\n\nconst eventMapping = {\n  custom: {\n    name: \"CustomIcon\",\n    color: \"#d1d1d1\",\n    icon: <CheckBoxOutlineBlankIcon width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n\n  startedProvenance: {\n    name: \"PlayArrowIcon\",\n    color: \"#d1d1d1\",\n    icon: <PlayArrowIcon width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  \"Finished Task\": {\n    name: \"StopIcon\",\n    color: \"#d1d1d1\",\n    icon: < StopIcon width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n\n  answerBox: {\n    name: \"Add\",\n    color: answerSelectColor,\n    icon: < Add width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  \"Hard Selected a Node\": {\n    name: \"Add\",\n    color: answerSelectColor,\n\n    icon: < Add width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  \"Dragged Node\": {\n    name: \"PanTool\",\n    color: dragColor,\n    icon: < PanTool width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  sort: {\n    name: \"Sort\",\n    color: sortColor,\n    icon: < Sort width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  attrRow: {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: < FiberManualRecordIcon width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  \"Hard Unselected a Node\": {\n    name: \"RadioButtonUncheckedIcon\",\n    color: answerSelectColor,\n    icon: < RadioButtonUncheckedIcon width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  \"Select Node\": {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: < FiberManualRecordIcon width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  \"rowLabel\": {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: < FiberManualRecordIcon width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  \"colLabel\": {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: < FiberManualRecordIcon width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  \"search\": {\n    name: \"Search\",\n    color: searchColor,\n    icon: < Search width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  \"Searched for Node\": {\n    name: \"Search\",\n    color: searchColor,\n    icon: < Search width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  \"cell\": {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: < FiberManualRecordIcon width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  \"Unselect Node\": {\n    name: \"RadioButtonUncheckedIcon\",\n    color: selectColor,\n    icon: < RadioButtonUncheckedIcon width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  \"clear\": {\n    name: \"Clear\",\n    color: clearColor,\n    icon: < Clear width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  \"cleared all selected nodes\": {\n    name: \"Clear\",\n    color: clearColor,\n    icon: < Clear width={\n      16\n    }\n      height={\n        16\n      }\n    />\n  },\n  // \"startedProvenance\": {\n  //   name: \"Start\",\n  //   color: 'rgb(255,255,255)',\n  //   icon: < Start width={\n  //     16\n  //   }\n  //     height={\n  //       16\n  //     }\n  //   />\n  // },\n  // \"Finished Task\": {\n  //   name: \"Start\",\n  //   color: 'rgb(255,255,255)',\n  //   icon: < Start width={\n  //     16\n  //   }\n  //     height={\n  //       16\n  //     }\n  //   />\n  // }\n};\n\nexport default eventMapping;","import React from \"react\";\nimport eventMapping from \"./eventMapping.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fade from \"@material-ui/core/Fade\";\nimport styles from \"./ProvenanceIsolatedNodes.module.css\";\nconst ProvenanceIsolatedNodes = ({ nodes }) => {\n  // console.log(\"isolated\", nodes);\n  return (\n    <div className={styles.wrapper}>\n      {nodes.map((node, index) => (\n        <IsolatedNode key={index} node={node}></IsolatedNode>\n      ))}\n    </div>\n  );\n};\n\nconst IsolatedNode = ({ node }) => {\n\n  let eventMap = eventMapping[node.id] ? eventMapping[node.id] : eventMapping['custom']\n  //add check for custom icons for newly created events;\n  const icon = eventMap.icon\n\n  // node.event !== \"startedProvenance\" &&\n  //   node.event !== \"Finished Task\" ? \n  return (\n    <Tooltip\n      TransitionComponent={Fade}\n      TransitionProps={{ timeout: 600 }}\n      title={node.event}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            offset: {\n              enabled: true,\n              offset: \"0px, -6px\",\n            },\n          },\n        },\n      }}\n      arrow>\n      <svg width={34} height={34}>\n        <rect\n          x={0}\n          y={0}\n          width={30}\n          height={30}\n          rx={5}\n          fill={eventMap.color}></rect>\n        <g transform={`translate(7,5)`}>{icon}</g>\n      </svg>\n    </Tooltip>\n  )\n  // : (\n  //   <div></div>\n  // );\n};\n\nexport default ProvenanceIsolatedNodes;\n","import React, { useContext } from \"react\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat';\nimport Divider from '@material-ui/core/Divider';\n\n\nimport * as d3 from \"d3\";\n\nimport ProvenanceDataContext from \"../components/ProvenanceDataContext\";\nimport ProvenanceIsolatedNodes from \"../components/ProvenanceIsolatedNodes\";\n\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\n\n\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        flexGrow: 1\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    }\n});\n\nfunction scale(width, maxValue) {\n    return d3\n        .scaleLinear()\n        .range([10, width])\n        .domain([0, maxValue]);\n}\n\nconst accScale = scale(40, 1)\nconst timeScale = scale(40, 3.59)\n\n\n\nfunction rectangle(d, scale, label) {\n    return (\n        <svg width={100} height={25} key={d.key} >\n\n            <rect className='count' style={{ fill: \"grey\", opacity: .5 }}\n                x={0}\n                width={scale(d)}\n                height={25}></rect>\n            <text style={{ fontSize: '1.5em' }} x={scale(d)} y={0}> {d + ' ' + label} </text>\n        </svg>)\n}\n\nfunction scatter(data, metric, scale, label) {\n    let average = data.average[metric];\n    return (\n        <svg width={100} height={40}>\n            {data.values.map(d =>\n                <circle className='count' style={{ fill: \"rgb(93, 131, 210)\", opacity: .1 }}\n                    cx={scale(d.answer.accuracy)}\n                    cy={10}\n                    r={5}>\n\n                </circle>)\n            }\n            <rect className='count' style={{ fill: \"#ff5e00\", opacity: 1 }}\n                x={scale(average)}\n                width={3}\n                height={25}></rect>\n            <text style={{ fontSize: '1em', \"text-anchor\": 'start' }} x={scale(average)} y={40}> {Math.round(average * 100) + ' ' + label} </text>\n\n            )\n\n            {/* <text style={{ fontSize: '1.5em', 'text-anchor': 'start' }} x={scale(1.4)} y={20}> {data.average.accuracy + ' ' + label} </text> */}\n        </svg>)\n}\n\nfunction histogram(data, average, timeScale, label) {\n\n    let width = 100;\n    let height = 40;\n\n    let barHeight = 20;\n    let barWidth = 7;\n    //compute scale for data; \n    let xDomain = d3.extent(data, d => d.x0);\n    let yDomain = d3.extent(data, d => d.length);\n\n    // console.log(xDomain, yDomain)\n\n    let xScale = d3.scaleLinear().domain(xDomain).range([0, width])\n    let yScale = d3.scaleLinear().domain(yDomain).range([0, barHeight])\n\n\n\n    return (\n        <svg width={width} height={height} >\n            {data.map((d) =>\n                <rect className='count' style={{ fill: \"rgb(93, 131, 210)\" }}\n                    x={xScale(d.x0)}\n                    y={barHeight - yScale(d.length)}\n                    width={barWidth}\n                    height={yScale(d.length)}></rect>\n            )}\n            <rect className='count' style={{ fill: \"#ff5e00\", opacity: 1 }}\n                x={timeScale(average)}\n                width={3}\n                height={25}></rect>\n            <text style={{ fontSize: '1em', \"text-anchor\": 'start' }} x={timeScale(average)} y={40}> {Math.round(average * 10) / 10 + ' ' + label} </text>\n\n        </svg>)\n}\n\n\nexport default function SimpleCard() {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n\n    const { taskStructure } = useContext(ProvenanceDataContext);\n    console.log(taskStructure)\n    return (<>\n        {\n            taskStructure.map(task => {\n                let taskTooltip =\n                    <Typography>\n                        {task.prompt}\n                    </Typography>\n                return (<Box m={2} style={{ display: 'inline-block' }} >\n                    <Card className={classes.root} key={task.key} style={{ 'width': 500 }} >\n                        <CardContent>\n                            <Typography variant=\"h5\" component=\"h2\">\n                                {task.name}\n                            </Typography>\n                            <Tooltip title={taskTooltip}>\n                                <Typography className={classes.pos} color=\"textSecondary\"  >\n                                    {task.prompt.slice(0, 60)}\n                                </Typography>\n                            </Tooltip>\n                            <Divider />\n\n                            {Object.keys(task.stats).map(cond => {\n                                let frequentActions = Object.entries(task.actions[cond]).filter(a => a[0] !== 'startedProvenance' && a[0] !== 'Finished Task').sort((a, b) => (a[1] > b[1] ? -1 : 1)).splice(0, 5).map(a => ({ event: a[0], id: a[0] }))\n                                return <>\n                                    <Typography variant='overline'>\n                                        {cond}\n                                    </Typography>\n\n                                    <Grid container className={classes.root} spacing={2}>\n                                        <Grid item xs={12}>\n                                            <Grid container justify=\"flex-start\" spacing={2}>\n                                                <Grid key={'prov'} item>\n                                                    <>\n                                                        <Box mt={'5px'} mb={'6px'} >\n                                                            <ProvenanceIsolatedNodes key={task.key} nodes={frequentActions}></ProvenanceIsolatedNodes>\n                                                        </Box>\n                                                        <Typography className={classes.pos} variant='overline' color=\"primary\"  >\n                                                            Actions\n                                                        </Typography>\n                                                    </>\n                                                </Grid>\n                                                <Box mt={'15px'}>\n                                                    <Grid key={'then'} item>\n                                                        <TrendingFlatIcon />\n                                                    </Grid>\n\n                                                </Box>\n\n                                                <Grid key={'acc'} item>\n                                                    {/* <Typography className={classes.pos}  > */}\n                                                    {/* {rectangle(task.stats[cond].average.accuracy, accScale, '%')} */}\n                                                    {scatter(task.stats[cond], 'accuracy', accScale, '%')}\n\n                                                    {/* </Typography> */}\n                                                    <Typography style={{ display: 'block' }} color=\"primary\" variant='overline'  >\n                                                        Accuracy\n                                                    </Typography>\n                                                </Grid>\n\n                                                <Grid key={'time'} item>\n                                                    {histogram(task.histogram, task.stats[cond].average.time, timeScale, 'min')}\n                                                    {/* {rectangle(task.stats[cond].average.time, timeScale, 'min')} */}\n                                                    <Typography style={{ display: 'block' }} color=\"primary\" variant='overline' >\n                                                        Time\n                                             </Typography>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Divider />\n                                </>\n\n                            }\n                            )}\n                            <div>\n\n                            </div>\n\n\n                        </CardContent>\n                        <CardActions>\n                            <Button size=\"small\">Explore</Button>\n                        </CardActions>\n                    </Card>\n                </Box>)\n            }\n\n\n            )\n        }\n    </>\n\n    );\n}\n","import React from \"react\";\n\nconst Upload = () => {\n  return <div>This Is upload</div>;\n};\n\nexport default Upload;\n","/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { OmitProps } from 'antd/lib/transfer/ListBody';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '700px',\n        '& > * + *': {\n            marginTop: theme.spacing(3),\n        },\n    },\n}));\n\nexport default function Tags(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Autocomplete\n                multiple\n                id=\"tags-standard\"\n                options={props.groups}\n                getOptionLabel={(option) => option.name}\n                // defaultValue={[top100Films[13]]}\n                value={props.value}\n                // renderTags={function (value) { console.log('value', value); return value }}\n                onChange={function (event, value, reason) {\n                    props.onChange(value, reason)\n                }}\n                renderInput={(params) => {\n                    return <TextField\n                        {...params}\n                        variant=\"standard\"\n                        label=\"Events\"\n                        placeholder=\"Add Event to Group\"\n                    />\n                }}\n            />\n        </div>\n    );\n}\n","import React, { useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport * as d3 from \"d3\";\nimport ProvenanceIsolatedNodes from \"./ProvenanceIsolatedNodes\";\nimport Box from '@material-ui/core/Box';\n\n\nimport BarChart from \"../components/BarChart\"\nimport TimeChart from \"../components/timeChart\"\n\n\nimport { ReactComponent as ActionGroup } from \"../icons/action_group.svg\";\n// import { ReactComponent as Action } from \"../icons/action.svg\";\n// import { ReactComponent as ActionSequence } from \"../icons/action_sequence.svg\";\n// import { ReactComponent as ActionFilter } from \"../icons/action_filtered.svg\";\n\nimport {\n    XYPlot,\n    XAxis,\n    YAxis,\n    VerticalGridLines,\n    HorizontalGridLines,\n    VerticalRectSeries,\n    HeatmapSeries,\n    LabelSeries,\n} from 'react-vis';\nimport { VisibilityOffRounded, VisibilityRounded, HighlightOffRounded, Edit } from '@material-ui/icons';\n\nimport Tags from \"../components/GroupSelector\"\nimport { HomeIcon } from \"../components/customIcons\"\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { SvgIcon } from \"material-ui\";\nimport ProvenanceDataContext from \"../components/ProvenanceDataContext\";\n\n\nconst styles = theme => ({\n    root: {\n        width: '70%',\n    },\n    hide: {\n        opacity: .3,\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    icon: {\n        verticalAlign: 'bottom',\n        height: 20,\n        width: 20,\n    },\n    details: {\n        alignItems: 'center',\n    },\n    column: {\n        flexBasis: '33.33%',\n    },\n    smallColumn: {\n        flexBasis: '15%',\n    },\n    helper: {\n        borderLeft: `2px solid ${theme.palette.divider}`,\n        padding: `${theme.spacing(1)}px ${theme.spacing(2)}px`,\n\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: 'none',\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n});\n\nconst ItemNameWrapper = ({ itemName, onItemNameChange }) => {\n    const [doubleClicked, setDoubleClicked] = React.useState(false);\n    const [currentName, setCurrentName] = React.useState(itemName);\n    return (\n        <div onClick={(event) => event.stopPropagation()} onDoubleClick={(event) => {\n            event.stopPropagation();\n            setDoubleClicked(true)\n        }}>\n            {doubleClicked ? (\n                <div>\n                    <TextField\n                        id={itemName}\n                        label={itemName}\n                        onChange={(ev) => {\n                            const newName = ev.target.value;\n                            // do checks here to verify name is unique?\n                            setCurrentName(newName);\n                        }}\n                        onKeyPress={(ev) => {\n                            // console.log(`Pressed keyCode ${ev.key}`);\n                            if (ev.key === \"Enter\") {\n                                onItemNameChange(itemName, currentName);\n                                setDoubleClicked(false);\n                            }\n                        }}\n                    />\n                </div>\n            ) : (\n                    // <div>{itemIcon} {currentName}  <EyeTwoTone /> <MoreOutlined /> </div>\n                    <div> {currentName} </div>\n\n                )}\n        </div>\n    );\n};\n\n\nfunction EventAccordion(props) {\n\n    const { currentTaskData, events, patterns, hideEvent, renameEvent, deleteEvent, addRemoveChild } = useContext(ProvenanceDataContext);\n\n    console.log('events', events)\n\n    let attr = 'count';\n    const scale = countScale(events, 60, attr)\n    // console.log(scale.domain(), scale.range())\n\n\n\n    function rectangle(d, attr) {\n        return (\n            <svg width={150} height={34} key={d.key} >\n\n                <rect className='count' style={{ fill: \"#348385\" }}\n                    x={0}\n                    width={scale(d[attr])}\n                    height={30}></rect>\n                <text x={scale(d[attr]) + 10} y={20}> {d[attr]}</text>\n            </svg>)\n    }\n\n    function countScale(data, width, attr) {\n        return d3\n            .scaleLinear()\n            .range([0, width])\n            .domain([0, d3.max(data.map(d => d[attr]))]);\n    }\n\n    function deleteCustomEvent(event, d) {\n        event.stopPropagation()\n        deleteEvent(d.name)\n    }\n\n\n    function hideEventFcn(event, d) {\n        event.stopPropagation()\n        console.log('hiding', d.name)\n        hideEvent(d.name)\n        // props.onChange(data);\n    }\n\n\n    const { classes } = props;\n    return (\n        <div className={classes.root}>\n            {events.map((d, i) => {\n                let hide = <span onClick={(event) => hideEventFcn(event, d)}>\n                    {!d.visible ? (\n                        <Tooltip title=\"Show this Event\">\n                            <VisibilityOffRounded />\n                        </Tooltip>\n                    ) : <Tooltip title=\"Hide this Event\">\n                            <VisibilityRounded />\n                        </Tooltip>} </span>\n                let del = <span onClick={(event) => deleteCustomEvent(event, d)}>\n                    <Tooltip title=\"Delete this Event\">\n                        <HighlightOffRounded />\n                    </Tooltip>\n                </span>\n\n                let all = <>\n                    {hide} {del}\n                </>\n                let baseIcons = <>\n                    {hide}\n                </>\n\n                function changeGroup(children, reason) {\n                    console.log(children, reason);\n                    addRemoveChild(children, d.name)\n                }\n\n                let groups = d.type == 'group' ? <>\n                    <Divider />\n                    <ExpansionPanelDetails>\n                        <div>\n                            <Tags onChange={changeGroup} value={d.children} groups={events.filter(f => f.type == 'native')} />\n                        </div>\n                    </ExpansionPanelDetails>\n                </> : ''\n\n                let icons = d.type == 'native' ? baseIcons : all;\n\n                let icon;\n\n                // console.log('patterns', d, patterns[d.name])\n\n                return < ExpansionPanel key={d.id}>\n                    <div className={!d.visible ? classes.hide : ''}>\n                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                            <div className={classes.column}>\n                                <ItemNameWrapper\n                                    itemName={d.name}\n                                    onItemNameChange={renameEvent}\n                                />\n                            </div>\n                            <div className={classes.smallColumn}>\n                                <Typography className={classes.secondaryHeading}>{\n                                    d.type\n                                }</Typography>\n                            </div>\n\n                            <div className={classes.column}>\n                                <Tooltip title=\"Event Count\">\n                                    <Typography className={classes.secondaryHeading}>{rectangle(d, attr)}</Typography>\n                                </Tooltip>\n                            </div>\n\n                            <div className={classes.smallColumn}>\n                                <Typography className={classes.secondaryHeading}>{icons}</Typography>\n                            </div>\n                        </ExpansionPanelSummary>\n                    </div>\n                    {/* <ExpansionPanelDetails className={classes.details}>\n                        <div style={{ 'margin-top': '-25px' }} className={classNames(classes.column, classes.helper)}>\n                            <Tags groups={props.data.filter(f => f.type == 'customEvent').map(d => ({ title: d.label }))} />\n                        </div>\n                    </ExpansionPanelDetails> */}\n\n                    {patterns[d.name] && <ExpansionPanelDetails className={classes.details}>\n                        <Typography className={classes.secondaryHeading}>Node Link</Typography>\n\n\n                        <div className={classNames(classes.column, classes.helper)}>\n                            {patterns[d.name].nodeLink.map((s, i) => <ProvenanceIsolatedNodes key={i} nodes={s.seq}></ProvenanceIsolatedNodes>)\n                            }\n                        </div>\n\n                        <div className={classNames(classes.smallColumn, classes.helper)}>\n                            {patterns[d.name].nodeLink.map((s, i) => rectangle(s, 'count'))}\n                        </div>\n\n                        <Typography className={classes.secondaryHeading}>Adjacency Matrix</Typography>\n\n                        <div className={classNames(classes.column, classes.helper)}>\n                            {patterns[d.name].adjMatrix.map((s, i) => <ProvenanceIsolatedNodes key={i} nodes={s.seq}></ProvenanceIsolatedNodes>)\n                            }\n                        </div>\n\n                        <div className={classNames(classes.smallColumn, classes.helper)}>\n                            {patterns[d.name].adjMatrix.map((s, i) => rectangle(s, 'count'))}\n                        </div>\n\n\n                    </ExpansionPanelDetails>}\n\n\n                    {groups}\n                </ExpansionPanel >\n\n\n\n            })}\n        </div >\n    );\n}\n\nEventAccordion.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(EventAccordion);\n\n// export default EventAccordion;\n","import React, { useContext } from \"react\";\nimport { Input } from \"antd\";\nimport { relativeProvenanceData } from \"../common/data/provenanceMocks.js\";\nimport EventAccordion from \"../components/EventAccordion\";\nimport Event_Layers from \"../components/Event_Layers\";\n\nimport EcoIcon from \"@material-ui/icons/Eco\";\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\n\nimport CollapsibleTable from '../components/EventTable'\nimport * as d3 from \"d3\";\nimport ProvenanceDataContext from \"../components/ProvenanceDataContext\";\n\nconst { Search } = Input;\n\nconst Overview = ({ location }) => {\n\n  const { newEvent } = useContext(ProvenanceDataContext);\n\n  const [search, setSearch] = React.useState(\"\");\n\n  function createEvent(value) {\n    {\n      setSearch(\"\");\n      console.log(\"new Event is\", value);\n      newEvent(value);\n    }\n  }\n\n  return (<div style={{ padding: \"15px\" }}>\n    <Search\n      placeholder=\"Create Event Type\"\n      enterButton={<PlusSquareOutlined />}\n      size=\"large\"\n      onSearch={newEvent}\n      // onChange={event => setSearch(event.target.value)}\n      style={{ width: 672 }}\n    // value={search}\n    />\n    <div style={{ 'paddingTop': \"15px\" }}>\n      {/* {patternComponent} */}\n      <EventAccordion />\n      {/* <CollapsibleTable data={data} onChange={setData} /> */}\n      {/* <EventAccordion data={data} onChange={setData} /> */}\n    </div>\n  </div>)\n};\n\nexport default Overview;\n","import React from \"react\";\n\nconst Export = () => {\n  return <div>This is Export</div>;\n};\n\nexport default Export;\n","import React, { useRef, useEffect } from \"react\";\nimport eventMapping from \"./eventMapping.js\";\nimport Icon from \"@material-ui/core/Icon\";\nimport FileCloudDownload from \"material-ui/core/Icons\";\nimport ThreeDRotation from \"@material-ui/icons/ThreeDRotation\";\n\nimport GroupedNodes from \"./GroupedNodes\";\nimport * as d3 from \"d3\";\nimport chroma from \"chroma-js\";\n\nconst ProvenanceNode = ({ nodeData, barHeight, renderIcons }: any) => {\n  let node;\n  const height = barHeight - 10;\n\n  node = (\n    <rect width={3} x={0} height={height} color={\"black\"} opacity={0.25}></rect>\n  );\n\n  return <g>{node}</g>;\n};\n\nexport default ProvenanceNode;\n","import React, { useRef, useEffect } from \"react\";\nimport GroupedNodes from \"./GroupedNodes\";\nimport ProvenanceNode from \"./ProvenanceNode\";\nimport * as d3 from \"d3\";\nimport chroma from \"chroma-js\";\n\nconst svgWidth = 200;\nconst svgHeight = 100;\nconst margin = { top: 5, right: 5, bottom: 5, left: 5 };\n\nconst ProvenanceNodes = ({ performance, xScale, eventType }: any) => {\n  if (!performance) {\n    return <div></div>;\n  }\n\n  let margin = { top: 5, right: 5, bottom: 5, left: 5 },\n    width = svgWidth - margin.right - margin.left,\n    height = svgHeight - margin.top - margin.bottom;\n  // set domains, needs to take in axis from parent to scale all\n\n  const barHeight = 60;\n  const yOffset = 0;\n\n  let provNodes = [];\n\n  performance.provenance.forEach((node) => {\n    if (\n      node.event === \"startedProvenance\" ||\n      node.event === \"Finished Task\" ||\n      (eventType && eventType !== \"overall\" && eventType !== node.event)\n    ) {\n      return;\n    }\n\n    provNodes.push({\n      x: xScale(node.time * performance.totalTime),\n      y: yOffset + barHeight / 2,\n      info: node.event,\n    });\n  });\n  let provElements = [];\n\n  for (let i = 0; i < provNodes.length; i++) {\n    let item = (\n      <ProvenanceNode\n        key={i}\n        data={provNodes[i]}\n        barHeight={barHeight}\n        renderIcons={false}></ProvenanceNode>\n    );\n\n    provElements.push(\n      <g transform={`translate(${provNodes[i].x},${0})`}>{item}</g>\n    );\n  }\n\n  // for any\n\n  // Note when rendering other things in svgs, you must only render things that are svg elements can render- they can't render most react components\n  return <g>{provElements}</g>;\n};\n\nexport default ProvenanceNodes;\n","import React, { useRef, useEffect } from \"react\";\nimport ProvenanceNodes from \"./ProvenanceNodes\";\nimport eventMapping from \"./eventMapping\";\nimport * as d3 from \"d3\";\nimport chroma from \"chroma-js\";\n\nconst ProvenanceGraph = ({ performance, xScale }) => {\n  const svgWidth = 250;\n  let svgHeight = 75;\n\n  if (!performance) {\n    return <div></div>;\n  }\n\n  const barHeight = 50;\n  const yOffset = 0;\n  const bars = [\n    {\n      x: 0,\n      y: yOffset,\n      width: xScale(performance.totalTime),\n      height: barHeight,\n      fill: \"gray\",\n      type: \"overall\",\n    },\n  ];\n\n  let eventTypes = new Set();\n  console.log(performance);\n  performance.provenance.forEach((node) => {\n    if (node.event === \"startedProvenance\" || node.event === \"Finished Task\") {\n      return;\n    }\n    eventTypes.add(node.event);\n  });\n\n  return bars.map((d, i) => {\n    return (\n      <g>\n        <rect key={i} width={d.width} height={d.height} fill={d.fill} />\n        <ProvenanceNodes\n          key={`${i}node`}\n          performance={performance}\n          xScale={xScale}\n          eventType={d.type}></ProvenanceNodes>\n      </g>\n    );\n  });\n};\n\nexport default ProvenanceGraph;\n","import React from \"react\";\nimport ReactTags from \"react-tag-autocomplete\";\nimport \"./reacttags.css\";\n\nconst TagWrapper = ({ tags, onTagChange, isMaster }) => {\n  function handleAddTag(tag) {\n    onTagChange(\"Add\", tag);\n  }\n\n  function handleDeleteTag(i) {\n    const allTags = tags.slice(0);\n    const tag = allTags.splice(i, 1);\n    onTagChange(\"Delete\", tag);\n  }\n\n  return (\n    <ReactTags\n      autofocus={false}\n      tags={tags}\n      allowNew={true}\n      handleDelete={handleDeleteTag}\n      handleAddition={handleAddTag}\n    />\n  );\n};\nexport default TagWrapper;\n","import React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport * as d3 from \"d3\";\nimport { select, event } from \"d3-selection\";\nimport { scaleLinear } from \"d3-scale\";\nimport { brushX } from \"d3-brush\";\nimport { axisBottom } from \"d3-axis\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fade from \"@material-ui/core/Fade\";\n\nfunction obtainItemCounts(arr) {\n  let occurrences = {};\n  for (let i = 0, j = arr.length; i < j; i++) {\n    occurrences[arr[i]] = (occurrences[arr[i]] || 0) + 1;\n  }\n  return occurrences;\n}\nexport const CategoricalFilter = ({\n  data,\n  width,\n  scale,\n  labels,\n  columnDef,\n  onFilterChanged,\n}) => {\n  const occurrences = useMemo(() => obtainItemCounts(data), [data]);\n  // search through data for all states\n  const [currentFilter, setCurrentFilter] = useState(Object.keys(occurrences));\n  const height = 20;\n  const fullHeight = 20 + 15;\n  const maxOccurance = Object.values(occurrences).reduce((a, b) =>\n    a > b ? a : b\n  );\n  const yScale = d3.scaleLinear().domain([0, maxOccurance]).range([0, height]);\n  useEffect(() => {\n    onFilterChanged(columnDef.tableData.id, currentFilter);\n  }, [currentFilter]);\n\n  return (\n    <svg width={width} height={fullHeight}>\n      {Object.entries(occurrences).map(([key, value], index) => {\n        const color = currentFilter.includes(key) ? \"black\" : \"#cfcfcf\";\n        return (\n          <Tooltip\n            TransitionComponent={Fade}\n            TransitionProps={{ timeout: 600 }}\n            title={key}\n            key={key}\n            PopperProps={{\n              popperOptions: {\n                modifiers: {\n                  offset: {\n                    enabled: true,\n                    offset: \"0px, -6px\",\n                  },\n                },\n              },\n            }}>\n            <g\n              pointerEvents={\"bounding-box\"}\n              key={key}\n              onClick={() => {\n                const indexOfValue = currentFilter.indexOf(key);\n                let temp = Object.assign([], currentFilter);\n\n                if (indexOfValue > -1) {\n                  temp.splice(indexOfValue, 1);\n                } else {\n                  temp.push(key);\n                }\n                setCurrentFilter(temp);\n              }}\n              cursor={\"pointer\"}\n              fill={\"none\"}>\n              <rect\n                x={scale(key)}\n                width={20}\n                height={yScale(value)}\n                y={height - yScale(value)}\n                fill={color}></rect>\n\n              <g transform={`translate(${scale(key)},${height})`} fill={color}>\n                {labels[key]}\n              </g>\n            </g>\n          </Tooltip>\n        );\n      })}\n    </svg>\n  );\n};\n\nexport const Histogram = ({ data, width, height }) => {\n  const max = d3.max(data),\n    min = d3.min(data);\n\n  // the scale\n  let x = d3.scaleLinear().range([0, width - 10]);\n  let y = d3.scaleLinear().range([height - 2, 0]);\n  let niceX = d3.scaleLinear().range([0, width]).domain([0, max]).nice();\n  const binner = d3.histogram().domain(niceX.domain());\n  const buckets = binner(data);\n  let xBand = d3\n    .scaleBand()\n    .domain(d3.range(0, buckets.length))\n    .range([0, width]);\n\n  x.domain([0, d3.max(data)]);\n  y.domain([0, d3.max(buckets, (bucket) => bucket.length)]);\n  const binWidth = xBand.bandwidth();\n  const bars = (\n    <g transform={`translate(${(1 / 3) * binWidth},0)`}>\n      {buckets.map((bucket, index) => {\n        return (\n          <rect\n            key={index}\n            x={x(bucket.x0) - 0.5 * binWidth} // 1/2 xBandwidth to move to middle 1/2 another because of -1 index on xBand domain\n            y={y(bucket.length)}\n            width={binWidth}\n            height={height - y(bucket.length)}></rect>\n        );\n      })}\n    </g>\n  );\n\n  return bars;\n};\n\nconst Brush = (props) => {\n  const width = props.width;\n  const scale = props.scale;\n  const height = props.height;\n  const brushRef = useRef(null);\n  const onBrushFunction = props.onChange;\n  //const width = props.width;\n  //const scale = scaleLinear().domain([0, 30]).range([0, width]);\n  useEffect(() => {\n    const node = brushRef.current;\n\n    const dayBrush = brushX()\n      .extent([\n        [0, 0],\n        [width, height],\n      ])\n      //.on(\"brush\", brushed)\n      .on(\"end\", cleared);\n\n    select(node)\n      .selectAll(\"g.brush\")\n      .data([0])\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"brush\");\n\n    select(node).select(\"g.brush\").call(dayBrush);\n\n    /*\n    Code for updating brush if we want it to dynamically update while brushing\n    function brushed() {\n      console.warn(event);\n      onBrushFunction(event.selection);\n    }*/\n    function cleared() {\n      console.warn(\"clear\", event);\n      onBrushFunction(event.selection);\n    }\n  });\n  return (\n    <svg ref={brushRef} height={height} width={width}>\n      {props.children}\n    </svg>\n  );\n};\n\nconst BrushableHistogram = ({ data, xScale, setMinimum, setMaximum }) => {\n  const width = xScale.range()[1];\n  const height = 20;\n  const scale = xScale;\n\n  function setFilterBounds(inputs) {\n    if (inputs?.length !== 2) {\n      inputs = xScale.domain();\n    }\n    // scale inversion\n    setMinimum(scale.invert(inputs[0]));\n    // set bounds\n    setMaximum(scale.invert(inputs[1]));\n  }\n\n  return (\n    <Brush\n      width={width}\n      height={height}\n      scale={scale}\n      onChange={setFilterBounds}>\n      <Histogram\n        data={data}\n        width={width}\n        height={height}\n        scale={scale}></Histogram>\n    </Brush>\n  );\n};\n\nexport const TimeFilter = ({ data, xScale, columnDef, onFilterChanged }) => {\n  console.log(\"new Time Filter\");\n  const [minimum, setMinimum] = useState(d3.min(data));\n  const [maximum, setMaximum] = useState(d3.max(data));\n  const debouncedMin = useDebounce(minimum, 100);\n  const debouncedMax = useDebounce(maximum, 100);\n  useEffect(() => {\n    onFilterChanged(columnDef.tableData.id, [debouncedMin, debouncedMax]);\n  }, [debouncedMin, debouncedMax]);\n  return (\n    <BrushableHistogram\n      xScale={xScale}\n      data={data}\n      setMinimum={setMinimum}\n      setMaximum={setMaximum}></BrushableHistogram>\n  );\n};\nfunction useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n","//@ts-nocheck\n\nimport React, { useState, forwardRef, useMemo } from \"react\";\nimport MaterialTable, {\n  MTableToolbar,\n  MTableAction,\n  MTableActions,\n  MTableFilterRow,\n} from \"material-table\";\nimport ProvenanceGraph from \"./ProvenanceGraph\";\nimport ProvenanceIsolatedNodes from \"./ProvenanceIsolatedNodes\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport Label from \"@material-ui/icons/Label\";\n// typings are here:\nimport { Icons } from \"material-table\";\nimport * as d3 from \"d3\";\nimport TagsInput from \"react-tagsinput\";\nimport eventMapping from \"./eventMapping\";\nimport TagStyles from \"./tagstyles.module.css\";\nimport TagWrapper from \"./reactTagWrapper\";\nimport { TimeFilter, CategoricalFilter } from \"./TableFilters\";\nimport { fireFetch } from \"../firebase/fetchData\";\nimport { CustomGroupRow } from \"./GroupedRow\";\nimport data from \"../common/data/provenance_summary.json\";\nconsole.log(\"DATA HERE\", data);\n//const trimmedPromise = fireFetch(\"provenance\");\n/*trimmedPromise.then((promise) => {\n  console.log(promise);\n});\n*/\nconst tableIcons: Icons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\n// import data\nconst width = 200;\nconst MaterialTableWrapper = ({ provenanceData }) => {\n  console.log(\"in Table\", provenanceData);\n  const [checkedTags, setCheckedTags] = React.useState([]);\n  const [rerender, setRerender] = React.useState(false);\n\n  const [userIdColumnDefinition, setUserIdColumnDefinition] = useState(\n    renderUserIdColumn(provenanceData, 100)\n  );\n\n  const [stimulusColumnDefinition, setStimulusColumnDefinition] = useState(\n    renderStimulusDefinition(provenanceData, 100)\n  );\n\n  const [timeColumnDefinition, setTimeColumnDefinition] = useState(\n    renderTimeColumn(provenanceData, 250)\n  );\n\n  const [accuracyColumnDefinition, setAccuracyColumnDefinition] = useState(\n    renderAccuracyColumn(provenanceData, 50)\n  );\n\n  const [eventsColumnDefinition, setEventsColumnDefinition] = useState(\n    renderProvenanceNodeColumn(provenanceData, 500)\n  );\n\n  const [notesColumnDefinition, setNotesColumnDefinition] = useState(\n    renderNotesColumn(200)\n  );\n\n  React.useEffect(() => {\n    setTimeColumnDefinition(renderTimeColumn(provenanceData, 250));\n    setAccuracyColumnDefinition(renderAccuracyColumn(provenanceData, 50));\n    setEventsColumnDefinition(renderProvenanceNodeColumn(provenanceData, 500));\n    setNotesColumnDefinition(renderNotesColumn(200));\n  }, [provenanceData]);\n\n  console.log(\"about to render table\", provenanceData);\n  return (\n    <MaterialTable\n      title={\"Provenance Table\"}\n      components={{\n        Actions: (props) => {\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                float: \"left\",\n                backgroundColor: \"#ffe2ec\",\n              }}>\n              <MTableActions {...props}></MTableActions>\n            </div>\n          );\n        },\n        Action: (props) => {\n          if (props.action.myComponent) {\n            let ActionComponent = props.action.myComponent;\n            //@ts-ignore\n            return <ActionComponent {...props}></ActionComponent>;\n          }\n          return <MTableAction {...props}></MTableAction>;\n        },\n        FilterRow: (props) => {\n          let styles = {\n            \"&:nth-child(2)\": {\n              position: \"sticky\",\n              top: \"64px\",\n              background: \"white\",\n            },\n          };\n          console.log(\"FILTER PROPS\", props);\n          return <MTableFilterRow styles={styles} {...props}></MTableFilterRow>;\n        },\n        GroupRow: (props) => {\n          //const groupedData;\n          //<MTableFilterRow styles={styles} {...props}></MTableFilterRow>\n          return <div></div>;\n        },\n      }}\n      columns={[\n        userIdColumnDefinition,\n        stimulusColumnDefinition,\n        timeColumnDefinition,\n        accuracyColumnDefinition,\n        eventsColumnDefinition,\n        notesColumnDefinition,\n      ]}\n      onSelectionChange={(selections) => {\n        if (selections.length === 0) {\n          setCheckedTags([]);\n        }\n      }}\n      actions={[\n        {\n          myComponent: () => {\n            return (\n              <TagWrapper\n                tags={checkedTags.filter((tag) => !tag.removed)}\n                onTagChange={(action, tag) => {\n                  // check if rowData is selected;\n                  if (action === \"Add\") {\n                    let temp = Object.assign([], checkedTags);\n                    let existing = temp.find(\n                      (checkedTags) => checkedTags.name === tag.name\n                    );\n                    if (existing) {\n                      existing.removed = false;\n                    } else {\n                      temp.push(tag);\n                    }\n\n                    setCheckedTags(temp);\n                  } else {\n                    let index = checkedTags.findIndex(\n                      (item) => item.name === tag?.[0].name\n                    );\n                    let temp = Object.assign([], checkedTags);\n\n                    if (index > -1) {\n                      temp[index].removed = true;\n                    }\n                    setCheckedTags(temp);\n                  }\n                }}></TagWrapper>\n            );\n          },\n        },\n        {\n          tooltip: \"Update tags of selected rows (appends ontop).\",\n          icon: (props, ref) => <Label {...props} ref={ref} />,\n          onClick: (evt, data) => {\n            data.forEach((datum) => {\n              if (datum.tableData.checked) {\n                // if row has not been rendered yet, add tags array\n                if (!Array.isArray(datum.tableData?.tags)) {\n                  datum.tableData.tags = [];\n                }\n                checkedTags.forEach((tag) => {\n                  const datumTagIndex = datum.tableData.tags.findIndex(\n                    (currentTag) => currentTag.name === tag.name\n                  );\n                  if (datumTagIndex === -1) {\n                    if (!tag.removed) {\n                      datum.tableData.tags.push(tag);\n                    }\n                  } else {\n                    if (tag.removed) {\n                      datum.tableData.tags.splice(datumTagIndex, 1);\n                    }\n                  }\n                });\n              }\n            });\n            setRerender(!rerender);\n          },\n        },\n      ]}\n      data={provenanceData}\n      icons={tableIcons}\n      options={{\n        selection: true,\n        search: false,\n        paging: true,\n        pageSize: 15,\n        filtering: true,\n        maxBodyHeight: \"93vh\",\n        grouping: true,\n      }}\n    />\n  );\n};\n\nfunction generateCategoricalScale(data, width) {\n  const uniqueValues = Array.from(new Set(data));\n  return d3.scaleBand().rangeRound([0, width]).padding(0).domain(uniqueValues);\n}\n\nfunction renderStimulusDefinition(provenanceData, stimulusColumnWidth) {\n  // TODO: Refactor to generalized\n  return {\n    title: \"Stimulus\",\n    field: \"visType\",\n    width: stimulusColumnWidth,\n  };\n}\n\nfunction renderUserIdColumn(provenanceData, userIdColumnWidth) {\n  console.log(provenanceData);\n  return {\n    title: \"User Id\",\n    field: \"workerID\",\n    width: userIdColumnWidth,\n  };\n}\n\nfunction renderNotesCell(rowData) {\n  if (!Array.isArray(rowData.tableData?.tags)) {\n    rowData.tableData.tags = [];\n  }\n  return (\n    <TagWrapper\n      tags={rowData.tableData.tags}\n      onTagChange={(action, tag) => {\n        // check if rowData is selected;\n        if (action === \"Add\") {\n          rowData.tableData.tags.push(tag);\n        } else {\n          const index = rowData.tableData.tags.findIndex((iterTag) => {\n            return iterTag.name === tag[0]?.name;\n          });\n          if (index > -1) {\n            rowData.tableData.tags.splice(index, 1);\n          }\n        }\n      }}></TagWrapper>\n  );\n}\n\nfunction renderNotesColumn(notesColumnWidth) {\n  return {\n    title: \"Notes\",\n    field: \"None\",\n    cellStyle: {\n      padding: \"4px 16px\",\n    },\n    width: notesColumnWidth,\n    customSort: (a, b) => b.tableData.tags.length - a.tableData.tags.length,\n    filterComponent: () => <div></div>,\n    render: renderNotesCell,\n  };\n}\n\nfunction renderProvenanceNodeCell(data) {\n  return (\n    <ProvenanceIsolatedNodes nodes={data.provenance}></ProvenanceIsolatedNodes>\n  );\n}\n\nfunction renderProvenanceNodeColumn(currentProvenanceData, eventColumnWidth) {\n  const eventWidth = 500;\n  const eventNodes = currentProvenanceData\n    .map((graph) => {\n      return graph.provenance.map((node) => node.event);\n    })\n    .flat()\n    .filter((item) => item !== \"startedProvenance\" && item !== \"Finished Task\");\n\n  let eventScale = generateCategoricalScale(eventNodes, eventWidth);\n\n  // Create mapping of event types to labels\n  const allObj = {};\n\n  Object.keys(eventMapping).forEach((eventKey) => {\n    allObj[eventKey] = eventMapping[eventKey].icon;\n  });\n\n  return {\n    title: \"Events Used\",\n    field: \"provGraph\",\n    width: eventWidth,\n    cellStyle: {\n      maxWidth: eventWidth,\n      padding: \"4px 16px\",\n    },\n    customSort: (a, b) => a.provenance.length - b.provenance.length,\n    render: renderProvenanceNodeCell,\n    customFilterAndSearch: (filterResults, datum) => {\n      // https://github.com/mbrn/material-table/pull/1351\n      for (let i = 0; i < datum.provenance.length; i++) {\n        if (filterResults.includes(datum.provenance[i].event)) {\n          return true;\n        }\n      }\n      // unselect any filtered items\n      delete datum.tableData.checked;\n      return false;\n    },\n    filterComponent: (props) => (\n      <CategoricalFilter\n        {...props}\n        width={eventWidth}\n        scale={eventScale}\n        labels={allObj}\n        data={eventNodes}></CategoricalFilter>\n    ),\n  };\n}\n\n/* Accuracy */\nfunction renderAccuracyCell(rowData, accuracyScale) {\n  return (\n    <svg width={100} height={20}>\n      <rect\n        x={accuracyScale(rowData?.answer.accuracy)}\n        width={20}\n        height={20}></rect>\n    </svg>\n  );\n}\n\nfunction renderAccuracyColumn(currentProvenanceData, columnWidth) {\n  // TODO: Refactor to categorical or Numerical\n  let accuracyScale = generateCategoricalScale([1, 0], columnWidth);\n\n  return {\n    title: \"Accuracy\",\n    field: \"provGraph correct\",\n    width: columnWidth,\n    cellStyle: {\n      maxWidth: columnWidth,\n      padding: \"4px 16px\",\n    },\n    customSort: (a, b) => a.answer.accuracy - b.answer.accuracy,\n    render: (rowData) => renderAccuracyCell(rowData, accuracyScale),\n    customFilterAndSearch: (filterResults, datum) => {\n      // https://github.com/mbrn/material-table/pull/1351\n      // TODO: Refactor to categorical or Numerical\n      if (filterResults.includes(`${datum.answer.accuracy}`)) {\n        return true;\n      }\n      // if outside of filter, remove from item\n      delete datum.tableData.checked;\n\n      return false;\n    },\n\n    filterComponent: (props) => (\n      <CategoricalFilter\n        {...props}\n        width={columnWidth}\n        scale={accuracyScale}\n        labels={{ true: 1, false: 0 }}\n        data={currentProvenanceData.map(\n          // TODO: fix from hard coded\n          (graph) => graph.answer.correct\n        )}></CategoricalFilter>\n    ),\n  };\n}\n\n/* Time */\nfunction renderTimeCell(rowData, timeScale) {\n  return (\n    <svg width={timeScale.range()?.[1]} height={20}>\n      <ProvenanceGraph performance={rowData} xScale={timeScale} />\n    </svg>\n  );\n}\nfunction renderTimeColumn(currentProvenanceData, columnWidth) {\n  const max = d3.max(currentProvenanceData, (datum) => datum.totalTime);\n  const timeScale = d3.scaleLinear().domain([0, max]).range([0, columnWidth]);\n\n  return {\n    title: \"Time To Complete\",\n    field: \"provGraph\",\n    width: columnWidth,\n    cellStyle: {\n      maxWidth: columnWidth,\n      padding: \"4px 16px\",\n    },\n    customSort: (a, b) => a.totalTime - b.totalTime,\n    render: (rowData) => renderTimeCell(rowData, timeScale),\n    customFilterAndSearch: (filterResults, datum) => {\n      // https://github.com/mbrn/material-table/pull/1351\n      if (\n        datum.totalTime >= filterResults[0] &&\n        datum.totalTime <= filterResults[1]\n      ) {\n        return true;\n      }\n      delete datum.tableData.checked;\n\n      return false;\n    },\n\n    filterComponent: (props) => (\n      <TimeFilter\n        {...props}\n        xScale={timeScale}\n        data={currentProvenanceData.map(\n          (graph) => graph.totalTime\n        )}></TimeFilter>\n    ),\n  };\n}\n\nexport default MaterialTableWrapper;\n\n/*[\n        {\n          name: \"Mehmet\",\n          surname: \"Baran\",\n          birthYear: 1987,\n          birthCity: 63,\n          imageUrl:\n            \"https://avatars0.githubusercontent.com/u/7895451?s=460&v=4\",\n        },\n        {\n          name: \"Zerya Betül\",\n          surname: \"Baran\",\n          birthYear: 2017,\n          birthCity: 34,\n          imageUrl:\n            \"https://avatars0.githubusercontent.com/u/7895451?s=460&v=4\",\n        },\n      ]*/\n","import React, { useContext } from \"react\";\nimport {\n  relativeProvenanceData,\n  unrelativeProvenanceData,\n} from \"../common/data/provenanceMocks.js\";\n\nimport MaterialTableWrapper from \"../components/ProvenanceTable\";\n\nimport ProvenanceDataContext from \"../components/ProvenanceDataContext\";\n\nconst Table = ({ location }) => {\n  const { currentTaskData } = useContext(ProvenanceDataContext);\n  return (\n    <div>\n      <MaterialTableWrapper provenanceData={currentTaskData} />\n    </div>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport styles from \"./Main.module.css\";\nimport _ from \"lodash\";\nimport { relativeProvenanceData } from \"./common/data/provenanceMocks.js\";\nimport MaterialTableWrapper from \"./components/ProvenanceTable\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport Home from \"./pages/Home\";\nimport Upload from \"./pages/Upload\";\nimport Overview from \"./pages/Overview\";\nimport Export from \"./pages/Export\";\nimport Table from \"./pages/Table\";\n\nconst Main = ({ location }) => {\n  return (\n    <Wrapper>\n      <TransitionGroup className=\"transition-group\">\n        <CSSTransition key={location.key} timeout={500} classNames=\"fade\">\n          <section className=\"route-section\">\n            <Switch location={location}>\n              <Route path=\"/Home\" component={Home}></Route>\n              <Route path=\"/Upload\" component={Upload}></Route>\n              <Route path=\"/Overview\" component={Overview}></Route>\n              <Route path=\"/Table\" component={Table}></Route>\n              <Route path=\"/Export\" component={Export}></Route>\n            </Switch>\n          </section>\n        </CSSTransition>\n      </TransitionGroup>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  .fade-enter {\n    opacity: 0.01;\n  }\n\n  .fade-enter.fade-enter-active {\n    opacity: 1;\n    transition: opacity 300ms ease-in;\n  }\n\n  .fade-exit {\n    opacity: 1;\n  }\n\n  .fade-exit.fade-exit-active {\n    opacity: 0.01;\n    transition: opacity 300ms ease-in;\n  }\n\n  div.transition-group {\n    position: relative;\n  }\n\n  section.route-section {\n    position: absolute;\n    width: 100%;\n    top: 0;\n    left: 0;\n  }\n`;\nexport default withRouter(Main);\n","import React, { useContext } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ProvenanceDataContext from \"../components/ProvenanceDataContext\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            // backgroundColor: theme.palette.background.paper,\n            'padding-top': 0,\n            'padding-bottom': 0\n        },\n    }),\n);\n\nconst options = [\n    { prompt: 'by task name', key: 'name' },\n    { prompt: 'by task accuracy', key: 'accuracy' },\n    { prompt: 'by task completion time', key: 'time' },\n    { prompt: 'by difference in performance across conditions', key: 'diff' }\n];\n\nexport default function SortMenu() {\n\n    const { setTaskSort } = useContext(ProvenanceDataContext);\n\n\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n    const handleClickListItem = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuItemClick = (event: React.MouseEvent<HTMLElement>, index: number) => {\n        setSelectedIndex(index);\n        setTaskSort(options[index].key)\n        setAnchorEl(null);\n\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div className={classes.root} style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n            <List component=\"nav\" aria-label=\"Sort tasks\" className={classes.root}>\n                <ListItem\n                    button\n                    aria-haspopup=\"true\"\n                    aria-controls=\"lock-menu\"\n                    aria-label=\"Sort tasks\"\n                    onClick={handleClickListItem}\n                >\n                    <ListItemText primary=\"Sort tasks\" secondary={options[selectedIndex].prompt} />\n                </ListItem>\n            </List>\n            <Menu\n                id=\"lock-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {options.map((option, index) => (\n                    <MenuItem\n                        key={option.prompt}\n                        // disabled={index === 0}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                        {option.prompt}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { createStyles, makeStyles, useTheme, Theme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport Box from '@material-ui/core/Box';\n\nimport styles from \"./SidePane.module.css\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport CloudUpload from \"@material-ui/icons/CloudUpload\";\nimport TableChart from \"@material-ui/icons/TableChart\";\nimport GetApp from \"@material-ui/icons/GetApp\";\nimport BarChart from \"@material-ui/icons/BarChart\";\nimport { Link, LinkProps, useLocation } from \"react-router-dom\";\nimport ProvenanceDataContext from \"./components/ProvenanceDataContext\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport SortMenu from './components/sortMenu'\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    typography: {\n      // In Chinese and Japanese the characters are usually larger,\n      // so a smaller fontsize may be appropriate.\n      fontSize: 18,\n    },\n    appBar: {\n      \"background-color\": '#ababab',\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }),\n);\n\n\nconst SidePane = ({ }) => {\n  const {\n    taskStructure,\n    handleChangeSelectedTaskId,\n    selectedTaskIds\n  } = React.useContext(ProvenanceDataContext);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\n  const HomeLink = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Home\" {...props} />);\n  const Upload = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Upload\" {...props} />);\n  const Overview = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Overview\" {...props} />);\n  const Table = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Table\" {...props} />);\n  const Export = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Export\" {...props} />);\n\n\n  let taskInfo = taskStructure.find(t => t.key == selectedTaskIds[0]);\n\n\n  let location = useLocation();\n  function appBarWidget() {\n    if (location.pathname.includes('Home')) {\n      return <SortMenu></SortMenu>\n    } else {\n      return <>\n        <FormControl className={styles.SelectedTaskInput}>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={selectedTaskIds[0]}\n            onChange={handleChangeSelectedTaskId}\n            label=\"name\">\n            {taskStructure.map((value) => {\n              return (\n                <MenuItem key={value.key} value={value.key}>\n                  {value.name}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <Box ml={3} >\n          <Typography variant=\"button\" noWrap dangerouslySetInnerHTML={{ __html: taskInfo.prompt }} >\n          </Typography>\n        </Box>\n      </>\n    }\n  }\n\n  function makeIcon(item) {\n    let isCurrent = location.pathname.includes(item.id);\n    const Icon = item.icon\n    return isCurrent ? <Icon style={{ color: 'rgb(93, 131, 210)' }}> </Icon> : <Icon></Icon>\n  }\n\n  return (<div className={classes.root}>\n    <CssBaseline />\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: open,\n      })}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n          className={clsx(classes.menuButton, {\n            [classes.hide]: open,\n          })}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        {appBarWidget()}\n        {/* {taskInfo.prompt} */}\n\n\n\n      </Toolbar>\n    </AppBar>\n    <Drawer\n      variant=\"permanent\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        }),\n      }}\n    >\n      <div className={classes.toolbar}>\n        <IconButton onClick={handleDrawerClose}>\n          {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n        </IconButton>\n\n      </div>\n      <Divider />\n      <List>\n        {/* <ListItem component={HomeLink}>\n          <img className={styles.logo} src={\"./Experi.png\"}></img>\n        </ListItem> */}\n        {[\n          { text: \"Home\", id: \"Home\", link: HomeLink, icon: HomeIcon },\n          { text: \"Upload\", id: \"Upload\", link: Upload, icon: CloudUpload },\n          { text: \"Provenance Prep \", id: \"Overview\", link: Overview, icon: BarChart },\n          {\n            text: \"Provenance Analysis\",\n            link: Table,\n            id: \"Table\",\n            icon: TableChart,\n          },\n          { text: \"Export\", link: Export, icon: GetApp },\n        ].map((item, index) => {\n          return (\n            //added key={index} to get rid of unique key error\n            <React.Fragment key={index}>\n              <ListItem button component={item.link}>\n                <ListItemIcon>{makeIcon(item)}</ListItemIcon>\n                <ListItemText primary={item.text} />\n              </ListItem>\n            </React.Fragment>\n          );\n        })}\n      </List>\n\n      <Divider />\n    </Drawer>\n\n  </div>)\n\n};\n\nexport default SidePane;\n","import React from \"react\";\nimport { MemoryRouter, Link as RouterLink } from \"react-router-dom\";\nimport styles from \"./App.module.css\";\nimport Main from \"./Main\";\nimport SidePane from \"./SidePane\";\nimport \"antd/dist/antd.css\";\nimport { ProvenanceDataContextProvider } from \"./components/ProvenanceDataContext\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ProvenanceDataContextProvider>\n        <MemoryRouter initialEntries={[\"/Home\"]} initialIndex={0}>\n          <div className={styles.container}>\n            <div className={styles.sidePane}>\n              <SidePane></SidePane>\n            </div>\n            <div className={styles.main}>\n              <Main></Main>\n            </div>\n          </div>\n        </MemoryRouter>\n      </ProvenanceDataContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}