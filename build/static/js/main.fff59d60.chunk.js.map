{"version":3,"sources":["App.module.css","components/ProvenanceTable.module.css","components/ProvenanceIsolatedNodes.module.css","components/TableDataLoader.module.css","SidePane.module.css","static/taskImages sync /^/.//.*/.png$","static/taskImages/S-task01_adjMatrix.png","static/taskImages/S-task01_nodeLink.png","static/taskImages/S-task02_adjMatrix.png","static/taskImages/S-task02_nodeLink.png","static/taskImages/S-task03_adjMatrix.png","static/taskImages/S-task03_nodeLink.png","static/taskImages/S-task04_adjMatrix.png","static/taskImages/S-task04_nodeLink.png","static/taskImages/S-task05_adjMatrix.png","static/taskImages/S-task05_nodeLink.png","static/taskImages/S-task06_adjMatrix.png","static/taskImages/S-task06_nodeLink.png","static/taskImages/S-task07_adjMatrix.png","static/taskImages/S-task07_nodeLink.png","static/taskImages/S-task08_adjMatrix.png","static/taskImages/S-task08_nodeLink.png","static/taskImages/S-task09_adjMatrix.png","static/taskImages/S-task09_nodeLink.png","static/taskImages/S-task10_adjMatrix.png","static/taskImages/S-task10_nodeLink.png","static/taskImages/S-task11_adjMatrix.png","static/taskImages/S-task11_nodeLink.png","static/taskImages/S-task12_adjMatrix.png","static/taskImages/S-task12_nodeLink.png","static/taskImages/S-task13_adjMatrix.png","static/taskImages/S-task13_nodeLink.png","static/taskImages/S-task14_adjMatrix.png","static/taskImages/S-task14_nodeLink.png","static/taskImages/S-task15_adjMatrix.png","static/taskImages/S-task15_nodeLink.png","static/taskImages/S-task16_adjMatrix.png","static/taskImages/S-task16_nodeLink.png","components/Tagger.tsx","fetchers/fetchMocks.js","hooks/hooks.js","components/ProvenanceDataContext.tsx","components/eventMapping.js","components/ProvenanceIsolatedNodes.tsx","pages/Home.tsx","pages/Study.tsx","pages/Upload.tsx","pages/Overview.tsx","pages/Export.tsx","components/TableFilters.tsx","components/reactTagWrapper.tsx","components/EventSearch.tsx","components/ColumnDefinitions.tsx","components/DevExtremeTable.tsx","components/TableDataLoader.tsx","components/ProvenanceController.tsx","pages/Table.tsx","Main.tsx","components/CheckBox.tsx","components/sortMenu.tsx","SidePane.tsx","App.tsx","serviceWorker.ts","index.tsx","components/EventSearch.module.css"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","initialState","mouseX","mouseY","Tagger","text","undefined","tagDivId","rowData","React","useState","state","setState","tags","setTags","remove","setRemove","console","log","handleClose","tag","window","getSelection","toString","length","currentTags","push","document","getElementById","querySelectorAll","setTimeout","focus","taggedText","t","replace","onMouseUp","event","preventDefault","clientX","clientY","Typography","split","i","substring","Tooltip","title","onMouseDown","style","cursor","backgroundColor","Menu","keepMounted","open","onClose","anchorReference","anchorPosition","top","left","MenuItem","onClick","newTags","filter","host","getDataFromServer","a","mockAllData","mockAPICall","res","getSchema","tableID","getData","getTaskDataFromServer","taskID","uri","fetchOptions","defaultHeaders","headers","Accept","completePromise","requestOptions","fetch","response","json","data","success","ok","url","returnData","options","shouldError","timeout","Promise","resolution","rejection","error","useFetchAPIData","fetchingFunc","dependencies","isLoading","setIsLoading","errorMessage","setErrorMessage","fetchedData","setFetchedData","onError","useEffect","then","result","message","catch","nodes1","name","time","commonProps","condition","taskId","participantId","ProvenanceDataContext","createContext","ProvenanceDataContextProvider","conditions","metrics","children","selectedTaskIds","setSelectedTaskIds","setData","currentlyVisitedNodes","setCurrentlyVisitedNodes","homeTaskSort","setHomeTaskSort","dataFromServer","ms","handleTagCreation","participantID","action","setTaskSort","currentTaskData","setCurrentTaskData","datum","sequence","JSON","parse","err","taskDataFromServer","Provider","value","taskStructure","key","prompt","actions","stats","handleChangeSelectedTaskId","target","handleProvenanceNodeClick","nodes","currentlyVisitedProvInfo","node","index","dataObject","dataID","assign","props","colors","answerSelectColor","dragColor","sortColor","selectColor","searchColor","clearColor","eventMapping","custom","color","icon","width","height","startedProvenance","answerBox","sort","attrRow","rowLabel","colLabel","search","cell","clear","IsolatedNode","eventMap","TransitionComponent","Fade","TransitionProps","count","PopperProps","popperOptions","modifiers","offset","enabled","arrow","x","y","rx","fill","opacity","scale","transform","ProvenanceIsolatedNodes","selectedItemId","hoveredItemId","handleHover","className","styles","wrapper","display","flexDirection","determineItemOpacity","onMouseEnter","onMouseLeave","theme","createMuiTheme","overrides","MuiTableCell","root","padding","useStyles","makeStyles","minWidth","flexGrow","table","sortable","sorted","media","fontSize","bullet","margin","pos","marginBottom","maxValue","d3","range","domain","BarChart","allData","hoveredRow","hoveredRowColor","metric","vert","size","find","m","type","maxBarHeight","varsToPlot","entries","b","slice","yDomain","v","xDomain","xScale","yScale","barWidth","bandwidth","hoveredStats","hoveredVarsToPlot","nothingToPlot","x1","y1","x2","y2","stroke","strokeWidth","entry","tooltipText","Fragment","textAnchor","d","Stimulus","conditionName","classes","Box","mt","mb","mr","boxShadow","CardMedia","component","image","require","variant","SequenceCount","row","numIconsPerCol","Math","floor","numCols","ceil","iconWidth","currentParticipants","matchingSequences","s","hoveredParticipants","intersection","includes","Array","from","fontWeight","alignmentBaseline","SortIconContainer","paddingTop","TableComponent","rows","setHoveredRow","desc","setSort","aValue","seq","bValue","rValue","TableContainer","maxHeight","stickyHeader","aria-label","TableHead","TableRow","header","TableCell","sameKey","TableBody","background","scope","seqObj","answer","align","Histogram","hoveredCI","ci","Grid","item","DrawHistogram","hovered","setHovered","average","lowerBound","upperBound","bins","hist","textLabel","round","barPadding","cx","cy","r","ConditionCard","freqPattern","metricValues","hidden","setHidden","patterns","topK","Set","container","spacing","xs","justify","overflow","rowHeight","p","textAnswers","flat","join","Divider","TaskCard","task","Card","CardContent","marginLeft","cKey","CardActions","Button","TaskContainer","useContext","getValues","conditionFilter","sortKey","values","c","tasks","aValues","bValues","max","min","categories","StudyCard","hoveredElement","uniqueID","participants","study","eventID","random","conditionGroups","allLevels","level","category","minutesToComplete","reduce","rv","cond","justifyContent","participant","borderBottom","borderColor","averageAccuracy","eventData","metricSquare","barHeight","labelHeight","textWidth","labelWidth","axisHeight","colorScale","maxTime","elapsedTime","duration","phases","filteredData","labelPos","labelStart","labelExtent","n","label","shortName","metricColorScales","metricYScales","taskTimeScales","colorRange","heightRange","timeScaleRange","getStats","taskInfo","dd","out","trim","taskList","rectWidth","onMouseOver","onMouseOut","ciPlot","timeScale","avg","slower","minTime","diff","abs","lineHeight","glyphSize","vertScale","Upload","taskTooltip","filteredMetrics","nodeWidth","frequentActions","evenlabelPos","eveny","labels","textHeight","renderPattern","Search","Input","Overview","location","placeholder","enterButton","PlusSquareOutlined","Export","buckets","currentBins","thresholds","bucket","currentBinCounter","bars","x0","Brush","onChange","brushRef","useRef","current","dayBrush","brushX","extent","on","selection","warn","select","selectAll","enter","append","attr","call","ref","BrushableHistogram","setMinimum","setMaximum","inputs","invert","QuantitativeFilter","onFilter","val","minimum","maximum","debouncedMin","useDebounce","debouncedMax","filterMin","filterMax","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","TagWrapper","onTagChange","isMaster","autofocus","allowNew","handleDelete","splice","handleAddition","uuidv4","COLLECTION","actionName","ActionList","renderClone","items","provided","snapshot","rubric","source","draggableProps","dragHandleProps","innerRef","isDragging","droppableId","isDropDisabled","shouldRenderClone","draggingFromThisWith","draggableId","Shop","anchorEl","setAnchorEl","Boolean","IconButton","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","searchOptions","ShoppingBag","direction","searchBar","Discard","EventSearch","shoppingBagItems","setShoppingBagItems","onDragEnd","useCallback","destination","copy","list","startIndex","endIndex","removed","reorder","droppableSource","droppableDestination","searchContainer","outerSearchBar","outerSearchOptions","outerSearchDiscard","filterQuantitativeValues","QuantitativeCell","additionalComponents","commonScale","NotesColumn","metaData","this","selectionIndicies","cellStyle","customSort","filterComponent","render","isArray","generateRowId","findIndex","iterTag","LongTextColumn","order","hideByDefault","CategoricalColumn","QuantitativeColumn","handleFilterChange","customFilterAndSearch","cellComponent","niceX","nice","binner","groupedSummaryComponent","incomingData","pointerEvents","partitionedData","newWidth","Component","EventsSummary","ProvenanceColumn","filterValue","rowValue","master","sub","indexOf","filterEvents","renderData","GroupDataResolver","setPartitionedData","_","isFunction","toFixedTrunc","f","substr","GroupCellContent","provenanceData","column","groupData","columnSummaries","Content","GroupCell","FilterCells","other","Item","restProps","itemProps","Cell","ProvenanceCells","generateColumnDefinition","columnSchema","columnsMetaData","defaultColumnDefinition","columnMetaData","columnKey","getColumnMetaData","COLUMN_NAME","DATA_TYPE","DevExtremeTable","tableSchema","filters","setFilters","handleFilter","columnName","currentFilterIndex","clonedFilters","accuracy","notes","setColumns","generateColumnObject","columns","setSelectionInternal","setRows","grouping","setGroupingInternal","groupingPredicate","isRowInTrueGroup","integratedGroupingColumnExtensions","useMemo","group","groupingValue","groupMetaData","criteria","showWhenGrouped","tableGroupColumnExtension","defaultColumnWidths","predicate","IntegratedFiltering","defaultPredicate","filteringColumnExtensions","showInGroupFooter","alignByColumn","groupSummaryItems","defaultHiddenColumnNames","Paper","onGroupingChange","newGrouping","secondArray","newlyAddedGroups","firstArrayItem","some","secondArrayItem","currentFilter","filterItem","newGroupIndex","newGroup","columnGroupingEnabled","columnExtensions","groupItems","calculator","getValue","onFiltersChange","onSelectionChange","columnWidths","showGroupingControls","showSelectAll","rowComponent","groupedRowHeader","groupedBy","columnInfo","groupIndex","repeat","groupHeaderRow","colSpan","groupHeaderContent","Row","summaryCellComponent","contentComponent","showColumnsWhenGrouped","stubCellComponent","stubProps","shouldHideStub","groupedByRow","tableRow","TableDataLoader","setHeight","setTableSchema","schemaFromServer","hiddenColumns","hideAggregate","concat","ORDINAL_POSITION","bounds","onResize","contentRect","measureRef","LoaderStyles","loader","Skeleton","animation","conditionEnums","freeze","adjMatrix","nodeLink","ProvenanceController","selectedNode","playInterval","setPlayInterval","setHoveredItemId","setSelectedItemIdInternal","taskNumber","match","parseInt","parseTaskNumFromId","setSelectedItemId","handleForward","previousId","currentIndex","src","gridTemplateRows","gridTemplateColumns","gridRow","clearInterval","setInterval","TimeLine","Table","Modal","aria-labelledby","aria-describedby","Wrapper","styled","div","withRouter","TransitionGroup","CSSTransition","classNames","path","Home","Study","CheckBox","visible","checkBoxCallback","checked","setChecked","Checkbox","evt","stopPropagation","inputProps","marginTop","MenuWrapper","option","handleMenuItemClickCallback","setHoveredRowCallback","selectedIndex","filterConditions","setConditions","currentState","checkboxes","selected","SortMenu","setSelectedIndex","handleMenuItemClick","sortObj","List","ListItem","button","aria-haspopup","aria-controls","ListItemText","primary","secondary","createStyles","typography","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","mixins","content","SidePane","useTheme","setOpen","HomeLink","forwardRef","to","StudyLink","useLocation","CssBaseline","AppBar","position","clsx","Toolbar","edge","pathname","FormControl","SelectedTaskInput","Select","labelId","ml","noWrap","dangerouslySetInnerHTML","__html","Drawer","paper","link","HomeIcon","ComputerIcon","CloudUpload","TableChart","GetApp","ListItemIcon","isCurrent","Icon","makeIcon","App","initialEntries","initialIndex","sidePane","main","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fff59d60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"header\":\"App_header__3ZZ1n\",\"logo\":\"App_logo__1ItuU\",\"sidePane\":\"App_sidePane__3RleR\",\"main\":\"App_main__3ZkGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spin\":\"ProvenanceTable_spin__3Jw--\",\"groupHeaderRow\":\"ProvenanceTable_groupHeaderRow__pwvw-\",\"groupHeaderContent\":\"ProvenanceTable_groupHeaderContent__1Zlne\",\"rotate\":\"ProvenanceTable_rotate__XaLA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProvenanceIsolatedNodes_wrapper__3cJfW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"TableDataLoader_loader__1QxY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"SidePane_logo__3vZO1\",\"SelectedTaskInput\":\"SidePane_SelectedTaskInput__1nreK\"};","var map = {\n\t\"./S-task01_adjMatrix.png\": 331,\n\t\"./S-task01_nodeLink.png\": 332,\n\t\"./S-task02_adjMatrix.png\": 333,\n\t\"./S-task02_nodeLink.png\": 334,\n\t\"./S-task03_adjMatrix.png\": 335,\n\t\"./S-task03_nodeLink.png\": 336,\n\t\"./S-task04_adjMatrix.png\": 337,\n\t\"./S-task04_nodeLink.png\": 338,\n\t\"./S-task05_adjMatrix.png\": 339,\n\t\"./S-task05_nodeLink.png\": 340,\n\t\"./S-task06_adjMatrix.png\": 341,\n\t\"./S-task06_nodeLink.png\": 342,\n\t\"./S-task07_adjMatrix.png\": 343,\n\t\"./S-task07_nodeLink.png\": 344,\n\t\"./S-task08_adjMatrix.png\": 345,\n\t\"./S-task08_nodeLink.png\": 346,\n\t\"./S-task09_adjMatrix.png\": 347,\n\t\"./S-task09_nodeLink.png\": 348,\n\t\"./S-task10_adjMatrix.png\": 349,\n\t\"./S-task10_nodeLink.png\": 350,\n\t\"./S-task11_adjMatrix.png\": 351,\n\t\"./S-task11_nodeLink.png\": 352,\n\t\"./S-task12_adjMatrix.png\": 353,\n\t\"./S-task12_nodeLink.png\": 354,\n\t\"./S-task13_adjMatrix.png\": 355,\n\t\"./S-task13_nodeLink.png\": 356,\n\t\"./S-task14_adjMatrix.png\": 357,\n\t\"./S-task14_nodeLink.png\": 358,\n\t\"./S-task15_adjMatrix.png\": 359,\n\t\"./S-task15_nodeLink.png\": 360,\n\t\"./S-task16_adjMatrix.png\": 361,\n\t\"./S-task16_nodeLink.png\": 362\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 330;","module.exports = __webpack_public_path__ + \"static/media/S-task01_adjMatrix.596f3f16.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task01_nodeLink.9aabba82.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task02_adjMatrix.17795797.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task02_nodeLink.0f658255.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task03_adjMatrix.3efe1333.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task03_nodeLink.cabb8101.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task04_adjMatrix.f05a898c.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task04_nodeLink.921a839d.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task05_adjMatrix.dca03e38.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task05_nodeLink.a6bb33b2.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task06_adjMatrix.4c2ded02.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task06_nodeLink.814fb4ef.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task07_adjMatrix.ce25fd21.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task07_nodeLink.69f0ecbd.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task08_adjMatrix.04417e64.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task08_nodeLink.f3b42a5e.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task09_adjMatrix.7bf60f59.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task09_nodeLink.4204dd3a.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task10_adjMatrix.9ddb2123.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task10_nodeLink.a860a4f6.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task11_adjMatrix.54e888d9.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task11_nodeLink.0ae4a7e8.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task12_adjMatrix.f17a7ce4.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task12_nodeLink.85a12057.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task13_adjMatrix.c32867ee.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task13_nodeLink.53d318fb.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task14_adjMatrix.e408facf.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task14_nodeLink.dadf2a19.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task15_adjMatrix.a494df59.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task15_nodeLink.6aa0bedb.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task16_adjMatrix.7362fb6e.png\";","module.exports = __webpack_public_path__ + \"static/media/S-task16_nodeLink.8290467a.png\";","import React, { useState } from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst initialState = {\n  mouseX: null,\n  mouseY: null,\n};\n\nexport default function Tagger({ text = undefined, tagDivId, rowData }) {\n  const [state, setState] = React.useState<{\n    mouseX: null | number;\n    mouseY: null | number;\n  }>(initialState);\n\n  const [tags, setTags] = useState([]);\n  const [remove, setRemove] = useState();\n  console.log(text, tags);\n  text =\n    text ||\n    \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam ipsum purus, bibendum sit  amet vulputate eget, porta semper ligula. Donec bibendum vulputate erat, ac fringilla mi   finibus nec. Donec ac dolor sed dolor porttitor blandit vel vel purus. Fusce vel malesuada   ligula. Nam quis vehicula ante, eu finibus est. Proin ullamcorper fermentum orci, quis   finibus massa. Nunc lobortis, massa ut rutrum ultrices, metus metus finibus ex, sit amet   facilisis neque enim sed neque. Quisque accumsan metus vel maximus consequat. Suspendisse  lacinia tellus a libero volutpat maximus\";\n\n  //    console.log('text is ', text)\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    console.log(window.getSelection().toString());\n    // console.log(window.getSelection().toString().length,remove)\n    if (window.getSelection().toString().length > 0 || remove) {\n      setState({\n        mouseX: event.clientX - 2,\n        mouseY: event.clientY - 4,\n      });\n    }\n  };\n\n  //on mouse up select that input box.\n\n  const handleClose = () => {\n    let tag = window.getSelection().toString();\n    setRemove(undefined);\n    //   console.log(text.split(tag))\n    if (tag.length > 0) {\n      let currentTags = [...tags];\n      currentTags.push(tag);\n      setTags(currentTags);\n    }\n    if (document.getElementById(tagDivId)?.querySelectorAll(\"input\")) {\n      setTimeout(function () {\n        document.getElementById(tagDivId).querySelectorAll(\"input\")[0].focus();\n      }, 500);\n    }\n\n    setState(initialState);\n  };\n\n  const removeTag = () => {\n    let tag = remove;\n    let currentTags = [...tags];\n    let newTags = currentTags.filter((t) => t != tag);\n\n    setRemove(undefined);\n    setTags(newTags);\n\n    setState(initialState);\n  };\n  let taggedText = text;\n  // console.log(typeof(text))\n  tags.map((t) => {\n    console.log(\"before\", taggedText);\n\n    taggedText = taggedText.replace(t, \"<tag>>\" + t + \"<tag>\");\n    console.log(\"after\", taggedText);\n  });\n  console.log(taggedText);\n\n  return (\n    <div onMouseUp={handleClick}>\n      {tags.length > 0 ? (\n        <Typography>\n          {\" \"}\n          {taggedText.split(\"<tag>\").map((t, i) => {\n            if (t[0] == \">\") {\n              t = t.substring(1);\n              console.log(rowData.tags, i);\n              return (\n                <Tooltip title={\"Interesting Pattern\"}>\n                  <span\n                    onMouseDown={() => setRemove(t)}\n                    style={{\n                      cursor: \"pointer\",\n                      backgroundColor: \"rgb(255 153 0 / 24%)\",\n                    }}>\n                    {t}\n                  </span>\n                </Tooltip>\n              );\n            } else {\n              return <span>{t}</span>;\n            }\n          })}\n          {/* {text.split(tags).map((t, i) => {\n              return <><span>{t}</span><Tooltip title={'Interesting Pattern'}><span onClick={()=>setRemove(true)} style={{backgroundColor: \"rgb(255 153 0 / 24%)\"}}>{tags}</span></Tooltip></>\n          })}  */}\n        </Typography>\n      ) : (\n        <Typography>{text}</Typography>\n      )}\n      <Menu\n        keepMounted\n        open={state.mouseY !== null}\n        onClose={handleClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          state.mouseY !== null && state.mouseX !== null\n            ? { top: state.mouseY, left: state.mouseX }\n            : undefined\n        }>\n        {remove ? (\n          <MenuItem onClick={removeTag}>Remove Tag</MenuItem>\n        ) : (\n          <MenuItem onClick={handleClose}>Tag</MenuItem>\n        )}\n      </Menu>\n    </div>\n  );\n}\n","import mockAllData from \"./mockData.json\";\nlet local = true;\nlet host = local ? \"http://127.0.0.1:5000\" : \"http://18.222.101.54\";\n\nexport async function performPrefixSpan(data) {\n  console.log(\"postData is \", data);\n  console.log(\"data is \", data);\n  let res = await postData(host + \"/prefix\", data);\n  return res;\n}\n\nexport async function getDataFromServer() {\n  //let res = await postData(host + \"/data\");\n  console.log(\"dywootto\", mockAllData);\n  try {\n    console.log(mockAPICall(host + \"/data\", mockAllData));\n    // let res = await postData(host + \"/data\");\n\n    let res = await mockAPICall(host + \"/data\", mockAllData);\n    return res;\n  } catch (err) {\n    console.log(\"dywootto res\", err);\n  }\n}\nexport async function getSchema(tableID) {\n  let res = await getData(`${host}/table/${tableID}/schema`);\n  return res;\n}\nexport async function getTaskDataFromServer(taskID) {\n  let res = await getData(`${host}/data/task/${taskID}`);\n  return res;\n}\n\nexport async function mysql_api(endpoint, body) {\n  let res = await postData(host + endpoint, body);\n  return res;\n}\n\nexport async function postData(uri, postBody, fetchOptions) {\n  // console.log('postBody is ', postBody)\n  let defaultHeaders = {\n    url: uri,\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\",\n    },\n    body: JSON.stringify(postBody),\n  };\n  const val = await completePromise(uri, defaultHeaders);\n  console.log(\"dywootto\", val);\n  return val;\n}\n\nexport async function getData(uri, fetchOptions) {\n  let defaultHeaders = {\n    headers: {\n      Accept: \"application/json\",\n    },\n  };\n  return await completePromise(uri, defaultHeaders);\n}\n\nexport async function completePromise(uri, requestOptions) {\n  let response;\n  try {\n    response = await fetch(uri, requestOptions);\n    // console.log(response.text())\n    // console.log(\"inpromise\", response);\n    response.data = await response.json();\n    response.success = response.ok;\n  } catch (err) {\n    // console.log(response.text())\n\n    console.log(\"error\", err);\n    throw err;\n  }\n  return response;\n}\n//let res = await mockAPICall(\"www.example.com\", { work: \"yeah\" }); you can mock out api calls using this\n\nexport async function mockAPICall(\n  url,\n  returnData,\n  options = {\n    shouldError: false,\n    timeout: 2000,\n  }\n) {\n  console.log(\"in mockAPI\");\n\n  const { shouldError, timeout } = options;\n  console.log(\"in mockAPI\");\n  return await new Promise((resolution, rejection) => {\n    console.log(\"dywootto in promiser\");\n    setTimeout(() => {\n      if (shouldError) {\n        rejection({\n          url,\n          success: false,\n          error: `mockAPICall error`,\n        });\n      } else {\n        console.log(\"dywootto in res\", returnData, url);\n        resolution({\n          url,\n          success: true,\n          data: returnData,\n        });\n      }\n    }, timeout);\n  });\n}\n","import React, {\n    useState,\n    useEffect\n} from 'react';\n\nexport function useFetchAPIData(fetchingFunc, dependencies) {\n    const [isLoading, setIsLoading] = useState(null);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [fetchedData, setFetchedData] = useState(null);\n\n    const onLoadingStart = () => {\n        setIsLoading(true);\n        setErrorMessage(\"\");\n    };\n\n    const onError = (error) => {\n        setIsLoading(false);\n        setErrorMessage(error);\n    };\n\n    const onDataFetched = (data) => {\n        setFetchedData(data);\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        onLoadingStart();\n        fetchingFunc()\n            .then(\n                (result) => {\n                    const success = result && result.success;\n                    if (success && result.data) {\n                        //const fetchData = result && result.data;\n                        onDataFetched(result.data);\n                    } else {\n                        onError(`Error occured obtaining data from server`);\n                    }\n                },\n                (error) => {\n                    onError(`Error occured during data fetch ${error?.message}`);\n                }\n            )\n            .catch((error) => {\n                onError(`Error occured after data fetched ${error?.message}`);\n            });\n    }, [...dependencies]);\n    return [isLoading, errorMessage, fetchedData];\n}","import React, { useState, useEffect, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport initProvData from \"../common/data/provenance_summary.json\";\nimport prefixSpanSampleData from \"../common/data/prefix_span_sample_data.json\";\nimport * as d3 from \"d3\";\nimport _ from \"lodash\";\nimport {\n  performPrefixSpan,\n  getDataFromServer,\n  getTaskDataFromServer,\n  mysql_api,\n} from \"../fetchers/fetchMocks.js\";\nimport { useFetchAPIData } from \"../hooks/hooks\";\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\n\nimport eventData from \"../common/data/provenance_events.json\";\nfunction addIdsToNodes(nodes) {\n  return nodes.map((node, index) => {\n    let dataObject;\n    if (index % 10 === 0) {\n      dataObject = { dataID: \"3c9ea11f-2a0b-46ee-9dc0-835d12561281\" };\n    } else if (index % 10 === 1) {\n      dataObject = { dataID: \"e3798172-df56-4124-8326-435b81ccb7a5\" };\n    } else if (index % 10 === 2) {\n      dataObject = { dataID: \"02a5a389-bc6b-4747-a1fb-f722158c66c6\" };\n    } else if (index % 10 === 3) {\n      dataObject = { dataID: \"698c9c66-63d5-4447-a4e6-7ba05e4aa5e9\" };\n    } else if (index % 10 === 4) {\n      dataObject = { dataID: \"74ed9ecf-e77b-4f45-8831-db220f5e2057\" };\n    } else if (index % 10 === 5) {\n      dataObject = { dataID: \"29c7a143-eac6-405e-ae66-e650754bb525\" };\n    } else if (index % 10 === 6) {\n      dataObject = { dataID: \"c78a8578-a5fc-411b-bb20-a6ebf9702273\" };\n    } else if (index % 10 === 7) {\n      dataObject = { dataID: \"f822c69d-1a7f-460a-80d5-58d24082fcfa\" };\n    } else if (index % 10 === 8) {\n      dataObject = { dataID: \"ff77ab34-ace1-498e-9367-beb4b72c9ea6\" };\n    } else {\n      dataObject = { dataID: \"1de36df0-5bf8-48a8-ad37-17641ada498f\" };\n    }\n    return Object.assign(node, dataObject);\n  });\n}\nlet nodes1 = [\n  { id: \"49607\", name: \"startedProvenance\", time: 0 },\n  { id: \"49608\", name: \"sort\", time: 0.133333 },\n  { id: \"49609\", name: \"sort\", time: 0.15 },\n  { id: \"49610\", name: \"sort\", time: 0.183333 },\n  { id: \"49611\", name: \"sort\", time: 0.2 },\n  { id: \"49612\", name: \"sort\", time: 0.216667 },\n  { id: \"49613\", name: \"sort\", time: 0.233333 },\n  { id: \"49614\", name: \"search\", time: 0.566667 },\n  { id: \"49615\", name: \"answerBox\", time: 0.716667 },\n  { id: \"49616\", name: \"Finished Task\", time: 0.733333 },\n];\nconst commonProps = {\n  condition: \"nodeLink\",\n  taskId: \"S-task13\",\n  participantId: \"545d6768fdf99b7f9fca24e3\",\n};\n\nconst ProvenanceDataContext = React.createContext({});\n\nexport const ProvenanceDataContextProvider = ({ children }) => {\n  // console.trace('calling provenanceDataContextProvider')\n  const [selectedTaskIds, setSelectedTaskIds] = React.useState([\"S-task01\"]);\n\n  const taskStructure = [\n    { name: \"Task 1\", key: \"S-task01\", prompt: \"\", actions: {}, stats: {} },\n    { name: \"Task 2\", key: \"S-task02\" },\n    { name: \"Task 3\", key: \"S-task03\" },\n    { name: \"Task 4\", key: \"S-task04\" },\n    { name: \"Task 5\", key: \"S-task05\" },\n    { name: \"Task 6\", key: \"S-task06\" },\n    { name: \"Task 7\", key: \"S-task07\" },\n    { name: \"Task 8\", key: \"S-task08\" },\n    { name: \"Task 9\", key: \"S-task09\" },\n    { name: \"Task 10\", key: \"S-task10\" },\n    { name: \"Task 11\", key: \"S-task11\" },\n    { name: \"Task 12\", key: \"S-task12\" },\n    { name: \"Task 13\", key: \"S-task13\" },\n    { name: \"Task 14\", key: \"S-task14\" },\n    { name: \"Task 15\", key: \"S-task15\" },\n    { name: \"Task 16\", key: \"S-task16\" },\n  ];\n\n  let [data, setData] = useState();\n  const [currentlyVisitedNodes, setCurrentlyVisitedNodes] = React.useState(\n    null\n  );\n  // const [metrics,setMetrics] = React.useState()\n\n  let conditions;\n  let metrics;\n\n  if (data) {\n    conditions = data.conditions;\n    metrics = data.metrics;\n  }\n\n  let [homeTaskSort, setHomeTaskSort] = useState();\n\n  function handleProvenanceNodeClick(id) {\n    console.log(\"dywootto handle provenance node click\", id);\n\n    // hardcoded data for now. ideally, we'll have the event id to be able to select on.\n    const taskId = selectedTaskIds[0];\n    const participantId = \"545d6768fdf99b7f9fca24e3\";\n    const taskNumber = 1;\n    const currentlyVisitedProvInfo = {\n      data: addIdsToNodes(nodes1),\n      props: commonProps,\n    };\n    console.log(\"about to set visited\", currentlyVisitedProvInfo);\n    setCurrentlyVisitedNodes(currentlyVisitedProvInfo);\n\n    // select all of that provenance graph.\n    //const promise = mysql_api(`/actions/${participantId}/${taskId}`);\n\n    //promise.then((resolved) => {\n    //  console.log(\"resolvedclick\", resolved);\n    //alert(`queried (skinny) provenance from db ${resolved.data}`);\n\n    // rehydrate provenance graph\n    // render vis using that provenance graph\n    //});\n  }\n  // get initial data from server;\n  let [isLoading, isError, dataFromServer] = useFetchAPIData(async () => {\n    return await getDataFromServer();\n  }, []);\n  // console.log(isLoading, isError, dataFromServer);\n  /*[{\"_id\":\"startedProvenance\",\"actionID\":\"startedProvenance\",\"category\":\"Study\\r\",\"condition\":\"nodeLink\",\"elapsedTime\":0,\"id\":1,\"label\":\"Start Task\",\"participantID\":\"545d6768fdf99b7f9fca24e3\",\"target\":null,\"taskID\":\"S-task01\",\"time\":\"Wed, 28 Aug 2019 00:51:18 GMT\",\"type\":\"action\"},{\"_id\":\"Hard Selected A Node\",\"actionID\":\"Hard Selected a Node\",\"category\":\"Answer\\r\",\"condition\":\"nodeLink\",\"elapsedTime\":0.283333,\"id\":2,\"label\":\"Select\",\"participantID\":\"545d6768fdf99b7f9fca24e3\",\"target\":null,\"taskID\":\"S-task01\",\"time\":\"Wed, 28 Aug 2019 00:51:35 GMT\",\"type\":\"action\"},{\"_id\":\"Hard Unselected A Node\",\"actionID\":\"Hard Unselected a Node\",\"category\":\"Answer\\r\",\"condition\":\"nodeLink\",\"elapsedTime\":0.316667,\"id\":3,\"label\":\"Unselect\",\"participantID\":\"545d6768fdf99b7f9fca24e3\",\"target\":null,\"taskID\":\"S-task01\",\"time\":\"Wed, 28 Aug 2019 00:51:37 GMT\",\"type\":\"action\"},{\"_id\":\"Hard Selected A Node\",\"actionID\":\"Hard Selected a Node\",\"category\":\"Answer\\r\",\"condition\":\"nodeLink\",\"elapsedTime\":0.45,\"id\":2,\"label\":\"Select\",\"participantID\":\"545d6768fdf99b7f9fca24e3\",\"target\":null,\"taskID\":\"S-task01\",\"time\":\"Wed, 28 Aug 2019 00:51:45 GMT\",\"type\":\"action\"},{\"_id\":\"Finished Task\",\"actionID\":\"Finished Task\",\"category\":\"Study\\r\",\"condition\":\"nodeLink\",\"elapsedTime\":0.666667,\"id\":4,\"label\":\"Finish Task\",\"participantID\":\"545d6768fdf99b7f9fca24e3\",\"target\":null,\"taskID\":\"S-task01\",\"time\":\"Wed, 28 Aug 2019 00:51:58 GMT\",\"type\":\"action\"}]*/\n\n  useEffect(() => {\n    console.log(\"data from server\", dataFromServer);\n    setData(dataFromServer);\n  }, [dataFromServer]);\n\n  //State\n  function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  const handleTagCreation = async (participantID, taskID, tag, action) => {\n    await timeout(200);\n\n    return tag;\n  };\n  let [taskSort, setTaskSort] = useState(\"name\");\n\n  /*const [allProvenanceData, setAllProvenanceData] = useState(() =>\n    processRawProvenanceData(initProvData)\n  );*/\n\n  const [currentTaskData, setCurrentTaskData] = React.useState([]);\n\n  let [\n    isTaskLoading,\n    isTaskError,\n    taskDataFromServer,\n  ] = useFetchAPIData(async () => {\n    console.log('dywootto getTaskData',selectedTaskIds);\n    const response = await getTaskDataFromServer(selectedTaskIds[0]);\n    response.data = response.data.map((datum) => {\n      // console.log(datum.sequence);\n      try {\n        datum.sequence = JSON.parse(`[${datum.sequence}]`);\n      } catch (err) {\n        console.error(\n          `[Provenance Data Context] Error Parsing ${datum.participantID}'s event sequence. This is likely caused by the sequence being > 16k characters.`\n        );\n        datum.sequence = [];\n      }\n      return datum;\n    });\n    return response;\n  }, [selectedTaskIds]);\n\n  useEffect(() => {\n    setCurrentTaskData(taskDataFromServer);\n  }, [taskDataFromServer]);\n\n  function handleChangeSelectedTaskId(event) {\n    setSelectedTaskIds([event.target.value]);\n  }\n\n  return (\n    <ProvenanceDataContext.Provider\n      value={{\n        currentTaskData,\n        taskStructure,\n        handleChangeSelectedTaskId,\n        selectedTaskIds,\n        data,\n        metrics,\n        setTaskSort,\n        homeTaskSort,\n        setHomeTaskSort,\n        conditions,\n        handleTagCreation,\n        handleProvenanceNodeClick,\n        currentlyVisitedNodes,\n        setCurrentlyVisitedNodes,\n      }}>\n      {children}\n    </ProvenanceDataContext.Provider>\n  );\n};\n\nfunction calculateRelativeProvGraph(taskPerformance, maxTime) {\n  let totalTime =\n    new Date(taskPerformance.endTime) - new Date(taskPerformance.startTime);\n  let scale = maxTime / totalTime;\n  taskPerformance[\"totalTime\"] = totalTime;\n  taskPerformance[\"relativeStartTime\"] = 0;\n  taskPerformance[\"relativeStopTime\"] = 1 / scale;\n  if (taskPerformance[\"provenance\"]) {\n    taskPerformance[\"provenance\"] = taskPerformance[\"provenance\"].map(\n      (node) => {\n        node[\"percentTime\"] =\n          (new Date(node[\"time\"]) - new Date(taskPerformance[\"startTime\"])) /\n          totalTime;\n        node[\"relativeTime\"] = node[\"percentTime\"] / scale;\n\n        return node;\n      }\n    );\n  } else {\n    taskPerformance[\"provenance\"] = [];\n  }\n\n  return taskPerformance;\n}\nfunction processRawProvenanceData(unrelativeProvenanceData) {\n  //remove element with no data\n  unrelativeProvenanceData = unrelativeProvenanceData.filter(\n    (d) => Object.keys(d.data).length > 0\n  );\n\n  //remove elements with no, or messed up provenance (more than one started prov event)\n  unrelativeProvenanceData = unrelativeProvenanceData.filter((d) => {\n    let tasks = Object.keys(d.data).filter((t) => t.includes(\"task\"));\n\n    return tasks.reduce((acc, task) => {\n      if (!d.data[task].provenance) {\n        //participant has no provenance for a certain task.\n        return false;\n      } else {\n        //element has more than on 'startedProvenance' event in the same task.\n        return (\n          acc &&\n          d.data[task].provenance.filter((p) => p.event == \"startedProvenance\")\n            .length == 1\n        );\n      }\n    }, true);\n  });\n\n  // console.trace('calling process Raw prov data')\n  const taskIds = [\n    \"S-task01\",\n    \"S-task02\",\n    \"S-task03\",\n    \"S-task04\",\n    \"S-task05\",\n    \"S-task06\",\n    \"S-task07\",\n    \"S-task08\",\n    \"S-task09\",\n    \"S-task10\",\n    \"S-task11\",\n    \"S-task12\",\n    \"S-task13\",\n    \"S-task14\",\n    \"S-task15\",\n    \"S-task16\",\n  ];\n\n  const relativeProvenanceData = _.cloneDeep(unrelativeProvenanceData);\n\n  taskIds.forEach((taskId) => {\n    let longestTimeForTask = d3.max(unrelativeProvenanceData, (participant) => {\n      if (\n        participant.data &&\n        participant.data[taskId]?.startTime &&\n        participant.data[taskId]?.endTime\n      ) {\n        return (\n          new Date(participant.data[taskId].endTime) -\n          new Date(participant.data[taskId].startTime)\n        ); // minutes->seconds->ms\n      }\n      return 0;\n    });\n    // console.log(\"longest time\", longestTimeForTask);\n    unrelativeProvenanceData.forEach((participant, index) => {\n      if (participant.data && participant.data[taskId]) {\n        relativeProvenanceData[index].data[taskId] = calculateRelativeProvGraph(\n          participant.data[taskId],\n          longestTimeForTask\n        );\n        //create id field in each provenance event (that doesn't change with edits)\n        participant.data[taskId].provenance.map((p) => (p.id = p.event));\n      } else {\n        delete relativeProvenanceData[index][taskId];\n        // console.log(\"NO DATA\", relativeProvenanceData[index], taskId);\n      }\n    });\n  });\n\n  return relativeProvenanceData;\n}\n\nexport default ProvenanceDataContext;\n","import React from \"react\";\nimport Add from \"@material-ui/icons/Add\";\nimport PanTool from \"@material-ui/icons/PanTool\";\nimport Sort from \"@material-ui/icons/Sort\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport Search from \"@material-ui/icons/Search\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport Start from \"@material-ui/icons/Star\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\n\nconst colors = [\n  \"#c6e0d6\",\n  \"#8fcab4\",\n  \"#67aca9\",\n  \"#5d83d2\",\n  \"#6b56dd\",\n  \"#9e93a1\",\n];\n// generated from https://leonardocolor.io/?colorKeys=%235b89d2%2C%235dbb9c%2C%23723ce7%2C%238e18b9&base=ffffff&ratios=1.4%2C1.64%2C2.12%2C2.80%2C3.71%2C4.88%2C6.35%2C9.00&mode=CAM02\nconst answerSelectColor = colors[0];\nconst dragColor = colors[1];\nconst sortColor = colors[2];\nconst selectColor = colors[3];\nconst searchColor = colors[4];\nconst clearColor = colors[5];\n\nconst eventMapping = {\n  custom: {\n    name: \"CustomIcon\",\n    color: \"#d1d1d1\",\n    icon: <CheckBoxOutlineBlankIcon width={16} height={16} />,\n  },\n\n  startedProvenance: {\n    name: \"PlayArrowIcon\",\n    color: \"#d1d1d1\",\n    icon: <PlayArrowIcon width={16} height={16} />,\n  },\n  \"Finished Task\": {\n    name: \"StopIcon\",\n    color: \"#d1d1d1\",\n    icon: <StopIcon width={16} height={16} />,\n  },\n\n  answerBox: {\n    name: \"Add\",\n    color: answerSelectColor,\n    icon: <Add width={16} height={16} />,\n  },\n  \"Hard Selected a Node\": {\n    name: \"Add\",\n    color: answerSelectColor,\n    icon: <Add width={16} height={16} />,\n  },\n  \"Dragged Node\": {\n    name: \"PanTool\",\n    color: dragColor,\n    icon: <PanTool width={16} height={16} />,\n  },\n  sort: {\n    name: \"Sort\",\n    color: sortColor,\n    icon: <Sort width={16} height={16} />,\n  },\n  attrRow: {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: <FiberManualRecordIcon width={16} height={16} />,\n  },\n  \"Hard Unselected a Node\": {\n    name: \"RadioButtonUncheckedIcon\",\n    color: answerSelectColor,\n    icon: <RadioButtonUncheckedIcon width={16} height={16} />,\n  },\n  \"Select Node\": {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: <FiberManualRecordIcon width={16} height={16} />,\n  },\n  rowLabel: {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: <FiberManualRecordIcon width={16} height={16} />,\n  },\n  colLabel: {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: <FiberManualRecordIcon width={16} height={16} />,\n  },\n  search: {\n    name: \"Search\",\n    color: searchColor,\n    icon: <Search width={16} height={16} />,\n  },\n  \"Searched for Node\": {\n    name: \"Search\",\n    color: searchColor,\n    icon: <Search width={16} height={16} />,\n  },\n  cell: {\n    name: \"FiberManualRecordIcon\",\n    color: selectColor,\n    icon: <FiberManualRecordIcon width={16} height={16} />,\n  },\n  \"Unselect Node\": {\n    name: \"RadioButtonUncheckedIcon\",\n    color: selectColor,\n    icon: <RadioButtonUncheckedIcon width={16} height={16} />,\n  },\n  clear: {\n    name: \"Clear\",\n    color: clearColor,\n    icon: <Clear width={16} height={16} />,\n  },\n  \"cleared all selected nodes\": {\n    name: \"Clear\",\n    color: clearColor,\n    icon: <Clear width={16} height={16} />,\n  },\n  // \"startedProvenance\": {\n  //   name: \"Start\",\n  //   color: 'rgb(255,255,255)',\n  //   icon: < Start width={\n  //     16\n  //   }\n  //     height={\n  //       16\n  //     }\n  //   />\n  // },\n  // \"Finished Task\": {\n  //   name: \"Start\",\n  //   color: 'rgb(255,255,255)',\n  //   icon: < Start width={\n  //     16\n  //   }\n  //     height={\n  //       16\n  //     }\n  //   />\n  // }\n};\n\nexport default eventMapping;\n","//@ts-nocheck\nimport React from \"react\";\nimport eventMapping from \"./eventMapping.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fade from \"@material-ui/core/Fade\";\nimport styles from \"./ProvenanceIsolatedNodes.module.css\";\nconst ProvenanceIsolatedNodes = ({\n  nodes,\n  selectedItemId,\n  hoveredItemId,\n  handleHover = console.log,\n  handleProvenanceNodeClick = console.log,\n}) => {\n  // console.log(\"dywootto\", nodes);\n  function determineItemOpacity(node, selectedItemId, hoveredItemId) {\n    let opacity;\n    if (selectedItemId && node.id !== selectedItemId) {\n      opacity = 0.1;\n    } else if (hoveredItemId && node.id !== hoveredItemId) {\n      opacity = 0.1;\n    }\n    if (node.id === hoveredItemId || node.id === selectedItemId) {\n      opacity = 1;\n    }\n    return opacity;\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      style={{ display: \"flex\", flexDirection: \"row\" }}>\n      {nodes.map((node, index) => {\n        const opacity = determineItemOpacity(\n          node,\n          selectedItemId,\n          hoveredItemId\n        ); //node.id === selectedItemId ? 1 : 0.5;\n        return (\n          <div\n            key={index}\n            style={{ opacity }}\n            onMouseEnter={() => handleHover(node.id)}\n            onMouseLeave={() => handleHover(null)}\n            onClick={() => handleProvenanceNodeClick(node)}>\n            <IsolatedNode node={node}></IsolatedNode>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const IsolatedNode = ({ node }) => {\n  let eventMap = eventMapping[node.name]\n    ? eventMapping[node.name]\n    : eventMapping[\"custom\"];\n  //add check for custom icons for newly created events;\n  const icon = eventMap.icon;\n  console.log(\"in rerender\", node, eventMapping[node.name], eventMapping);\n  // node.event !== \"startedProvenance\" &&\n  //   node.event !== \"Finished Task\" ?\n  return (\n    <Tooltip\n      TransitionComponent={Fade}\n      TransitionProps={{ timeout: 600 }}\n      title={`${node.name} ${node.count ? `[${node.count}]` : \"\"}`}\n      PopperProps={{\n        popperOptions: {\n          modifiers: {\n            offset: {\n              enabled: true,\n              offset: \"0px, -6px\",\n            },\n          },\n        },\n      }}\n      arrow>\n      <svg width={34} height={34}>\n        <rect\n          x={0}\n          y={0}\n          width={30}\n          height={30}\n          rx={5}\n          fill={eventMap.color}\n          opacity={node.scale || 1}></rect>\n        <g transform={`translate(7,5)`}>{icon}</g>\n      </svg>\n    </Tooltip>\n  );\n  // : (\n  //   <div></div>\n  // );\n};\n\nexport default ProvenanceIsolatedNodes;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport TrendingFlatIcon from \"@material-ui/icons/TrendingFlat\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport Fab from '@material-ui/core/Fab';\n\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport Tagger from \"../components/Tagger\"\n\nimport SortIcon from '@material-ui/icons/Sort';\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport { useFetchAPIData } from \"../hooks/hooks\";\n\n// import * as PouchDB from 'pouchdb-browser';\n\nimport * as d3 from \"d3\";\n\nimport ProvenanceDataContext from \"../components/ProvenanceDataContext\";\nimport ProvenanceIsolatedNodes from \"../components/ProvenanceIsolatedNodes\";\n\nimport Grid, { GridSpacing } from \"@material-ui/core/Grid\";\nimport { pathToFileURL } from \"url\";\nimport { keys } from \"mobx\";\nimport { Sort } from \"@material-ui/icons\";\n\nlet rowHeight = 300;\nlet figureWidth = 572;\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiTableCell: {\n      root: {\n        padding: 10,\n      },\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    flexGrow: 1,\n  },\n  table: {\n    padding: \"10px\",\n  },\n  sortable:{\n    cursor:'pointer',\n    backgroundColor:'rgb(240,240,240)'\n  },\n  sorted:{\n    fill:'#5d83d2'\n  },\n  media: {\n    width: figureWidth,\n    height: rowHeight,\n    // border: '1px solid lightgray'\n  },\n  condition: {\n    fontSize: \"1em\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nvar groupBy = function (xs, key) {\n  return xs.reduce(function (rv, x) {\n    (rv[x[key]] = rv[x[key]] || []).push(x);\n    return rv;\n  }, {});\n};\n\nfunction scale(width, maxValue) {\n  return d3.scaleLinear().range([10, width]).domain([0, maxValue]);\n}\n\nconst accScale = scale(40, 1);\nconst timeScale = scale(40, 3.59);\n\n\n\n\n\nexport const BarChart = (props) => {\n  const { allData, hoveredRow, hoveredRowColor, metric, vert = false, size = { width: 150, height: 200 } } = props;\n\n  let data =  allData.find(\n    (m) => m.metric == metric\n  );\n  if (\n    data.type == \"text\" ||\n    data.type == \"longtext\"\n  ){\n  let width = vert ? size.width : 900;\n  let height = vert ? size.height : 80;\n\n\n  let maxBarHeight = vert ? 20 : height-10;\n\n\n  let varsToPlot = Object.entries(data.count).sort((a,b)=>a[1]>b[1] ? -1 : 1).slice(0,20)\n\n  \n\n  //compute scale for data;\n  let yDomain = varsToPlot.map(v=>v[0]);\n  let xDomain = d3.extent(varsToPlot.map(v=>v[1]));\n\n  let xScale = d3.scaleLinear().domain(xDomain).range([0, maxBarHeight]);\n   \n\n  let yScale =  d3.scaleBand()\n  .domain(yDomain)\n  .range([0, height])\n  .padding(0.65);\n\n  let barWidth = yScale.bandwidth();\n\n  let hoveredStats = hoveredRow ? hoveredRow.stats.find(m=>m.metric == metric ) : undefined\n  let hoveredVarsToPlot = hoveredStats ? Object.entries(hoveredStats.count).sort((a,b)=>a[1]>b[1] ? -1 : 1).slice(0,20) : []\n\n\n  if (!vert){\n    xDomain = varsToPlot.map(v=>v[0]);\n    yDomain = [0,d3.extent(varsToPlot.map(v=>v[1]))[1]];\n\n    yScale = d3.scaleLinear().domain(yDomain).range([15, maxBarHeight]);\n    \n\n    xScale =  d3.scaleBand()\n    .domain(xDomain)\n    .range([0, width])\n    .padding(0.5);\n\n    barWidth = xScale.bandwidth();\n  }\n\n    let nothingToPlot = varsToPlot.length < 1 ;\n    let transform = vert ? 'translate(100px,0px)' :  'translate(10px,20px)'\n  { return nothingToPlot ? null :  <svg width={width+10} height={height+20}>\n      {/* add axis */}\n      <g style={{transform: transform}}>\n      <line\n        x1={0}\n        y1={vert ? yScale.range()[0] : yScale.range()[1]}\n        x2={vert ? 0  : xScale.range()[1]}\n        y2={yScale.range()[1]}\n        style={{ stroke: \"rgb(0,0,0,0.25)\", strokeWidth: 1 }}></line>\n      {varsToPlot.map((entry) => {\n        let key = entry[0];\n        let value = entry[1]\n        let tooltipText = key + \" : \" + value;\n\n        let x = vert ? xScale(value)+5 : xScale(key)-3;\n        let y = vert ? yScale(key)-barWidth : height - yScale.range()[0] \n        return (\n          < React.Fragment key = {key}>\n            <Tooltip title={tooltipText}>\n              <rect\n                className=\"count\"\n                key={\"d_\" + key}\n                style={{ opacity: hoveredRowColor ? .5 : 1, fill: \"rgb(93, 131, 210)\" }}\n                x={vert ? 0 : xScale(key)}\n                y={vert ? yScale(key) : height - yScale.range()[0] - yScale(value)}\n                width={vert ? xScale(value) : barWidth}\n                height={vert ? barWidth : yScale(value)}></rect>\n            </Tooltip>\n            <Tooltip title={tooltipText}>\n              <text\n                style={{\n                  fontSize: \"1em\",\n                  textAnchor: \"start\",\n                  transform:\"translate(\" + x + \"px,\" + y + \"px) rotate(270deg)\"\n                }}\n               \n                x={0}\n                y={0}>\n                {\" \"}\n                {key}{\" \"}\n              </text>\n              </Tooltip>\n              {hoveredRowColor ? '' : <text\n              style={{\n                fontSize: \"1em\",\n                textAnchor: \"middle\",\n              }}\n              x={ vert ? -5 : xScale(key)+barWidth/2}\n              y={vert ? yScale(key)-barWidth : height - yScale.range()[0] - yScale(value)-2}>\n                {\" \"}\n                {value}{\" \"}\n              </text>}\n           \n              </React.Fragment>\n        );\n      })}\n\n    {/* //Only plot hoveredVars that are in the original top 20 to keep the distribution of bars the same */}\n    {hoveredVarsToPlot.filter(d=>xScale(d[0])).map((entry) => {\n        let key = entry[0];\n        let value = entry[1]\n        let tooltipText = key + \" : \" + value;\n\n        let x = vert ? xScale(value)+5 : xScale(key)-3;\n        let y = vert ? yScale(key)-barWidth : height - yScale.range()[0] \n        return (\n          <React.Fragment key={'hovered' + key}>\n            <Tooltip title={tooltipText}>\n              <rect\n                className=\"count\"\n                key={\"d_\" + key}\n                style={{ fill: hoveredRowColor }}\n                x={vert ? 0 : xScale(key)}\n                y={vert ? yScale(key) : height - yScale.range()[0] - yScale(value)}\n                width={vert ? xScale(value) : barWidth}\n                height={vert ? barWidth : yScale(value)}></rect>\n            </Tooltip>\n          \n              <text\n              style={{\n                fontSize: \"1em\",\n                textAnchor: \"middle\",\n              }}\n              x={ vert ? -5 : xScale(key)+barWidth/2}\n              y={vert ? yScale(key)-barWidth : height - yScale.range()[0] - yScale(value)-2}>\n                {\" \"}\n                {value}{\" \"}\n              </text>\n           \n              </React.Fragment>\n        );\n      })}\n      </g>\n    </svg>\n  }\n  ;\n\n  }\n\n  return null\n\n  \n};\n\n{\n  /* <>{[0, 1, 2,3,4].map(i => {\n                                  let frequentActions = freqPattern[i].seq.map(a => ({ event: a, id: a, count: freqPattern[i].count, scale: colorScale(freqPattern[i].count) })) //actions.filter(a => a.taskID == task.taskID && a.condition == condition).splice(0, 5).map(a => ({ event: a.label, id: a.actionID, count: a.count, scale: colorScale(a.count) }))\n                                  return <>\n                                    <Box style={{ display: 'block' }} >\n                                      <Box  mb={\"6px\"} style={{ display: 'inline-block', width: 100 }}>\n\n                                        <svg width={100} height={34}>\n                                        <rect x={100-countScale(freqPattern[i].count)} y={0} width={countScale(freqPattern[i].count)} height={30} style={{fill: 'rgb(147 195 209)', 'stroke':'white', strokeWidth:'8px' }}></rect>\n                                        <text x={90} y={20} style={{'fontWeight':'bold','textAnchor':'end'}}>{freqPattern[i].count}</text>\n\n                                        </svg>\n                                      </Box>\n                                      <Box mt={\"5px\"} mb={\"6px\"} style={{ display: 'inline-block', width: 300 }}>\n                                        <ProvenanceIsolatedNodes\n                                          key={task.taskID}\n                                          nodes={\n                                            frequentActions\n                                          }></ProvenanceIsolatedNodes>\n                                      </Box>\n                                    </Box>\n                                  </>\n                                }\n                                )}\n                                </> */\n}\nlet countScale = d3.scaleLinear().range([0, 75]).domain([0, 137]);\n\nfunction Stimulus({taskID,conditionName,classes}){\n  // console.log('am rerendering')\n  return  <><Box mt={\"5px\"} mb={\"6px\"} mr={\"10px\"} boxShadow={1}>\n  <CardMedia\n    style={{ display: \"inline-block\" }}\n    className={classes.media}\n    component=\"img\"\n    image={require(\"../static/taskImages/\" +\n      taskID +\n      \"_\" +\n      conditionName +\n      \".png\")}\n    // image=\"https://placekitten.com/g/100/100\"\n    title=\"Task 1 AM\"\n  />\n</Box>\n<Typography\n  className={classes.pos}\n  variant=\"overline\"\n  color=\"primary\">\n  Stimulus\n</Typography>\n</>\n}\n\n//Compoment to draw participant counts for each interaction sequence\nfunction SequenceCount({row,hoveredRow,hoveredRowColor}){\n  let total = 137;\n  let height =25;\n  let iconWidth = 3;\n  let padding = 1;\n  let numIconsPerCol = Math.floor(height/(iconWidth+padding))\n  let numCols = Math.ceil(total/numIconsPerCol)\n  let width = numCols*(iconWidth+padding) \n\n  let textWidth = 25\n\n  let xScale = d3.scaleLinear().range([0,iconWidth+padding]).domain([0,1])\n  let yScale = d3.scaleLinear().range([0,height]).domain([0,numIconsPerCol])\n\n  let currentParticipants = row.matchingSequences.map(s=>s.participantID)\n  let hoveredParticipants = hoveredRow ? hoveredRow.matchingSequences.map(s=>s.participantID) : []\n\n  let intersection = currentParticipants.filter(x => hoveredParticipants.includes(x));\n  \n\n  // width = countScale.range()[1]\n\n  return  <svg width={width+textWidth} height={height}>\n  {Array.from(Array(total).keys()).map(key=>{\n    return <rect key={key}\n    x={xScale(Math.floor(key/numIconsPerCol))}\n    y={yScale(key%numIconsPerCol)+padding}\n    width={iconWidth}\n    height={iconWidth}\n    style={{\n      // opacity: key < intersection.length ? 1 : .2,\n      fill: key < intersection.length ? hoveredRowColor : key < row.count ? \"rgb(150, 150, 150)\" :  'rgb(220, 220, 220)'  //rgb(147 195 209)\n    }}></rect>\n  })} \n  \n  <text\n    x={xScale(numCols)+padding}\n    y={yScale(numIconsPerCol/2)}\n    style={{ fontWeight: \"bold\", alignmentBaseline:'middle', textAnchor: \"start\" ,'fill':'rgb(93, 131, 210)' }}>\n    {row.count}\n  </text>\n  \n  \n \n  {/* <rect\n    x={0}\n    y={0}\n    width={countScale(137)}\n    height={20}\n    style={{\n      fill: \"rgb(220, 220, 220)\"\n    }}></rect>\n\n<rect\n    x={0}\n    y={0}\n    width={countScale(row.count)}\n    height={20}\n    style={{\n      fill: \"rgb(93, 131, 210)\"\n    }}></rect>\n\n<text\n    x={countScale(137)+padding}\n    y={10}\n    style={{ fontWeight: \"bold\", alignmentBaseline:'middle', textAnchor: \"start\" ,'fill':'rgb(93, 131, 210)' }}>\n    {row.count}\n  </text> */}\n  \n  \n</svg>\n}\n\nfunction SortIconContainer({sorted,classes}){\n  let size = 20;\n  return <svg width={size} height={size} style={{paddingTop:'5px'}}>\n    <SortIcon className = {sorted ? classes.sorted : ''} style={{transform: \"rotate(-180deg)\"}}  width={size} height={size} /></svg>\n}\n\n//Compoment to draw interaction sequence tables\nfunction TableComponent({rows,hoveredRowColor, hoveredRow=undefined,setHoveredRow=undefined}){  \n// console.log('rendering table',hoveredRow) \n  // console.log(rows)\n\n  const classes = useStyles();\n\n\n  let [sort,setSort]=useState({value:'Count',desc:{'Count':true,'Pattern':true}})\n\n  // useEffect()({\n    rows.sort((a,b)=>{\n      let aValue = sort.value == 'Count' ? a.count : a.seq.length;\n      let bValue = sort.value == 'Count' ? b.count : b.seq.length;\n      let rValue = sort.desc[sort.value] ? -1 : 1\n      return aValue > bValue ? rValue : -rValue\n    })\n  // },[])\n  \n  // console.log(rows)\n  return (\n    <MuiThemeProvider theme={theme}>\n      <TableContainer style={{ maxHeight:'300px'}}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n    <TableRow>\n      {[{key:'Pattern',title:'Interaction Pattern'},{key:'Count',title:'Participant Count'}].map(header=>{\n              return <TableCell  key = {header['key']} onClick={ () =>{\n                sort =  { ...sort }; \n                let sameKey = sort.value == header.key;\n                sort.value  = header.key; \n                sort.desc[header.key] =  sameKey ? !sort.desc[header.key] : true; \n                setSort(sort);\n              \n              }}  className={classes.sortable}> {header.title}<SortIconContainer classes = {classes} sorted={sort.value == header.key}></SortIconContainer></TableCell>\n      })}\n    </TableRow>\n  </TableHead>\n          <TableBody>\n            {rows.map((row, i) => {\n              // console.log('row',row)\n              return (\n              <TableRow key={row.id} onMouseEnter={() =>{setHoveredRow(row)}} onMouseLeave={() => setHoveredRow()} style={{background: hoveredRow == row? 'rgb(245,245,245)':'white'}} >\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    style={{ width:'300px', padding: \"10px\"}}>\n                    {row.seq ? (\n                      <ProvenanceIsolatedNodes\n                        // key={}\n                        nodes={row.seqObj} selectedItemId = {undefined} handleProvenanceNodeClick={()=>{}}></ProvenanceIsolatedNodes>\n                    ) : (\n                      row.answer\n                    )}\n                  </TableCell>\n                  {row.seq ? (\n                    <TableCell align=\"left\">\n                     <SequenceCount row = {row} hoveredRow = {hoveredRow} hoveredRowColor = {hoveredRowColor}></SequenceCount>\n                    </TableCell>\n                  ) : (\n                    <></>\n                  )}\n                  {/* <TableCell  component=\"th\" scope=\"row\" style={{padding:'10px'}}>\n          {row.seq? <Histogram data={value} ci={value.ci} />: <></>}\n        </TableCell> */}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </MuiThemeProvider>\n  );\n}\n\n// Compoment for single metric histogram\nfunction Histogram({data,hoveredRow,metric,hoveredRowColor}){\n  // let hoveredStats = undefined; \n  // let hoveredCI = undefined;\n  let value = data.find(\n    (m) => m.metric == metric\n  );\n  if (\n    value.type == \"int\" ||\n    value.type == \"float\"\n  ) {\n\n    let hoveredStats = hoveredRow ? hoveredRow.stats.find(m=>m.metric == metric ) : undefined;\n    let hoveredCI = hoveredStats ? hoveredStats.ci : undefined;\n    return (\n      <Grid key={metric+ '_hist'} item>\n        {<DrawHistogram hoveredRowColor={hoveredRowColor} data={hoveredStats || value} ci={hoveredCI ||  value.ci} />}\n        <Typography\n          style={{ display: \"block\" }}\n          color=\"primary\"\n          variant=\"overline\">\n          {metric}\n        </Typography>\n      </Grid>\n    );\n  }\n  // if (value.type == \"text\") {\n  //   return (\n  //     <Grid key={metric+'_bar'} item>\n  //       <BarChart data={value}></BarChart>\n  //       <Typography\n  //         style={{ display: \"block\" }}\n  //         color=\"primary\"\n  //         variant=\"overline\">\n  //         {metric}\n  //       </Typography>\n  //     </Grid>\n  //   );\n  // }\n  return <></>;\n\n}\n\n\nexport const DrawHistogram = (props) => {\n\n  const { data, hoveredRowColor, ci, size = { width: 100, height: 40 } } = props;\n\n  let[hovered,setHovered]=useState(false)\n\n  let menu = function () {\n    return <><rect\n      x={0}\n      y={0}\n      width={width}\n      height={height}\n      rx={5}\n      fill={'white'}\n      opacity={.5}></rect>\n\n\n      <g transform={`translate(0,0)`}>{<SortIcon width={\n        16\n      }\n        height={\n          16\n        } />}\n        <text x={20} y={10}>Sort</text>\n      </g>\n\n    </>\n  }\n\n  let average = ci[0];\n  let lowerBound = ci[1];\n  let upperBound = ci[2];\n\n  let width = size.width;\n  let height = size.height;\n\n  let barHeight = 20;\n  let barPadding = 2;\n  //compute scale for data;\n  let xDomain = d3.extent(data.bins);\n  let yDomain = d3.extent(data.hist);\n\n  let xScale = d3\n    .scaleLinear()\n    .domain(xDomain)\n    .range([10, width - 40]);\n\n  let yScale = d3.scaleLinear().domain(yDomain).range([0, barHeight]);\n\n  let barWidth = xScale(data.bins[1]) - xScale(data.bins[0]) - barPadding;\n\n  let textLabel = Math.round(average * 10) / 10; //label == '%' ? (Math.round(average * 100) + ' ' + label) : Math.round(average * 10) / 10 + ' ' + label\n  \n  \n  return (<>\n    <svg style={{transform:'translate(-10px,0px)'}} width={width} height={height} onMouseEnter={() => setHovered(true)} onMouseLeave={() => setHovered(false)}>\n      <g transform = {'translate(10,0)'}><line\n        x1={0}\n        y1={yScale.range()[1]}\n        x2={xScale.range()[1]}\n        y2={yScale.range()[1]}\n        style={{ stroke: \"rgb(0,0,0,0.25)\", strokeWidth: 1 }}></line>\n        {data.hist.map((d, i) => (\n          <rect\n            className=\"count\"\n            key={\"d_\" + data.bins[i]}\n            style={{ fill: hoveredRowColor || \"rgb(93, 131, 210)\" }}\n            x={xScale(data.bins[i]) + barPadding / 2}\n            y={barHeight - yScale(d)}\n            width={barWidth}\n            height={yScale(d)}></rect>\n        ))}\n        <circle\n          className=\"count\"\n          style={{ fill: \"#ff5e00\", opacity: 1 }}\n          cx={xScale(average)}\n          cy={yScale.range()[1] / 2}\n          r={5}></circle>\n\n        <line\n          className=\"count\"\n          style={{ stroke: \"black\", strokeWidth: 2, opacity: 0.5 }}\n          x1={xScale(lowerBound)}\n          x2={xScale(upperBound)}\n          y1={yScale.range()[1] / 2}\n          y2={yScale.range()[1] / 2}></line>\n\n<text\n          style={{ fontSize: \"1em\", textAnchor: \"middle\" }}\n          x={xScale(average)}\n          y={40}>\n          {\" \"}\n          {textLabel}{\" \"}\n        </text>\n   \n      \n      {hovered ? <>\n      \n        <text\n          style={{ fill:'rgb(0,0,0,0.25)', fontSize: \"1em\", textAnchor: \"end\" }}\n          x={-2}\n          y={23}>\n          {\" \"}\n          {Math.floor(xScale.domain()[0])}{\" \"}\n        </text>\n        <text\n          style={{ fill: 'rgb(0,0,0,0.25)' ,fontSize: \"1em\", textAnchor: \"start\" }}\n          x={xScale.range()[1]+2}\n          y={23}>\n          {\" \"}\n          {Math.ceil(xScale.domain()[1])}{\" \"}\n        </text>\n      \n      </> : null}\n      </g>\n    </svg>\n  </>\n\n  );\n};\n\n//Compoment for the card for a single Condition\nfunction ConditionCard({ condition, conditionName, classes, taskID }) {\n  \n  //Keeps track of which rows in the table are hovered on\n  const [hoveredRow, setHoveredRow] = useState();\n  let[hidden,setHidden]=useState(false)\n\n\n  let hoveredRowColor =  '#f59c3d' // '#9100e6'; \n  let freqPattern, data, metricValues;\n\n  //only compute when the condition changes\n  // useEffect(() => {\n    // console.log('calling use effect')\n    freqPattern = condition.patterns[0].topK;\n    data = condition.stats;\n\n    metricValues = [...new Set(data.map((m) => m.metric))]; \n\n    freqPattern.map((action,i) => {\n      action.id = i;\n      action.seqObj = action.seq.map(a => ({ name: a, id: a, count: action.count }))\n      return action\n    }) \n\n  // }, [condition]);\n    // console.log(condition.textAnswers.map(a=>a.answer).flat())\n  // console.log(metricValues)\n  return (!metricValues ? <></> :\n    <React.Fragment key={\"ConditionCard_\" + conditionName}>\n      <Typography  onClick={()=>{setHidden(!hidden)}} style={{ cursor:'pointer' }} className={classes.condition} variant=\"overline\">\n        {conditionName}\n      </Typography>\n      {hidden ? <></> :<Grid container className={classes.root} spacing={2}>\n        <Grid item xs={12}>\n          <Grid container justify=\"flex-start\" spacing={2}>\n            <Grid key={\"cat\"} item>\n              <Stimulus taskID={taskID} classes={classes} conditionName={conditionName}></Stimulus>\n            </Grid>\n            <Grid key={\"prov\"} item>\n              <Box height={rowHeight} width={600} mt={\"5px\"} mb={\"6px\"} mr={'10px'} boxShadow={0} style={{ overflow: 'scroll' }}>\n                {<TableComponent rows={freqPattern} hoveredRow={hoveredRow} hoveredRowColor = {hoveredRow ? hoveredRowColor : undefined} setHoveredRow={setHoveredRow}></TableComponent>}\n              </Box>\n              <Typography\n                className={classes.pos}\n                variant=\"overline\"\n                color=\"primary\">\n                Actions\n              </Typography>\n            </Grid>\n            <Grid key={'performanceMetrics'} item xs>\n              <Grid key={'performanceMetrics'} item style={{ display: 'block' }}>\n                <Box height={rowHeight / 2.5} p={\"20px\"} mt={\"5px\"} mb={\"6px\"} mr={'10px'} style={{ overflow: 'scroll', display: 'inline-flex' }} boxShadow={1}>\n                  {metricValues.map((metric) => {\n                    return <Histogram key={metric} data = {data} hoveredRow={hoveredRow} hoveredRowColor = {hoveredRow ? hoveredRowColor : undefined} metric={metric}></Histogram>\n                  })}\n                </Box>\n                <Typography\n                  className={classes.pos}\n                  variant=\"overline\"\n                  color=\"primary\"\n                  style={{ display: \"block\" }}>\n                  Performance Metrics\n                </Typography>\n              </Grid>\n\n              <Grid key={\"qualData\"} item xs>\n                <Box\n                  height={rowHeight / 2.5}\n                  width={1}\n                  mt={\"5px\"}\n                  mb={\"6px\"}\n                  mr={\"10px\"}\n                  boxShadow={1}\n                  style={{ overflow: \"scroll\" }}>\n                     {metricValues.map((metric) => {\n                    return <BarChart key = {metric} allData = {data} hoveredRow={hoveredRow} hoveredRowColor = {hoveredRow ? hoveredRowColor : undefined} metric={metric}></BarChart>\n                  })}\n                  {<Tagger text = {condition.textAnswers.map(a=>a.answer).flat().join('--')}></Tagger>}\n                  {/* <TableComponent rows={condition.textAnswers}></TableComponent> */}\n                </Box>\n                <Typography\n                  className={classes.pos}\n                  variant=\"overline\"\n                  color=\"primary\">\n                  Word Counts for Qualitative Responses\n                </Typography>\n              </Grid>\n            </Grid>\n      \n\n            {/* {condition.textAnswers.map(txt=>{\n              return <List dense={true}>\n              <ListItem>\n                <ListItemText\n                  primary={txt.answer}\n                  secondary={null}\n                />\n              </ListItem>\n          </List>\n            })} */}\n          </Grid>\n        </Grid>\n      </Grid>\n}\n      <Divider />\n    </React.Fragment>\n  );\n}\n\nfunction TaskCard({task,classes}){\n\n  let[hidden,setHidden]=useState(false)\n\n  return <Box\n  m={2}\n  key={\"box_\" + task.taskID}\n  // style={{ display: \"inline-block\" }}\n>\n  {/* style={{ 'width': 600 }}  */}\n  <Card className={classes.root} key={task.taskID}>\n    <CardContent>\n      <Typography\n        variant=\"h5\"\n        component=\"h2\"\n        onClick={()=>{setHidden(!hidden)}}\n        style={{ cursor:'pointer', display: \"inline-block\" }}>\n        {task.name}\n      </Typography>\n      {/* <Tooltip title={taskTooltip}> */}\n      <Typography\n        className={classes.pos}\n        color=\"textSecondary\"\n        style={{ display: \"inline-block\", marginLeft: \"10px\" }}>\n        {task.prompt + \"  [\" + task.answer + \"]\"}\n      </Typography>\n      <Divider />\n\n      {hidden ? <></> : Object.keys(task.conditions).map((cKey) => {\n        let condition = task.conditions[cKey];\n        return (\n          <ConditionCard\n            key = {task.taskID + cKey}\n            condition={condition}\n            conditionName={cKey}\n            taskID={task.taskID}\n            classes={classes}></ConditionCard>\n        );\n      })\n      \n      }\n    </CardContent>\n      {hidden ? <></> :\n    <CardActions>\n      <Button size=\"small\">Explore</Button>\n    </CardActions>\n      }\n  </Card>\n</Box>\n\n}\n\nexport default function TaskContainer() {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  const { data, homeTaskSort } = useContext(ProvenanceDataContext);\n\n  // console.log('homeTaskSort is ', homeTaskSort)\n \n  function getValues(task,conditionFilter,sortKey){\n    let conditions = Object.keys(task.conditions);\n    let values = []\n    conditions.map(c=>{\n      if (conditionFilter[c]){\n        let metricValues = task.conditions[c].stats.find(s=>s.metric == sortKey)\n        values.push(metricValues.ci[1]) //average for that metric\n      }\n    })\n    return values;\n\n  }\n  if (data){\n    // console.log(data.tasks)\n    \n    if (homeTaskSort){\n\n      let sortKey = homeTaskSort.metric;\n      let desc = homeTaskSort.desc\n      let conditionFilter = homeTaskSort.conditions\n\n      \n      data.tasks.sort((a,b)=>{\n        \n        let aValue, bValue; \n        if (sortKey == 'name'){\n          aValue = a[sortKey]\n          bValue = b[sortKey]\n        } else {\n          let aValues = getValues(a,conditionFilter,sortKey)\n          let bValues = getValues(b,conditionFilter,sortKey)\n          aValue = desc? Math.max(...aValues) : Math.min(...aValues)\n          bValue = desc? Math.max(...bValues) : Math.min(...bValues)\n        }\n\n        let rValue = desc ? -1 : 1\n        return aValue > bValue ? rValue : -rValue\n    })\n\n    console.log('done sorting')\n\n  }}\n\n  // })\n  let colorScale = d3\n    .scaleLinear()\n    // .domain(d3.extent(allCounts))\n    .domain([0, 800])\n    .range([0.3, 1]);\n\n  //Only render when all API calls have returned\n  let ready = data;\n  // console.log('actions', actions)\n  return ready == undefined ? (\n    <></>\n  ) : (\n    <>\n      {data.tasks.map((task) => {\n        // let taskTooltip = <Typography>{task.prompt}</Typography>;\n        return (<TaskCard key = {task.name} task={task} classes={classes}></TaskCard>);\n      })}\n    </>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat';\nimport Divider from '@material-ui/core/Divider';\n\nimport * as labella from \"labella\"\n\nimport { List } from 'react-virtualized';\n\nimport { useFetchAPIData } from \"../hooks/hooks\";\n\n// import * as PouchDB from 'pouchdb-browser';\n\n\nimport * as d3 from \"d3\";\n\nimport ProvenanceDataContext from \"../components/ProvenanceDataContext\";\nimport ProvenanceIsolatedNodes from \"../components/ProvenanceIsolatedNodes\";\n\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\nimport { pathToFileURL } from \"url\";\nimport { keys } from \"mobx\";\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        flexGrow: 1\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    }\n});\n\nvar groupBy = function (xs, key) {\n    return xs.reduce(function (rv, x) {\n        (rv[x[key]] = rv[x[key]] || []).push(x);\n        return rv;\n    }, {});\n};\n\n\nfunction scale(width, maxValue) {\n    return d3\n        .scaleLinear()\n        .range([10, width])\n        .domain([0, maxValue]);\n}\n\nlet xDomain, yDomain, categories;\n\n\nexport default function StudyCard() {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    const { data } = useContext(ProvenanceDataContext);\n\n    function eventMap(eventData, size = { width: 130, height: 30 }) {\n\n        let width = size.width;\n        let height = size.height;\n\n        let xScale = d3.scaleLinear().domain([0, xDomain[1]]).range([0, width - 40])\n        let yScale = d3.scaleLinear().domain(yDomain).range([height, 0])\n\n        //metrics to plot in each task label\n        let metrics = ['accuracy', 'difficulty', 'confidence']\n\n\n        // let barHeight = 20;\n        let barPadding = 2;\n        let metricSquare = 8;\n        let barHeight = 16\n        let labelHeight = 15\n        let textWidth = 30;\n        let labelWidth = textWidth + metrics.length * (metricSquare + barPadding) + textWidth  + barPadding\n        let axisHeight = yScale.range()[0] + barHeight + 3\n\n        //compute scale for data; \n        // let xDomain = d3.extent(data, d => d.elapsedTime);\n        // let yDomain = d3.extent(data, d => d.level);\n        // let colors = [\"rgb(96, 201, 110)\", \"rgb(0, 191, 128)\", \"rgb(0, 180, 147)\", \"rgb(0, 167, 165)\", \"rgb(0, 153, 179)\", \"rgb(0, 138, 188)\", \"rgb(0, 122, 189)\", \"rgb(0, 104, 182)\", \"rgb(42, 85, 168)\", \"rgb(77, 65, 147)\"]\n        let colors = [\"rgb(0, 153, 179)\", \"rgb(0, 138, 188)\", \"rgb(0, 122, 189)\", \"rgb(0, 104, 182)\", \"rgb(42, 85, 168)\", \"rgb(77, 65, 147)\"]\n        // let colors = [ \"#e6f598\", \"#abdda4\", \"#66c2a5\", \"#3288bd\", \"#5e4fa2\", \"#9e0142\", \"#d53e4f\", \"#f46d43\", \"#fdae61\",\"#fee08b\", \"#ffffbf\", ]\n       \n        let colorScale = d3.scaleOrdinal(colors).domain(categories);\n\n        let color = function (d) {\n            return (d.eventID == 'task' ? 'rgba(171,171,171,0.5)' : d.eventID == 'browse away' ? 'black' : colorScale(d.category))\n        }\n\n        let hoverFill = function (d) {\n            return (d.uniqueID == hoveredElement ? '#ff5800' : 'rgba(171, 171, 171, 0.5)')\n        }\n\n        let maxTime = Math.max(...eventData.map(d => d.elapsedTime + d.duration))\n        let phases = eventData.filter(d => d.level == 0)\n\n        var filteredData = eventData.filter(d => d.eventID == 'task' && d.category == 'Study' && d.taskID && d.taskID.includes('S-task')).sort((a, b) => a.elapsedTime > b.elapsedTime ? 1 : - 1);\n    \n        //compute y position for labels\n        let y = 1;\n        let labelPos = [];\n\n        let nodes = filteredData.map(d => {\n            let labelStart = xScale(d.elapsedTime)\n            let labelExtent = xScale(d.elapsedTime) + labelWidth + 8;\n            let level = labelPos.find(p => p.x < labelStart);\n            let n = {};\n            n['data'] = d;\n            if (!level) {\n                y = y + 1;\n                labelPos.push({ y, x: labelExtent, label: d.shortName })\n                n['y'] = y;\n            } else {\n                n['y'] = level.y\n                labelPos = labelPos.filter(p => p.y !== level.y);\n                labelPos.push({ y: level.y, x: labelExtent, label: d.shortName })\n                labelPos.sort((a, b) => a.y < b.y ? -1 : 1)\n            }\n            n['labelWidth'] = labelWidth\n            return n;\n        })\n\n        let metricColorScales={}; //one color scale per metric\n        let metricYScales={} // one y scale per metric\n        let taskTimeScales = {} // one time scale per task (depending on the range of completion times)\n\n        let colorRange = [\"#e6550d\", \"#3182bd\"];\n        let heightRange = [barPadding, labelHeight - barPadding]\n        let timeScaleRange = [barPadding, textWidth-2*barPadding];\n\n \n        let getStats = function(taskID,condition,metric){\n            let taskInfo = data.tasks.find(dd => dd.taskID == taskID);\n            let out = {}\n            if (taskInfo) {\n                let stats = taskInfo.conditions[condition.trim()].stats.find(t => t.metric == metric);\n                out['average'] = stats.ci[0];\n                out['lowerBound'] = stats.ci[1];\n                out['upperBound'] = stats.ci[2];\n                out['min'] =stats.min;\n                out['max'] = stats.max;\n            }\n            return out\n        }\n\n        //get stats for all metrics to be displayed in the label plus time. \n        nodes.map(n=>{\n            n.data.stats={}\n            metrics.map(metric=>{\n                n.data.stats[metric] = getStats(n.data.taskID,n.data.condition,metric)\n            })\n            n.data.stats['time'] = getStats(n.data.taskID,n.data.condition,'time')\n        })\n\n        metrics.map(metric => {\n            //create metric scales for color and height of bars\n            metricColorScales[metric] = d3.scaleLinear().range(colorRange).domain(data.metrics[metric])\n            metricYScales[metric] = d3.scaleLinear().range(heightRange).domain(data.metrics[metric])\n        })\n\n        data.taskList.map(task => {\n            data.conditions.map(condition => {\n                let stats = getStats(task, condition, 'time')\n                //WARNING, right now setting a single range for time, regardless of task/condtion since the backend returns a common scale for all metrics\n                taskTimeScales[task] = d3.scaleLinear().range(timeScaleRange).domain([stats['min'], stats['max']])\n            })\n        })\n\n        // console.log(nodes)\n        // console.log('nodePos',labelPos)\n\n\n        return (\n            <svg width={width} height={300} >\n                {/* add axis */}\n                {/* {console.log(data.map(d=>d.elapsedTime), Math.max(...data.map(d=>d.elapsedTime)))} */}\n                <g style={{ \"transform\": \"translate(0px, 200px)\" }}>\n                    {/* <line x1={0} y1={axisHeight} x2={xScale(maxTime) + 5} y2={axisHeight} style={{ \"stroke\": \"rgb(0,0,0,0.25)\", \"strokeWidth\": 1 }}></line> */}\n                    {eventData.map((d, i) => {\n                        let rectWidth = (xScale(d.duration) > 5) ? xScale(d.duration) - barPadding : xScale(d.duration)\n\n                        let barComponent = <React.Fragment key={d.participantID + '_' + Math.random()}>\n                            {/* <Tooltip title={(d.eventID == 'task' ? d.taskID : d.eventID) + \" [\" + d.duration + ' / ' + d.accuracy + \"]\"}> */}\n                            <rect className='count' key={'d_' + d.eventID + '_' + d.elapsedTime} onMouseOver={() => hovered(d)} onMouseOut={() => setHovered(undefined)} style={{ fill: color(d), opacity: (d.eventID == 'task' ? .8 : .6) }} // \"rgb(93, 131, 210)\"\n                                x={xScale(d.elapsedTime) + barPadding}\n                                y={yScale(d.level)}\n                                width={rectWidth}\n                                height={d.eventID == 'task' ? barHeight : barHeight / 2}></rect>\n\n\n                            {/* </Tooltip> */}\n\n                        </React.Fragment>\n\n                        //  console.log('taskInfo', taskInfo)\n\n                        return barComponent\n                    }\n\n                    )}\n\n                    {nodes.map(n => <line x1={xScale(n.data.elapsedTime) + barPadding} y1={yScale(n.data.level) + 15} x2={xScale(n.data.elapsedTime) + barPadding} y2={yScale(n.y)+labelHeight} style={{ stroke: 'rgb(150,150,150)', strokeWidth: '.8px'}}></line>)}\n\n                    {nodes.map(n => {\n                        let ciPlot, background;\n\n                        let timeScale = taskTimeScales[n.data.taskID];\n\n                        let label = <g style={{ \"transform\": \"translate(\" + (xScale(n.data.elapsedTime)+barPadding) + \"px, \" + (yScale(n.y)) + \"px)\" }}>\n                        <rect className='count' key={'background_' + n.data.eventID} style={{ fill: 'rgb(245,245,245)' }}\n                                x={0}\n                                y={0}\n                                width={labelWidth}\n                                height={labelHeight}></rect>\n\n                            <line x1={0} y1={labelHeight} x2={n.labelWidth} y2={labelHeight} style={{ stroke: 'rgb(150,150,150)', strokeWidth: '.8px' }}></line>\n\n                            <text\n                                style={{ fontSize: \".75em\", fontWeight:'bold', textAnchor: \"start\", fill: 'rgb(90,90,90)', alignmentBaseline: \"hanging\" }}\n                                x={barPadding*2}\n                                y={barPadding}>\n                                {\" \"}\n                                {n.data.shortName}{\" \"}\n                            </text>\n                        </g>\n\n                        if (Object.keys(n.data.stats).includes('time')) {\n                            let plotHeight  = yScale(n.y) + barHeight\n                            let maxWidth = Math.max(xScale(n.data.duration) + barPadding, xScale(n.data.upperBound));\n\n                            let avg = n.data.stats['time'].average\n                            let slower = avg < n.data.duration;\n                            let minTime = Math.min(avg,n.data.duration)\n                            let diff = Math.abs(avg - n.data.duration)\n\n                            let timePadding = 2;\n                            let glyphSize = 4;\n                            let lineHeight = 2;\n\n                            ciPlot = <g style={{ \"transform\": \"translate(\" + (xScale(n.data.elapsedTime) + (labelWidth - textWidth) + barPadding) + \"px, \" + (yScale(n.y)) + \"px)\" }}>\n\n                                <line x1={timeScale.range()[0]} y1={labelHeight/2+lineHeight/2} x2={timeScale.range()[1]} y2={labelHeight/2+lineHeight/2} style={{ stroke: 'rgb(200,200,200)', strokeWidth: '.8px' }}></line>\n\n                       \n\n     {/*\n                                <line\n                                    className=\"count\"\n                                    style={{ stroke: \"black\", strokeWidth: 3, opacity: 0.5 }}\n                                    x1={compressedTimeScale(n.data.lowerBound)}\n                                    x2={compressedTimeScale(n.data.upperBound)}\n                                    y1={0}\n                                    y2={0}></line> */}\n\n                                <rect x={timeScale(minTime)} y={timePadding} width={Math.abs(timeScale(avg) - timeScale(n.data.duration))} height={labelHeight - 2 * timePadding} style={{ fill: slower ? '#ff8d00' : 'rgb(53 130 184)', opacity: '.8' }}></rect>\n\n                                <rect x={timeScale(minTime)} y={labelHeight/2} width={timeScale(diff)} height={lineHeight} style={{ fill: slower ? '#ff8d00' : 'rgb(53 130 184)', opacity: '.8' }}></rect>\n                                {/* <rect x={timeScale(avg)} y={timePadding} width={1} height={labelHeight - 2 * timePadding} style={{ fill: 'black', opacity: '1', 'rx': 0 }}></rect> */}\n\n                                {/* <rect x={0} y={0} width ={glyphSize} height={glyphSize}  transform ={\"translate(\" + timeScale(avg) + \",\" +  (labelHeight/2) + \") rotate(45,2,2)\"} style={{ fill: 'black', opacity: '1'}}></rect> */}\n                                <rect x={0} y={0} width ={glyphSize} height={glyphSize}  style={{ fill: 'black', opacity: '1', transform: \"translate(\" + timeScale(avg) + \"px,\" +  (labelHeight/2 - glyphSize/2) + \"px) rotate(45deg)\"}}></rect>\n\n                                <rect x={0} y={0} width ={glyphSize} height={glyphSize}  style={{ fill: 'red', opacity: '1', transform: \"translate(\" + timeScale(n.data.duration) + \"px,\" +  (labelHeight/2 - glyphSize/2) + \"px) rotate(45deg)\"}}></rect>\n\n\n                                {/* <circle\n                                    className=\"count\"\n                                    style={{ stroke: \"black\", opacity: 1, strokeWidth: '1px' }}\n                                    cx={ slower ? compressedTimeScale.range()[0] : compressedTimeScale(diff)  }\n                                    cy={0}\n                                    r={1}></circle> */}\n\n                                {/* <line x1={compressedTimeScale(n.data.average)} y1={-3} x2={compressedTimeScale(n.data.average)} y2={3} style={{ stroke: 'black', strokeWidth: '1px' }}></line> */}\n\n                                {/* <line x1={compressedTimeScale(n.data.duration)} y1={-3} x2={compressedTimeScale(n.data.duration)} y2={3} style={{ stroke: '#ff5e00', strokeWidth: '1px' }}></line> */}\n\n\n                            </g>\n                        }\n                        return <>{background} {label} {ciPlot} </>\n\n\n                    })}\n\n                    {nodes.map(n => {\n\n                        let metricPlot = <>\n                            {metrics.map((m, i) => {\n\n                                let avg = n.data.stats[m].average;\n                                let value = n.data[m]\n                                let vertScale = metricYScales[m];\n                                let colorScale = metricColorScales[m];\n                                let better = value > avg;\n                                let maxValue = Math.max(avg, value)\n                                let diff = Math.abs(avg - value)\n\n\n                                return <g style={{ \"transform\": \"translate(\" + (xScale(n.data.elapsedTime) + textWidth + barPadding + i * (metricSquare + barPadding)) + \"px, \" + yScale(n.y) + \"px)\" }}>\n                                    {/* <line x1={xScale(n.data.elapsedTime) + textWidth + i * (metricSquare + barPadding)} y1={yScale(n.y)} x2={xScale(n.data.elapsedTime) + textWidth  + i * (metricSquare + barPadding)} y2={yScale(n.y) + labelHeight} style={{ \"stroke\": \"rgb(0,0,0,0.25)\", \"strokeWidth\": .8 }}></line> */}\n                                    {/* <rect className='count' key={'d_' + n.data.eventID + Math.random()} style={{ fill: colorScale(value), opacity: 1 }} // 'rx': metricSquare \n                                        x={0}\n                                        y={labelHeight - yScale(value)}\n                                        width={n.data.eventID == 'task' ? metricSquare : 0}\n                                        height={2}></rect> */}\n                                    <rect className='count' key={'d_' + n.data.eventID + Math.random()} style={{ fill: 'black', opacity: 1 }} // 'rx': metricSquare \n                                        x={0}\n                                        y={labelHeight - vertScale(avg)}\n                                        width={n.data.eventID == 'task' ? metricSquare : 0}\n                                        height={1}></rect>\n\n                                    {/* <rect className='count' key={'d_' + n.data.eventID + Math.random()} style={{ fill: 'red', opacity: 1 }} // 'rx': metricSquare \n                                        x={-5}\n                                        y={labelHeight - vertScale(value)}\n                                        width={n.data.eventID == 'task' ? metricSquare + 5 : 0}\n                                        height={.5}></rect> */}\n\n\n                                    <rect className='count' key={'d_' + n.data.eventID + Math.random()} style={{ fill: colorScale(value), opacity: .8 }} // 'rx': metricSquare \n                                        x={0}\n                                        y={labelHeight - vertScale(maxValue)}\n                                        width={n.data.eventID == 'task' ? metricSquare : 0}\n                                        height={Math.abs(vertScale(avg) - vertScale(value))}></rect>\n\n                                    {/* {i == metrics.length - 1 ? <line x1={xScale(n.data.elapsedTime) + textWidth + barPadding + (i + 1) * (metricSquare + barPadding)} y1={yScale(n.y)} x2={xScale(n.data.elapsedTime) + textWidth + barPadding + (i + 1) * (metricSquare + barPadding)} y2={yScale(n.y) + labelHeight} style={{ \"stroke\": \"rgb(0,0,0,0.25)\", \"strokeWidth\": .8}}></line> */}\n                                        {/* : ''} */}\n\n                                </g>\n                            })}\n                        </>\n\n                        return metricPlot\n                    }\n\n\n                    )}\n                    {phases.map(p =>\n                        <text\n                            style={{ fontSize: \"1em\", textAnchor: \"start\", fill: 'rgb(90,90,90)' }}\n                            x={xScale(p.elapsedTime)}\n                            y={axisHeight + 5}>\n                            {\" \"}\n                            {p.label}{\" \"}\n                        </text>\n                    )}\n                    <text\n                        style={{ fontSize: \"1em\", textAnchor: \"start\", fill: 'rgb(90,90,90)' }}\n                        x={xScale(maxTime) + 5}\n                        y={axisHeight - 7}>\n                        {\" \"}\n                        {Math.round(maxTime) + ' min'}{\" \"}\n                    </text>\n\n\n                </g>\n            </svg>)\n    }\n\n    function hovered(d) {\n        if (hoveredElement !== d.uniqueID) {\n            setHovered(d.uniqueID)\n        }\n\n    }\n\n    useEffect(() => {\n        if (data) {\n            participants = data.participants\n            participants.map(p => {\n                p.study.map(d => {\n                    d.uniqueID = d.eventID + '_' + Math.random()\n                })\n            })\n        }\n\n    }, [data])\n\n    let [hoveredElement, setHovered] = useState();\n\n    let participants, conditionGroups;\n    if (data) {\n        participants = data.participants\n        // console.log(participants)\n        participants.map(p => p.condition = p.study[0].condition)\n        let allLevels = participants.map(p => p.study.map(s => s.level)).flat();\n        // console.log(allLevels)\n        categories = [... new Set(participants.map(p => p.study.map(s => s.category)).flat())];\n        xDomain = d3.extent(participants, d => d.minutesToComplete);\n        yDomain = d3.extent(allLevels);\n        // console.log(yDomain)\n        conditionGroups = groupBy(participants, 'condition');\n    }\n\n\n    // })\n    let colorScale = d3.scaleLinear()\n        // .domain(d3.extent(allCounts))\n        .domain([0, 800])\n        .range([0.3, 1])\n\n    //Only render when all API calls have returned \n    let ready = data;\n    // if (ready) {\n    //     // console.log(data)\n    // }\n    // console.log('events', eventGroups)\n    return (ready == undefined ? <></> : <React.Fragment key={'events'}>\n        <Box m={2} style={{ display: 'inline-block' }} >\n            <Card className={classes.root} key={'participantOverview'}  >\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        Event View\n                </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\"  >\n                        Event Sequences\n                    </Typography>\n                    <Divider />\n                    <Box mt={2} >\n                        <Grid container className={classes.root} spacing={2}>\n                            {Object.keys(conditionGroups).map(cond =>\n                                <Grid item xs={12} key={cond}>\n                                    <Grid container justify=\"flex-start\" spacing={2}>\n                                        <Box display=\"flex\" justifyContent=\"center\" p={2}>\n                                            <Typography style={{ display: 'block' }} color=\"primary\" variant='overline'  >\n                                                {cond}\n                                            </Typography>\n                                        </Box>\n\n                                        <Divider />\n\n                                        {conditionGroups[cond].slice(0, 5).map(participant => {\n                                            return <>\n                                                <Grid key={participant.participantID} item>\n                                                    <Box borderBottom={1} boxShadow={0} p={1} style={{ borderColor: 'rgba(171, 171, 171, 0.5)' }}>\n                                                        {/* <Box display=\"flex\" justifyContent=\"flex-end\"> */}\n\n                                                        <Typography style={{ display: 'block' }} color=\"primary\" variant='overline'  >\n                                                            {'Avg. Accuracy: ' + (Math.round(participant.averageAccuracy * 100) / 100)}\n                                                        </Typography>\n                                                        {/* <Typography style={{ display: 'block' }} color=\"primary\" variant='overline'  >\n                                                                {'ID:' + participant.participantID.slice(0, 3) + '...' + participant.participantID.slice(-3)}\n                                                            </Typography> */}\n                                                        {/* </Box> */}\n\n                                                        {eventMap(participant.study, { width: 1600, height: 25 })}\n                                                    </Box>\n\n                                                </Grid>\n                                            </>\n                                        }\n\n                                        )}\n                                    </Grid>\n                                </Grid>)}\n\n                        </Grid>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n\n    </React.Fragment>\n\n    );\n}\n\n\n// virtualized list\n{/* <Grid container className={classes.root} spacing={2}>\n{ Object.keys(conditionGroups).map(cond=>{\n    let group = conditionGroups[cond];\n    function rowRenderer({\n        key, // Unique key within array of rows\n        index, // Index of row within collection\n        isScrolling, // The List is currently being scrolled\n        isVisible, // This row is visible within the List (eg it is not an overscanned row)\n        style, // Style object to be applied to row (to position it)\n      }) {\n          let el = group[index]\n        return (\n            <Grid key={el.participantID} item>\n            <Typography style={{ display: 'block' }} color=\"primary\" variant='subtitle1'  >\n            {'Avg. Accuracy: ' + el.averageAccuracy}\n            </Typography>\n            <Typography style={{ display: 'block' }} color=\"primary\" variant='overline'  >\n            {el.participantID.slice(0,3) + '...' +  el.participantID.slice(el.participantID.length-4,3)}\n            </Typography>\n            \n            {eventMap(el.study, { width: 800, height: 50 })}\n            </Grid>\n        );\n      }\n\n      return <>                            \n    <Grid item xs={6}>\n    <Grid container justify=\"flex-start\" spacing={2}>\n    <Typography style={{ display: 'block' }} color=\"primary\" variant='overline'  >\n     {cond}\n    </Typography>\n    <Divider />\n    <List\n            width={1000}\n            height={1000}\n            rowCount={group.length}\n            rowHeight={20}\n            rowRenderer={rowRenderer}\n            />\n              </Grid>\n    </Grid>\n        </>\n\n    }\n        // conditionGroups[cond].map(participant =>{\n         \n  )})\n\n</Grid> */}\n","import React, { useContext } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport TrendingFlatIcon from \"@material-ui/icons/TrendingFlat\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport { useFetchAPIData } from \"../hooks/hooks\";\n\n// import * as PouchDB from 'pouchdb-browser';\n\nimport * as d3 from \"d3\";\n\nimport ProvenanceDataContext from \"../components/ProvenanceDataContext\";\nimport ProvenanceIsolatedNodes from \"../components/ProvenanceIsolatedNodes\";\n\nimport Grid, { GridSpacing } from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    flexGrow: 1,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\n\nfunction scale(width, maxValue) {\n  return d3.scaleLinear().range([10, width]).domain([0, maxValue]);\n}\n\n\n\nexport default function Upload() {\n\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  const { data } = useContext(\n    ProvenanceDataContext\n  );\n\n  // })\n  let colorScale = d3\n    .scaleLinear()\n    // .domain(d3.extent(allCounts))\n    .domain([0, 800])\n    .range([0.3, 1]);\n\n  //Only render when all API calls have returned\n  let ready = data\n  // console.log('actions', actions)\n  return ready == undefined ? (\n    <></>\n  ) : (\n      <>\n\n        {data.tasks.map(task => {\n          let taskTooltip = <Typography>{task.prompt}</Typography>;\n          return (\n            <Box\n              m={2}\n              key={\"box_\" + task.taskID}\n              style={{ display: \"inline-block\" }}>\n              {/* style={{ 'width': 600 }}  */}\n              <Card className={classes.root} key={task.taskID}>\n                <CardContent>\n                  <Typography variant=\"h5\" component=\"h2\">\n                    {task.name}\n                  </Typography>\n                  <Tooltip title={taskTooltip}>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                      {task.prompt.slice(0, 60)}\n                    </Typography>\n                  </Tooltip>\n                  <Divider />\n\n                  {Object.keys(task.conditions).map(key => {\n                    let condition = task.conditions[key];\n                    let freqPattern = condition.patterns[0].topK;\n\n                    // let frequentActions = condition.actions.map(a => ({ event: a.label, id: a.actionID, count: a.count, scale: colorScale(a.count) })) //actions.filter(a => a.taskID == task.taskID && a.condition == condition).splice(0, 5).map(a => ({ event: a.label, id: a.actionID, count: a.count, scale: colorScale(a.count) }))\n                    let filteredMetrics = condition.stats //metrics.filter(m => m.group.taskID == task.taskID && m.group.condition == condition);\n\n                    let metricValues = [\n                      ...new Set(filteredMetrics.map((m) => m.metric)),\n                    ]; // console.log(frequentActions)\n\n                    let nodeWidth = 25;\n                    let characterWidth = 5;\n                    let textHeight = 8\n                    let xScale = d3.scaleLinear().domain([0, 1]).range([0, nodeWidth + 10])\n                    let yScale = d3.scaleLinear().domain([0, 1]).range([0, 15])\n                    let colorScale = d3.scaleOrdinal(d3.schemeTableau10).domain(data.actions);\n\n                    let renderPattern = function (nodes) {\n                      let background = nodes.map((n) => {\n                        return <>\n\n                          <line x1={n.x + nodeWidth / 2} y1={yScale(n.y)} x2={n.x + nodeWidth / 2} y2={yScale(0) + nodeWidth} style={{ stroke: 'rgb(150,150,150)', strokeWidth: '1.2px', 'strokeLinecap':'round' }}></line>\n                          <line x1={n.x + nodeWidth / 2} y1={yScale(n.y)} x2={n.x + nodeWidth / 2 + 3} y2={yScale(n.y)} style={{ stroke: 'rgb(150,150,150)', strokeWidth: '1.2px' }}></line>\n                          <rect className='count' key={'background_' + n.event} style={{ fill: colorScale(n.data.event), stroke: 'white', strokeWidth: '1px', 'rx': 2 }}\n                            x={n.x}\n                            y={yScale(0)}\n                            width={nodeWidth}\n                            height={nodeWidth}></rect>\n                        </>\n\n                      })\n\n                      let labels = nodes.map((n) => {\n                        return <>\n                          <rect className='count' key={'background_' + n.event} style={{ fill: 'white', stroke: 'white', strokeWidth: '1px' }}\n                            x={n.x + nodeWidth / 2+3}\n                            y={yScale(n.y)-2}\n                            width={n.labelExtent}\n                            height={textHeight}></rect>\n\n                          <text\n                            style={{ fontSize: \".75em\", textAnchor: \"start\", fill: 'rgb(90,90,90)' }}\n                            x={n.x + nodeWidth / 2 + 5 }\n                            y={yScale(n.y) + textHeight/2}>\n                            {\" \"}\n                            {n.data.event}{\" \"}\n                          </text>\n                        </>\n\n                      })\n\n                      return <svg width={300} height={yScale(Math.max(...nodes.map(n => n.y))) + 50} >\n                        <g style={{ \"transform\": \"translate(50px, 30px)\" }}>\n\n                          {background} {labels}\n                        </g>\n\n\n                      </svg>\n                    }\n\n                    return (\n                      <React.Fragment key={'taskcard_' + key}>\n                        <Typography variant=\"overline\">{key}</Typography>\n\n                        <Grid container className={classes.root} spacing={2}>\n                          <Grid item xs={12}>\n                            <Grid container justify=\"flex-start\" spacing={2}>\n                              <Grid key={\"prov\"} item>\n                                <>{[0, 1, 2].map(i => {\n                                  let frequentActions = freqPattern[i].seq.map(a => ({ event: a, id: a, count: freqPattern[i].count, scale: colorScale(freqPattern[i].count) })) //actions.filter(a => a.taskID == task.taskID && a.condition == condition).splice(0, 5).map(a => ({ event: a.label, id: a.actionID, count: a.count, scale: colorScale(a.count) }))\n\n                                  let evenlabelPos = []\n                                  let eveny = 1;\n                                  let labelPos = []\n                                  let y = 0.5;\n                                  let nodes = frequentActions.map((d, i) => {\n                                    // console.log(d.shortName)\n                                    let labelStart = xScale(i)\n                                    let labelExtent = d.event.length * characterWidth + 30;\n                                    let n = {};\n                                    n['data'] = d;\n                                    let level\n                                    if (i%2 == 0) {\n                                       level = evenlabelPos.find(p => p.x < labelStart);\n                                    }else{\n                                      level = labelPos.find(p => p.x < labelStart);\n                                   }\n                                    // console.log(level)\n                                    if (!level) {\n                                      if (i%2 == 0){\n                                        eveny = eveny + 1;\n                                        evenlabelPos.push({ y:eveny, x: labelExtent, label: d.shortName })\n                                        n['y'] = eveny;\n                                      } else {\n                                        y = y - 1;\n                                        labelPos.push({ y, x: labelExtent, label: d.shortName })\n                                        n['y'] = y;\n                                      }\n                                  \n                                    } else {\n\n                                      if (i % 2 == 0) {\n                                        n['y'] = level.y\n                                        labelPos = labelPos.filter(p => p.y !== level.y);\n                                        labelPos.push({ y: level.y, x: labelExtent, label: d.shortName })\n                                        labelPos.sort((a, b) => a.y < b.y ? -1 : 1)\n                                      } else {\n                                        n['y'] = level.y\n                                        labelPos = labelPos.filter(p => p.y !== level.y);\n                                        labelPos.push({ y: level.y, x: labelExtent, label: d.shortName })\n                                        labelPos.sort((a, b) => a.y < b.y ? -1 : 1)\n                                      }\n\n                                      \n                                    }\n                                    n['x'] = labelStart;\n                                    n['labelExtent'] = labelExtent\n                                    return n;\n                                  })\n\n                                  return <Box mt={\"5px\"} mb={\"6px\"}>\n                                    {renderPattern(nodes)}\n                                  </Box>\n                                }\n                                )}\n                                </>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <Divider />\n                      </React.Fragment>\n                    );\n                  })}\n                  <div></div>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\">Explore</Button>\n                </CardActions>\n              </Card>\n            </Box>\n          );\n        })}\n      </>\n    );\n}\n","import React, { useContext } from \"react\";\nimport { Input } from \"antd\";\nimport { relativeProvenanceData } from \"../common/data/provenanceMocks.js\";\nimport EventAccordion from \"../components/EventAccordion\";\nimport Event_Layers from \"../components/Event_Layers\";\n\nimport EcoIcon from \"@material-ui/icons/Eco\";\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\n\nimport CollapsibleTable from '../components/EventTable'\nimport * as d3 from \"d3\";\nimport ProvenanceDataContext from \"../components/ProvenanceDataContext\";\n\nconst { Search } = Input;\n\nconst Overview = ({ location }) => {\n\n  const { data } = useContext(ProvenanceDataContext);\n\n  const [search, setSearch] = React.useState(\"\");\n\n  function createEvent(value) {\n    {\n      setSearch(\"\");\n      console.log(\"new Event is\", value);\n      newEvent(value);\n    }\n  }\n\n  return (<div style={{ padding: \"15px\" }}>\n    <Search\n      placeholder=\"Create Event Type\"\n      enterButton={<PlusSquareOutlined />}\n      size=\"large\"\n      // onSearch={newEvent}\n      // onChange={event => setSearch(event.target.value)}\n      style={{ width: 672 }}\n    // value={search}\n    />\n    <div style={{ 'paddingTop': \"15px\" }}>\n      {/* {patternComponent} */}\n      {/* <EventAccordion /> */}\n      {/* <CollapsibleTable data={data} onChange={setData} /> */}\n      {/* <EventAccordion data={data} onChange={setData} /> */}\n    </div>\n  </div>)\n};\n\nexport default Overview;\n","import React from \"react\";\nimport TableDataLoader from \"../components/TableDataLoader\";\n\nconst Export = () => {\n  return <div>This is export </div>;\n};\n\nexport default Export;\n","//@ts-nocheck\nimport React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport * as d3 from \"d3\";\nimport { select, event } from \"d3-selection\";\nimport { scaleLinear } from \"d3-scale\";\nimport { brushX } from \"d3-brush\";\nimport { axisBottom } from \"d3-axis\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fade from \"@material-ui/core/Fade\";\n\nfunction obtainItemCounts(arr) {\n  let occurrences = {};\n  for (let i = 0, j = arr.length; i < j; i++) {\n    occurrences[arr[i]] = (occurrences[arr[i]] || 0) + 1;\n  }\n  return occurrences;\n}\nexport const CategoricalFilter = (props) => {\n  const { data, width, scale, labels, onFilter = () => {} } = props;\n  const occurrences = useMemo(() => obtainItemCounts(data), [data]);\n  // search through data for all states\n  const [currentFilter, setCurrentFilterInternal] = useState(\n    Object.keys(occurrences)\n  );\n  const height = 20;\n  const fullHeight = 20 + 15;\n  const maxOccurance = Object.values(occurrences).reduce((a, b) =>\n    a > b ? a : b\n  );\n  const yScale = d3.scaleLinear().domain([0, maxOccurance]).range([0, height]);\n  function setCurrentFilter(currentValues) {\n    console.log(currentValues);\n    onFilter(currentValues);\n    setCurrentFilterInternal(currentValues);\n  }\n  return (\n    <svg width={width} height={fullHeight}>\n      {Object.entries(occurrences).map(([key, value], index) => {\n        const color = currentFilter.includes(key) ? \"black\" : \"#cfcfcf\";\n        return (\n          <Tooltip\n            TransitionComponent={Fade}\n            TransitionProps={{ timeout: 600 }}\n            title={key}\n            key={key}\n            PopperProps={{\n              popperOptions: {\n                modifiers: {\n                  offset: {\n                    enabled: true,\n                    offset: \"0px, -6px\",\n                  },\n                },\n              },\n            }}>\n            <g\n              pointerEvents={\"bounding-box\"}\n              key={key}\n              onClick={() => {\n                const indexOfValue = currentFilter.indexOf(key);\n                let temp = Object.assign([], currentFilter);\n\n                if (indexOfValue > -1) {\n                  temp.splice(indexOfValue, 1);\n                } else {\n                  temp.push(key);\n                }\n                setCurrentFilter(temp);\n              }}\n              cursor={\"pointer\"}\n              fill={\"none\"}>\n              <rect\n                x={scale(key)}\n                width={20}\n                height={yScale(value)}\n                y={height - yScale(value)}\n                fill={color}></rect>\n\n              <g transform={`translate(${scale(key)},${height})`} fill={color}>\n                {labels[key]}\n              </g>\n            </g>\n          </Tooltip>\n        );\n      })}\n    </svg>\n  );\n};\n\nexport const Histogram = ({\n  hovered,\n  data,\n  xScale,\n  buckets,\n  yScale,\n  height,\n}) => {\n  console.log(\"hist props\", data, xScale, buckets, yScale, height);\n  console.log(\"HOVERED\", hovered);\n  const binWidth = 10;\n  const [min, max] = xScale.domain();\n  const currentBinCounter = d3\n    .histogram()\n    .domain([min - 0.001, max + 0.001]) // to make inclusive of threshold\n    .thresholds(buckets.map((bucket) => bucket.x1));\n\n  const currentBins = currentBinCounter(data);\n\n  const bars = (\n    <g transform={`translate(${(1 / 3) * binWidth},0)`}>\n      {buckets.map((bucket, index) => {\n        console.log(\n          index,\n          currentBins,\n          currentBins[index],\n          yScale(currentBins[index].length),\n          yScale(0),\n          yScale(250)\n        );\n        return (\n          <g>\n            <rect\n              key={index}\n              x={xScale(bucket.x0) - 0.5 * binWidth} // 1/2 xBandwidth to move to middle 1/2 another because of -1 index on xBand domain\n              y={yScale(bucket.length)}\n              width={binWidth}\n              fill={\"gray\"}\n              opacity={0.3}\n              height={height - yScale(bucket.length)}></rect>\n            <rect\n              key={index}\n              x={xScale(bucket.x0) - 0.5 * binWidth} // 1/2 xBandwidth to move to middle 1/2 another because of -1 index on xBand domain\n              y={yScale(currentBins[index].length)}\n              width={binWidth}\n              fill={\"black\"}\n              height={height - yScale(currentBins[index].length)}></rect>\n          </g>\n        );\n      })}\n    </g>\n  );\n\n  return (\n    <g>\n      {bars}\n      <g className={\"sample group dywootto\"}></g>\n      {hovered && (\n        <>\n          <text\n            style={{\n              fill: \"rgb(0,0,0,0.25)\",\n              fontSize: \"1em\",\n              textAnchor: \"end\",\n              stroke: \"#fff\",\n              \"paint-order\": \"stroke\",\n\n              \"stroke-width\": \"1px\",\n            }}\n            x={10}\n            y={23}>\n            {\" \"}\n            {Math.round(xScale.domain()[0])}{\" \"}\n          </text>\n          <text\n            style={{\n              fill: \"rgb(0,0,0,0.25)\",\n              fontSize: \"1em\",\n              textAnchor: \"start\",\n              stroke: \"#fff\",\n              \"paint-order\": \"stroke\",\n\n              \"stroke-width\": \"1px\",\n            }}\n            x={xScale.range()[1] - 10}\n            y={23}>\n            {\" \"}\n            {Math.round(xScale.domain()[1])}{\" \"}\n          </text>\n        </>\n      )}\n    </g>\n  );\n};\n\nconst Brush = (props) => {\n  const { width, height, onChange } = props;\n  const brushRef = useRef(null);\n\n  useEffect(() => {\n    const node = brushRef.current;\n\n    const dayBrush = brushX()\n      .extent([\n        [0, 0],\n        [width, height],\n      ])\n      //.on(\"brush\", brushed)\n      .on(\"end\", brushed);\n\n    select(node)\n      .selectAll(\"g.brush\")\n      .data([0])\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"brush\");\n\n    select(node).select(\"g.brush\").call(dayBrush);\n\n    /*\n    Code for updating brush if we want it to dynamically update while brushing\n    function brushed() {\n      console.warn(event);\n      onBrushFunction(event.selection);\n    }*/\n    function brushed() {\n      // if filter cleared, set to all\n      if (!event.selection) {\n        event.selection = [0, width];\n      }\n      console.warn(\"clear\", event);\n      onChange(event.selection);\n    }\n  });\n  return (\n    <svg ref={brushRef} height={height} width={width}>\n      {props.children}\n    </svg>\n  );\n};\n\nconst BrushableHistogram = ({\n  data,\n  xScale,\n  buckets,\n  yScale,\n  height,\n  setMinimum,\n  setMaximum,\n}) => {\n  const width = xScale.range()[1];\n  const [hovered, setHovered] = React.useState(false);\n\n  function setFilterBounds(inputs) {\n    if (inputs?.length !== 2) {\n      inputs = xScale.domain();\n    }\n    // scale inversion\n    setMinimum(xScale.invert(inputs[0]));\n    // set bounds\n    setMaximum(xScale.invert(inputs[1]));\n  }\n\n  return (\n    <div\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}>\n      <Brush width={width} height={height} onChange={setFilterBounds}>\n        <Histogram\n          hovered={hovered}\n          data={data}\n          width={width}\n          height={height}\n          yScale={yScale}\n          xScale={xScale}\n          buckets={buckets}></Histogram>\n      </Brush>\n    </div>\n  );\n};\n\nexport const QuantitativeFilter = ({\n  data,\n  xScale,\n  buckets,\n  height,\n  yScale,\n  onFilter = (val) => {},\n}) => {\n  console.log(\"new Time Filter\");\n  const [minimum, setMinimum] = useState(d3.min(data));\n  const [maximum, setMaximum] = useState(d3.max(data));\n  const debouncedMin = useDebounce(minimum, 100);\n  const debouncedMax = useDebounce(maximum, 100);\n  useEffect(() => {\n    onFilter({ filterMin: debouncedMin, filterMax: debouncedMax });\n  }, [debouncedMin, debouncedMax]);\n  return (\n    <BrushableHistogram\n      yScale={yScale}\n      xScale={xScale}\n      buckets={buckets}\n      height={height}\n      data={data}\n      setMinimum={setMinimum}\n      setMaximum={setMaximum}></BrushableHistogram>\n  );\n};\nfunction useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n","import React from \"react\";\nimport ReactTags from \"react-tag-autocomplete\";\nimport \"./reacttags.css\";\n\nconst TagWrapper = ({ tags, onTagChange, isMaster, id }) => {\n  function handleAddTag(tag) {\n    onTagChange(\"Add\", tag);\n  }\n\n  function handleDeleteTag(i) {\n    const allTags = tags.slice(0);\n    const tag = allTags.splice(i, 1);\n    onTagChange(\"Delete\", tag);\n  }\n  console.log(\"dywootto\", id);\n  return (\n    <div id={id}>\n      <ReactTags\n        autofocus={false}\n        tags={tags}\n        allowNew={true}\n        handleDelete={handleDeleteTag}\n        handleAddition={handleAddTag}\n      />\n    </div>\n  );\n};\nexport default TagWrapper;\n","import React, { useEffect } from \"react\";\nimport styles from \"./EventSearch.module.css\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Divider } from \"antd\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Button from \"@material-ui/core/Button\";\nimport Category from \"@material-ui/icons/Category\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Delete from \"@material-ui/icons/Delete\";\n\nimport { IsolatedNode } from \"./ProvenanceIsolatedNodes\";\nfunction uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nconst actions = [\n  \"Finished Task\",\n  \"Select Node\",\n  \"Searched for Node\",\n  \"Dragged Node\",\n  \"Unselect Node\",\n  \"search\",\n  \"colLabel\",\n  \"sort\",\n  \"attrRow\",\n  \"answerBox\",\n  \"cell\",\n  \"rowLabel\",\n  \"cleared all selected nodes\",\n  \"clear\",\n  \"Hard Unselected a Node\",\n  \"Hard Selected a Node\",\n];\nconst COLLECTION = actions.map((actionName) => {\n  console.log(actionName);\n  return { id: uuidv4(), label: actionName };\n});\n\n// This method is needed for rendering clones of draggables\nconst getRenderItem = (items, className) => (provided, snapshot, rubric) => {\n  const item = items[rubric.source.index];\n  return (\n    <React.Fragment>\n      <div\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        ref={provided.innerRef}\n        style={provided.draggableProps.style}\n        className={snapshot.isDragging ? \"dragging\" : \"\"}>\n        <IsolatedNode node={{ name: item.label }} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nfunction ActionList(props) {\n  return (\n    <div\n      style={{ width: \"100%\", height: \"100%\", backgroundColor: \"whitesmoke\" }}>\n      <Droppable\n        renderClone={getRenderItem(props.items, props.className)}\n        droppableId={props.droppableId}\n        isDropDisabled={true}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef} className={props.className}>\n            {props.items.map((item, index) => {\n              const shouldRenderClone =\n                item.id === snapshot.draggingFromThisWith;\n              return (\n                <React.Fragment key={item.id}>\n                  {shouldRenderClone ? (\n                    <div className=\"react-beatiful-dnd-copy\">\n                      {\" \"}\n                      <IsolatedNode node={{ name: item.label }} />\n                    </div>\n                  ) : (\n                    <Draggable draggableId={item.id} index={index}>\n                      {(provided, snapshot) => {\n                        return (\n                          <React.Fragment>\n                            <div\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              className={snapshot.isDragging ? \"dragging\" : \"\"}>\n                              <IsolatedNode\n                                key={`node-${item.id}`}\n                                node={{ name: item.label }}\n                              />\n                            </div>\n                          </React.Fragment>\n                        );\n                      }}\n                    </Draggable>\n                  )}\n                </React.Fragment>\n              );\n            })}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  );\n}\n\nfunction Shop(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <React.Fragment>\n      <IconButton aria-label=\"Open Event List\" onClick={handleClick}>\n        <Category />\n      </IconButton>\n\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}>\n        <div style={{ overflow: \"auto\", width: \"300px\", height: \"100px\" }}>\n          <ActionList\n            droppableId=\"SHOP\"\n            className={styles.searchOptions}\n            items={props.items}\n          />\n        </div>\n      </Popover>\n    </React.Fragment>\n  );\n}\n\nfunction ShoppingBag(props) {\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <Droppable droppableId=\"BAG\" direction={\"horizontal\"}>\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef} className={styles.searchBar}>\n            {props.items.map((item, index) => (\n              <Draggable key={item.id} draggableId={item.id} index={index}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={provided.draggableProps.style}>\n                    <IsolatedNode node={{ name: item.label }} />\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  );\n}\n\nconst reorder = (list, startIndex, endIndex) => {\n  const [removed] = list.splice(startIndex, 1);\n  list.splice(endIndex, 0, removed);\n\n  return [...list];\n};\n\nconst copy = (source, destination, droppableSource, droppableDestination) => {\n  const item = source[droppableSource.index];\n  destination.splice(droppableDestination.index, 0, {\n    ...item,\n    id: `copy${uuidv4()}`,\n  });\n  return [...destination];\n};\n\nconst EventSearch = ({\n  onFilter = (val) => {\n    console.log(val);\n  },\n}) => {\n  const [shoppingBagItems, setShoppingBagItems] = React.useState([]);\n  useEffect(() => {\n    if (onFilter) {\n      onFilter(shoppingBagItems.length > 0 ? shoppingBagItems : null);\n    }\n  }, [shoppingBagItems]);\n  console.log(shoppingBagItems);\n  const onDragEnd = React.useCallback(\n    (result) => {\n      const { source, destination } = result;\n\n      // if dragged out of any box, delete it\n      if (!destination) {\n        console.log(\"in delete node\", source.index);\n        setShoppingBagItems((state) => {\n          const copy = [...state];\n          console.log(\"copy\", copy);\n          copy.splice(source.index, 1);\n          console.log(\"copy\", copy);\n\n          return copy;\n        });\n        return;\n      }\n\n      switch (source.droppableId) {\n        case destination.droppableId:\n          setShoppingBagItems((state) =>\n            reorder(state, source.index, destination.index)\n          );\n          break;\n        case \"SHOP\":\n          setShoppingBagItems((state) =>\n            copy(COLLECTION, state, source, destination)\n          );\n          break;\n        default:\n          break;\n      }\n    },\n    [shoppingBagItems]\n  );\n\n  return (\n    <div className={styles.searchContainer}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className={styles.outerSearchBar}>\n          <ShoppingBag items={shoppingBagItems} />\n        </div>\n        <div className={styles.outerSearchOptions}>\n          <Shop items={COLLECTION} />\n        </div>\n        <div className={styles.outerSearchDiscard}>\n          <Discard />\n        </div>\n      </DragDropContext>\n    </div>\n  );\n};\nconst Discard = (props) => {\n  return (\n    <Droppable droppableId={\"DISCARD\"} isDropDisabled={true}>\n      {(provided, snapshot) => (\n        <div ref={provided.innerRef} className={props.className}>\n          <IconButton>\n            {\" \"}\n            <Delete></Delete>\n          </IconButton>\n        </div>\n      )}\n    </Droppable>\n  );\n};\nexport default EventSearch;\n/*const ActionNode = ({ actionName }) => {\n  return <div>{actionName[0]}</div>;\n};\nconst SearchOptions = () => {\n  /*return (\n    <div className={styles.searchOptions}>\n      {\" \"}\n      {actions.map((action) => (\n        <ActionNode actionName={action} />\n      ))}{\" \"}\n    </div>\n  );\n  return <Droppable\n      renderClone={getRenderItem(props.items, props.className)}\n      droppableId={props.droppableId}\n      isDropDisabled={true}\n    >\n      {(provided, snapshot) => (\n        <ul ref={provided.innerRef} className={props.className}>\n          {props.items.map((item, index) => {\n            const shouldRenderClone = item.id === snapshot.draggingFromThisWith;\n            return (\n              <React.Fragment key={item.id}>\n                {shouldRenderClone ? (\n                  <li className=\"react-beatiful-dnd-copy\">{item.label}</li>\n                ) : (\n                  <Draggable draggableId={item.id} index={index}>\n                    {(provided, snapshot) => (\n                      <React.Fragment>\n                        <li\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          className={snapshot.isDragging ? \"dragging\" : \"\"}\n                        >\n                          {item.label}\n                        </li>\n                      </React.Fragment>\n                    )}\n                  </Draggable>\n                )}\n              </React.Fragment>\n            );\n          })}\n          {provided.placeholder}\n        </ul>\n      )}\n    </Droppable>\n};\nconst SearchList = () => {\n  return <div></div>;\n};\nconst SearchBar = () => {\n  const [sequence, setSequenceInternal] = React.useState([\"a\", \"b\", \"c\"]);\n  console.log(sequence);\n  return (\n    <div className={styles.searchBar}>\n      <Droppable droppableId={\"searchBar\"}>\n        {(provided) => {\n          console.log(sequence, provided);\n\n          return (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {sequence.map((item, index) => {\n                return <SearchIcon item={item} index={index}></SearchIcon>;\n              })}\n              {provided.placeholder}\n            </div>\n          );\n        }}\n      </Droppable>\n    </div>\n  );\n};\nconst SearchIcon = ({ item, index }) => {\n  console.log(item, index);\n  return (\n    <Draggable draggableId={`item${index}`} index={index}>\n      {(provided) => {\n        console.log(\"innerest\", `item${index}`);\n        return (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}>{`item${index}`}</div>\n        );\n      }}\n    </Draggable>\n  );\n};\n\nexport default () => {\n  console.log(\"search\", styles, styles.searchContainer);\n  function handleSequenceChange(input) {\n    console.log(input);\n  }\n  return (\n    <div className={styles.searchContainer}>\n      <DragDropContext onDragEnd={handleSequenceChange}>\n        <SearchBar></SearchBar>\n        <SearchOptions></SearchOptions>;\n      </DragDropContext>\n    </div>\n  );\n};\n*/\n","import React, { useState, useEffect } from \"react\";\nimport { QuantitativeFilter, CategoricalFilter } from \"./TableFilters\";\nimport * as d3 from \"d3\";\nimport eventMapping from \"./eventMapping\";\nimport TagWrapper from \"./reactTagWrapper\";\nimport ProvenanceIsolatedNodes from \"./ProvenanceIsolatedNodes\";\nimport EventSearch from \"./EventSearch\";\nimport Tagger from \"./Tagger\";\n\nconst columnOverrides = {};\nconst filterQuantitativeValues = (filter, value) =>\n  value >= filter.filterMin && value <= filter.filterMax;\n\nconst QuantitativeCell = ({ rowData, name, commonScale }) => {\n  let additionalComponents;\n  const cellHeight = 20;\n  if (name === \"time\" && rowData?.sequence) {\n    // map through requences\n    additionalComponents = rowData.sequence.map((node) => {\n      return (\n        <rect\n          width={3}\n          x={commonScale(node.time)}\n          height={cellHeight}\n          opacity={0.25}></rect>\n      );\n    });\n  }\n  return (\n    <svg width={commonScale.range()?.[1]} height={cellHeight}>\n      <rect\n        fill={\"gray\"}\n        width={commonScale(rowData[name])}\n        height={cellHeight}></rect>\n      {additionalComponents}\n    </svg>\n  );\n};\nexport class NotesColumn {\n  constructor(metaData) {\n    this.width = metaData.width;\n    this.handleTagCreation = metaData.handleTagCreation;\n    this.selectionIndicies = [];\n  }\n  generateColumnObject() {\n    return {\n      title: \"Notes\",\n      name: \"None\",\n      cellStyle: {\n        padding: \"4px 16px\",\n      },\n      width: this.width,\n      customSort: (a, b) => b.tags.length - a.tags.length,\n      filterComponent: () => <div></div>,\n      render: (rowData) => {\n        if (!Array.isArray(rowData.tags)) {\n          rowData.tags = [];\n        }\n        console.log(\"generatedRow\", rowData, generateRowId(rowData));\n        return (\n          <TagWrapper\n            id={generateRowId(rowData)}\n            tags={rowData.tags}\n            onTagChange={(action, tag) => {\n              if (action === \"Add\") {\n                rowData.tags.push(tag);\n              } else {\n                const index = rowData.tags.findIndex((iterTag) => {\n                  return iterTag.name === tag[0]?.name;\n                });\n                if (index > -1) {\n                  rowData.tags.splice(index, 1);\n                }\n              }\n\n              this.handleTagCreation(\n                rowData.participantID,\n                rowData.taskID,\n                tag,\n                action\n              );\n            }}></TagWrapper>\n        );\n      },\n    };\n  }\n}\nfunction generateRowId(rowData) {\n  return `row${rowData[\"id\"]}`;\n}\nexport class LongTextColumn {\n  constructor(data, name, metaData) {\n    this.name = name;\n    this.data = data;\n    this.width = metaData.width ? metaData.width : 300;\n    this.order = metaData.order;\n    this.hideByDefault = metaData.hideByDefault;\n  }\n\n  generateColumnObject() {\n    return {\n      title: this.name,\n      name: this.name,\n      render: (rowData) => {\n        return (\n          <div style={{ \"white-space\": \"normal\" }}>\n            <Tagger\n              text={rowData[this.name]}\n              tagDivId={`${generateRowId(rowData)}`}\n              rowData={rowData}></Tagger>\n          </div>\n        );\n      },\n      width: this.width,\n      hideByDefault: this.hideByDefault,\n      order: this.order,\n    };\n  }\n}\nexport class CategoricalColumn {\n  constructor(data, name, metaData) {\n    this.name = name;\n    this.data = data;\n    this.width = metaData.width ? metaData.width : 100;\n    this.order = metaData.order;\n    this.hideByDefault = metaData.hideByDefault;\n  }\n\n  generateColumnObject() {\n    return {\n      title: this.name,\n      name: this.name,\n      render: (rowData) => {\n        return (\n          <span>{rowData[this.name] ? rowData[this.name] : this.name}</span>\n        );\n      },\n      width: this.width,\n      hideByDefault: this.hideByDefault,\n      order: this.order,\n    };\n  }\n}\nexport class QuantitativeColumn {\n  constructor(data, name, metaData, handleFilterChange) {\n    this.name = name;\n    this.data = data;\n    this.type = \"quantitative\";\n    this.height = 30;\n    this.width = metaData.width ? metaData.width : 100;\n    this.order = metaData.order;\n    this.hideByDefault = metaData.hideByDefault;\n    this.customSort = (a, b) => a[this.name] - b[this.name];\n    this.handleFilterChange = handleFilterChange;\n    this.customFilterAndSearch = (filter, value) => {\n      console.log(\n        \"in quant filter\",\n        filter.value,\n        value,\n        filterQuantitativeValues(filter.value, value)\n      );\n      return filterQuantitativeValues(filter.value, value);\n    };\n    this.cellComponent = (rowData) => {\n      return (\n        <QuantitativeCell\n          rowData={rowData}\n          name={this.name}\n          commonScale={this.xScale}></QuantitativeCell>\n      );\n    };\n    let [min, max] = d3.extent(this.data, (datum) => datum[this.name]);\n    if (min > 0) {\n      min = 0;\n    }\n\n    this.xScale = d3\n      .scaleLinear()\n      .domain([min - 0.001, max + 0.001])\n      .range([10, this.width - 20]); // offset from sides\n    this.yScale = d3.scaleLinear().range([this.height, 0]);\n    // the scale\n    let niceX = this.xScale.nice();\n    const binner = d3.histogram().domain(niceX.domain());\n    const buckets = binner(data.map((datum) => datum[this.name]));\n    this.yScale = this.yScale.domain([\n      0,\n      d3.max(buckets, (bucket) => bucket.length),\n    ]);\n    this.buckets = buckets;\n  }\n\n  set setWidth(newWidth) {\n    this.width = newWidth;\n    this.scale.range([0, this.width]);\n  }\n\n  set setRender(Component) {\n    this.cellComponent = Component;\n  }\n\n  generateColumnObject() {\n    return {\n      title: this.name,\n      name: this.name,\n      width: this.width,\n      type: this.type,\n      customSort: this.customSort,\n      render: this.cellComponent,\n      order: this.order,\n      hideByDefault: this.hideByDefault,\n      customFilterAndSearch: this.customFilterAndSearch,\n      groupedSummaryComponent: ({ incomingData }) => {\n        return (\n          <div style={{ pointerEvents: \"all\", opacity: 0.7 }}>\n            <GroupDataResolver incomingData={incomingData}>\n              {({ partitionedData }) => {\n                if (partitionedData.length === 0) {\n                  return <div></div>;\n                }\n                return (\n                  <QuantitativeFilter\n                    xScale={this.xScale}\n                    yScale={this.yScale}\n                    buckets={this.buckets}\n                    height={this.height}\n                    data={partitionedData.map(\n                      (datum) => datum[this.name]\n                    )}></QuantitativeFilter>\n                );\n              }}\n            </GroupDataResolver>\n          </div>\n        );\n      },\n      filterComponent: (props) => {\n        return (\n          <QuantitativeFilter\n            {...props}\n            xScale={this.xScale}\n            yScale={this.yScale}\n            buckets={this.buckets}\n            height={this.height}\n            onFilter={(filter, value, row) => {\n              return this.handleFilterChange(this.name, filter);\n            }}\n            data={this.data.map(\n              (datum) => datum[this.name]\n            )}></QuantitativeFilter>\n        );\n      },\n    };\n  }\n}\n\nfunction hasSubArrayStrict(master, sub) {\n  return master.join(\",\").indexOf(sub.join(\",\")) > -1;\n}\n\nfunction hasSubArrayNonStrict(master, sub) {\n  return sub.every(((i) => (v) => (i = master.indexOf(v, i) + 1))(0));\n}\n\nconst EventsSummary = (props) => {\n  console.log(\"dywootto\", props);\n  let { incomingData } = props;\n  incomingData = incomingData?.incomingData;\n  if (!incomingData || !incomingData[0]) {\n    return <div></div>;\n  }\n  console.log(\"events summary\", incomingData);\n\n  return <EventSearch onFilter={props.onFilter}></EventSearch>;\n};\n/*<ProvenanceIsolatedNodes\n      nodes={incomingData[0].sequence}\n      handleProvenanceNodeClick={console.log}></ProvenanceIsolatedNodes> */\nfunction filterEvents(filterValue, rowValue) {\n  console.log(\"in filter events\", filterValue, rowValue);\n\n  if (!filterValue || !rowValue) {\n    return true;\n  }\n  return hasSubArrayStrict(\n    rowValue.map((val) => val.name),\n    filterValue.map((val) => val.label)\n  ); //rowValue.length >= 5;\n}\nconst GroupedContainer = (props) => {\n  if (\n    typeof props.children === \"undefined\" ||\n    typeof props.children !== \"function\"\n  ) {\n    return <div></div>;\n  }\n  return (\n    <div style={{ pointerEvents: \"none\", opacity: 0.7 }}>\n      {props.children()}\n    </div>\n  );\n};\nexport class ProvenanceColumn {\n  constructor(data, name, metaData, handleFilterChange) {\n    this.name = name;\n    this.width = 300;\n    this.data = data;\n    this.handleProvenanceNodeClick = metaData.handleProvenanceNodeClick;\n    this.handleFilterChange = handleFilterChange;\n    this.customFilterAndSearch = (filter, value) => {\n      console.log(\"provenance,\", filter, value);\n      return filterEvents(filter.value, value);\n    };\n  }\n  generateColumnObject() {\n    return {\n      title: \"Events Used\",\n      name: this.name,\n      width: this.width,\n      customSort: (a, b) => a.sequence.length - b.sequence.length,\n      customFilterAndSearch: this.customFilterAndSearch,\n      render: (renderData) =>\n        renderProvenanceNodeCell(renderData, this.handleProvenanceNodeClick),\n      /*groupedSummaryComponent: (incomingData) => (\n        <GroupedContainer>\n          <EventsSummary incomingData={incomingData}></EventsSummary>\n        </GroupedContainer>\n      ),*/\n      type: \"provenance\",\n      filterComponent: (props) => (\n        <EventsSummary\n          incomingData={{ incomingData: this.data }}\n          onFilter={(filter, value, row) => {\n            return this.handleFilterChange(this.name, filter);\n          }}></EventsSummary>\n      ),\n    };\n  }\n}\n\nfunction renderNotesCell(rowData) {\n  if (!Array.isArray(rowData.tags)) {\n    rowData.tags = [];\n  }\n  console.log(\"generated tag\", rowData);\n  return (\n    <TagWrapper\n      id={generateRowId(rowData)}\n      tags={rowData.tags}\n      onTagChange={(action, tag) => {\n        // check if rowData is selected;\n        if (action === \"Add\") {\n          rowData.tags.push(tag);\n        } else {\n          const index = rowData.tags.findIndex((iterTag) => {\n            return iterTag.name === tag[0]?.name;\n          });\n          if (index > -1) {\n            rowData.tags.splice(index, 1);\n          }\n        }\n      }}></TagWrapper>\n  );\n}\n\nfunction renderNotesColumn(notesColumnWidth) {\n  return {\n    title: \"Notes\",\n    name: \"None\",\n    cellStyle: {\n      padding: \"4px 16px\",\n    },\n    width: notesColumnWidth,\n    customSort: (a, b) => b.tableData.tags.length - a.tableData.tags.length,\n    filterComponent: () => <div></div>,\n    render: renderNotesCell,\n  };\n}\n\nfunction renderProvenanceNodeCell(data, handleProvenanceNodeClick) {\n  return (\n    <ProvenanceIsolatedNodes\n      nodes={data.sequence}\n      handleProvenanceNodeClick={\n        handleProvenanceNodeClick\n      }></ProvenanceIsolatedNodes>\n  );\n}\n\nconst GroupDataResolver = (props) => {\n  const { incomingData, children } = props;\n  const [partitionedData, setPartitionedData] = useState([]);\n  useEffect(() => {\n    if (incomingData && incomingData.length > 0) {\n      setPartitionedData(incomingData);\n    }\n  }, incomingData);\n  if (_.isFunction(children)) {\n    return children({ partitionedData });\n  }\n  return <div></div>;\n};\n","//@ts-nocheck\nimport React, { useState, useEffect, forwardRef, useMemo } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  GroupingState,\n  SelectionState,\n  IntegratedSelection,\n  IntegratedGrouping,\n  FilteringState,\n  IntegratedFiltering,\n  IntegratedSummary,\n  SummaryState,\n} from \"@devexpress/dx-react-grid\";\nimport {\n  Grid,\n  VirtualTable,\n  TableHeaderRow,\n  TableGroupRow,\n  TableSelection,\n  GroupingPanel,\n  Toolbar,\n  DragDropProvider,\n  TableFilterRow,\n  TableColumnResizing,\n  ColumnChooser,\n  TableColumnVisibility,\n  TableSummaryRow,\n} from \"@devexpress/dx-react-grid-material-ui\";\n\nimport ProvenanceGraph from \"./ProvenanceGraph\";\nimport * as d3 from \"d3\";\nimport TagsInput from \"react-tagsinput\";\nimport eventMapping from \"./eventMapping\";\nimport TagStyles from \"./tagstyles.module.css\";\nimport TagWrapper from \"./reactTagWrapper\";\nimport { QuantitativeFilter, CategoricalFilter } from \"./TableFilters\";\nimport styles from \"./ProvenanceTable.module.css\";\nimport { ifError } from \"assert\";\nimport _ from \"lodash\";\nimport {\n  QuantitativeColumn,\n  CategoricalColumn,\n  ProvenanceColumn,\n  NotesColumn,\n  LongTextColumn,\n} from \"./ColumnDefinitions.tsx\";\nimport {\n  CodeSandboxCircleFilled,\n  PropertySafetyFilled,\n} from \"@ant-design/icons\";\nimport { Typography } from \"@material-ui/core\";\n\nconst differenceFilter = (firstArray, secondArray) => {\n  return firstArray.filter(\n    (firstArrayItem) =>\n      !secondArray.some(\n        (secondArrayItem) =>\n          firstArrayItem.columnName === secondArrayItem.columnName\n      )\n  );\n};\nfunction toFixedTrunc(x, n) {\n  const v = (typeof x === \"string\" ? x : x.toString()).split(\".\");\n  if (n <= 0) return v[0];\n  let f = v[1] || \"\";\n  if (f.length > n) return `${v[0]}.${f.substr(0, n)}`;\n  while (f.length < n) f += \"0\";\n  return `${v[0]}.${f}`;\n}\nconst GroupCellContent = (props) => {\n  const { provenanceData, column, row, children } = props;\n  console.log(column, props);\n  const groupData = children.props.columnSummaries[0].value;\n\n  let Content = () => <div></div>;\n  if (column.groupedSummaryComponent) {\n    Content = column.groupedSummaryComponent;\n  }\n\n  return (\n    <TableSummaryRow.GroupCell {...props}>\n      <Content incomingData={groupData} partitionedData={groupData}></Content>\n    </TableSummaryRow.GroupCell>\n  );\n};\nconst GroupRowContent = (props) => {\n  return (\n    <div>\n      <p>Hello this is a test</p>\n      <TableGroupRow.Row {...props}></TableGroupRow.Row>\n    </div>\n  );\n};\n\nconst nameGroupCriteria = (value) => {\n  const firstLetter = String(value).substr(0, 1).toLowerCase();\n  const groupValue =\n    firstLetter < \"n\" ? { from: \"A\", to: \"M\" } : { from: \"N\", to: \"Z\" };\n  return {\n    value: groupValue,\n    key: `${groupValue.from}-${groupValue.to}`,\n  };\n};\nconst FilterCells = ({ value, other, ...restProps }) => {\n  let Item; //= () => <div></div>;\n  let itemProps = Object.assign({}, restProps);\n  if (restProps.column.filterComponent) {\n    itemProps[\"onFilter\"] = restProps.onFilter;\n    Item = restProps.column.filterComponent;\n    //Item = (props) => <NewItem {...props}></NewItem>;\n  } else {\n    Item = (props) => <TableFilterRow.Cell {...props}></TableFilterRow.Cell>;\n  }\n  return (\n    <VirtualTable.Cell style={{ width: \"100%\" }}>\n      <Item {...itemProps}></Item>\n    </VirtualTable.Cell>\n  );\n};\nconst ProvenanceCells = ({ value, style, ...restProps }) => {\n  let item;\n  if (restProps.column.render) {\n    item = restProps.column.render(restProps.row);\n  }\n  return (\n    <VirtualTable.Cell {...restProps} style={{ margin: \"16px\" }}>\n      {item}\n    </VirtualTable.Cell>\n  );\n};\n\nfunction getGroupSummaryValues(props) {\n  //const { selection, rows, totalSummaryItems } = this.state;\n  //const selectionSet = new Set(selection);\n  //const selectedRows = rows.filter((row, rowIndex) => selectionSet.has(rowIndex));\n  return rows; /*totalSummaryItems.map((summary) => {\n      const { columnName, type } = summary;\n      return IntegratedSummary.defaultCalculator(type, selectedRows, row => row[columnName]);\n    });*/\n}\n// must use non zero order else !order is true\n\nfunction getColumnMetaData(columnKey, columnMetaData) {\n  if (columnMetaData[columnKey]) {\n    return columnMetaData[columnKey];\n  } else {\n    return { hideByDefault: true };\n  }\n}\n\nfunction generateColumnDefinition(\n  columnSchema,\n  data,\n  columnsMetaData,\n  handleFilterChange\n) {\n  let defaultColumnDefinition;\n  const columnMetaData = getColumnMetaData(\n    columnSchema.COLUMN_NAME,\n    columnsMetaData\n  );\n  if (columnSchema.DATA_TYPE === \"int\" || columnSchema.DATA_TYPE === \"float\") {\n    defaultColumnDefinition = new QuantitativeColumn(\n      data,\n      columnSchema.COLUMN_NAME,\n      columnMetaData,\n      handleFilterChange\n    );\n  } else if (columnSchema.DATA_TYPE === \"text\") {\n    defaultColumnDefinition = new CategoricalColumn(\n      data,\n      columnSchema.COLUMN_NAME,\n      columnMetaData,\n      handleFilterChange\n    );\n  } else if (columnSchema.DATA_TYPE === \"longtext\") {\n    defaultColumnDefinition = new LongTextColumn(\n      data,\n      columnSchema.COLUMN_NAME,\n      columnMetaData,\n      handleFilterChange\n    );\n  } else if (columnSchema.DATA_TYPE === \"provenance\") {\n    defaultColumnDefinition = new ProvenanceColumn(\n      data,\n      \"sequence\",\n      columnMetaData,\n      handleFilterChange\n    );\n  } else if (columnSchema.DATA_TYPE === \"tag\") {\n    defaultColumnDefinition = new NotesColumn(columnMetaData);\n    /*\n    defaultColumnDefinition = {\n      title: columnSchema.COLUMN_NAME,\n      name: columnSchema.COLUMN_NAME,\n      render: (rowData) => <span>{\"tag\"}</span>,\n      width: 100,\n    };*/\n  } else {\n    console.error(\n      `[DevExtremeTable.tsx] ERROR: Column Schema contains unkown column type ${columnSchema.DATA_TYPE}.`\n    );\n  }\n\n  return defaultColumnDefinition;\n}\nconst DevExtremeTable = ({\n  provenanceData,\n  handleProvenanceNodeClick,\n  tableSchema,\n  handleTagCreation,\n}) => {\n  console.log(\"new provenance data\", provenanceData);\n  const [filters, setFilters] = React.useState([]);\n  const handleFilter = (columnName, value) => {\n    const currentFilterIndex = filters.findIndex(\n      (filter) => filter.name === columnName\n    );\n    let clonedFilters = [...filters];\n    if (currentFilterIndex > -1) {\n      clonedFilters[currentFilterIndex] = {\n        columnName: columnName,\n        value: value,\n      };\n    } else {\n      clonedFilters.push({ columnName: columnName, value: value });\n    }\n    setFilters(clonedFilters);\n    console.log(\"new filter\", clonedFilters);\n  };\n  let columnMetaData = {\n    participantID: { order: 1 },\n    condition: { order: 2 },\n    accuracy: { width: 125, order: 3 },\n    time: { width: 200, order: 4 },\n    sequence: {\n      width: 300,\n      order: 5,\n      handleProvenanceNodeClick: handleProvenanceNodeClick,\n    },\n    notes: { width: 200, order: 6, handleTagCreation: handleTagCreation },\n  };\n  console.log(\"current filters\", filters);\n\n  React.useEffect(() => {\n    /*\n    setTimeColumnDefinition(renderTimeColumn(provenanceData, 250));\n    setAccuracyColumnDefinition(renderAccuracyColumn(provenanceData, 100));\n    setEventsColumnDefinition(renderProvenanceNodeColumn(provenanceData, 500));\n    //setNotesColumnDefinition(renderNotesColumn(200));\n    setRows(provenanceData);*/\n\n    setColumns(\n      tableSchema\n        .map((columnSchema) =>\n          generateColumnDefinition(\n            columnSchema,\n            provenanceData,\n            columnMetaData,\n            handleFilter\n          ).generateColumnObject()\n        )\n        .sort((a, b) => {\n          if (!a.order) {\n            return 1;\n          }\n          if (!b.order) {\n            return -1;\n          }\n          return a.order > b.order ? 1 : -1;\n        })\n    );\n  }, [provenanceData]);\n\n  const [columns, setColumns] = useState(\n    tableSchema\n      .map((columnSchema) =>\n        generateColumnDefinition(\n          columnSchema,\n          provenanceData,\n          columnMetaData\n        ).generateColumnObject()\n      )\n      .sort((a, b) => {\n        if (!a.order) {\n          return 1;\n        }\n        if (!b.order) {\n          return -1;\n        }\n        return a.order > b.order ? 1 : -1;\n      })\n  );\n  const [selection, setSelectionInternal] = useState([]);\n\n  const setSelection = (selectionIndicies) => {\n    setSelectionInternal(selectionIndicies);\n  };\n\n  const [rows, setRows] = useState(provenanceData);\n  // when task ID changes, use new data\n  useEffect(() => {\n    setRows(provenanceData);\n  }, [provenanceData]);\n  const [grouping, setGroupingInternal] = useState([]);\n  const setGrouping = (newGrouping) => {\n    // if an item is recently grouped on, remove any filters for it.\n    let newlyAddedGroups = differenceFilter(newGrouping, grouping)?.[0];\n\n    console.log(\"dywootto\", newlyAddedGroups);\n    if (newlyAddedGroups) {\n      let currentFilter = filters.find(\n        (filterItem) => newlyAddedGroups.columnName === filterItem.columnName\n      );\n      console.log(\"dywootto\", currentFilter);\n\n      if (!currentFilter) {\n        currentFilter = { value: { filterMin: 0.5, filterMax: 1.5 } };\n      }\n      const newGroupIndex = newGrouping.findIndex(\n        (newGroup) => newGroup.columnName === newlyAddedGroups.columnName\n      );\n      newGrouping[newGroupIndex] = Object.assign(newGrouping[newGroupIndex], {\n        groupMetaData: currentFilter.value,\n      });\n    }\n    // search through grouping,\n    setGroupingInternal(newGrouping);\n    //setFilters(clonedFilters);\n  };\n  const groupingPredicate = (value, column, filterValue) => {\n    console.log(\"grouping pred\", value, column, filterValue);\n    // find filter value\n    const isRowInTrueGroup = column.customFilterAndSearch(\n      { value: filterValue },\n      value\n    );\n    return {\n      value: isRowInTrueGroup,\n      key: `${column.name}-${isRowInTrueGroup}`,\n    };\n  };\n  const integratedGroupingColumnExtensions = useMemo(\n    () => {\n      return columns.map((column) => {\n        // if quantitative column, group with filter value\n        if (column.type === \"quantitative\") {\n          const group = grouping.find(\n            (group) => group.columnName === column.name\n          );\n          let groupingValue = group\n            ? group.groupMetaData\n            : { filterMin: 0.2, filterMax: 1.2 };\n\n          return {\n            columnName: column.name,\n            criteria: (value) =>\n              groupingPredicate(value, column, groupingValue),\n          };\n        } else if (column.type === \"provenance\") {\n          const group = grouping.find(\n            (group) => group.columnName === column.name\n          );\n          let groupingValue = group ? group.groupMetaData : null;\n\n          return {\n            columnName: column.name,\n            criteria: (value) =>\n              groupingPredicate(value, column, groupingValue),\n          };\n        }\n        return { columnName: column.name };\n      });\n    },\n    [columns, grouping]\n\n    // { columnName: \"visType\", criteria: nameGroupCriteria },\n    //{ columnName: \"answer\", criteria: (data) => data.accuracy > 0.5 },\n  );\n  const [tableGroupColumnExtension] = useState([\n    columns.map((column) => ({\n      columnName: column.name,\n      showWhenGrouped: true,\n    })),\n    //  { columnName: \"visType\", showWhenGrouped: true },\n    // { columnName: \"answer\", showWhenGrouped: true },\n  ]);\n\n  const [defaultColumnWidths] = useState(\n    columns.map((column) => {\n      return {\n        columnName: column.name,\n        width: column.width ? column.width : 100,\n      };\n    })\n  );\n\n  const [filteringColumnExtensions] = useState(\n    columns.map((column) => {\n      return {\n        columnName: column.name,\n        predicate: (value, filter, row) => {\n          //if (!filter.value.length) return true;\n          if (column.customFilterAndSearch) {\n            return column.customFilterAndSearch(filter, value, row);\n          }\n          return IntegratedFiltering.defaultPredicate(value, filter, row);\n        },\n      };\n    })\n  );\n\n  const [groupSummaryItems] = useState(\n    columns.map((column) => {\n      return {\n        name: column.name,\n        columnName: column.name,\n        type: \"custom\",\n        showInGroupFooter: false,\n        alignByColumn: true,\n      };\n    })\n  );\n\n  const [defaultHiddenColumnNames] = useState(\n    columns\n      .filter((column) => column.hideByDefault)\n      .map((column) => column.name)\n  );\n  const summaryCalculator = (type, rows, getValue) => {\n    if (type === \"custom\") {\n      if (!rows.length) {\n        return null;\n      }\n      return rows;\n    }\n    return rows;\n  };\n  const TempRowComponent = (props) => {\n    const [hidden, setHidden] = useState(false);\n    let groupedRowHeader = `Grouped Row`;\n    const columnName = props.row.groupedBy;\n    const columnInfo = columns.find((column) => column.name == columnName);\n    if (columnInfo) {\n      console.log(columnInfo);\n      if (columnInfo.type === \"quantitative\") {\n        const groupIndex = grouping.findIndex(\n          (group) => group.columnName === columnName\n        );\n        const group = grouping[groupIndex];\n\n        if (props.row.value === true) {\n          // grab values from filters\n          groupedRowHeader = `${\"---\".repeat(\n            groupIndex\n          )} Grouped on: ${columnName} [${toFixedTrunc(\n            group.groupMetaData.filterMin,\n            2\n          )},${toFixedTrunc(group.groupMetaData.filterMax, 2)}]`;\n        } else {\n          groupedRowHeader = `${\"---\".repeat(\n            groupIndex\n          )} Grouped on: ${columnName} is outside of range [${toFixedTrunc(\n            group.groupMetaData.filterMin,\n            2\n          )}, ${toFixedTrunc(group.groupMetaData.filterMax, 2)}]`;\n        }\n      } else if (columnInfo.type === \"provenance\") {\n        const groupIndex = grouping.findIndex(\n          (group) => group.columnName === columnName\n        );\n        const group = grouping[groupIndex];\n        console.log(\n          \"On provenance group\",\n          props,\n          grouping,\n          columnName,\n          group.groupMetaData\n        );\n\n        if (props.row.value === true) {\n          // grab values from filters\n          groupedRowHeader = `${\"---\".repeat(\n            groupIndex\n          )} Grouped on provenance sequence:${group.groupMetaData\n            .map((node) => node.label)\n            .join(\",\")}`;\n        } else {\n          groupedRowHeader = `${\"---\".repeat(\n            groupIndex\n          )} Grouped on not containing provenance sequence`;\n        }\n      } else {\n        groupedRowHeader = `${columnName} is ${props.row.value}`;\n      }\n    }\n    return (\n      <React.Fragment>\n        <tr className={styles.groupHeaderRow}>\n          <td colSpan={42} onClick={() => setHidden(!hidden)}>\n            <Typography\n              className={styles.groupHeaderContent}\n              variant={\"overline\"}>\n              {groupedRowHeader}\n            </Typography>\n          </td>\n        </tr>\n        {!hidden && (\n          <TableGroupRow.Row {...props}>{props.children}</TableGroupRow.Row>\n        )}\n      </React.Fragment>\n    );\n  };\n  return (\n    <Paper>\n      <Grid rows={rows} columns={columns}>\n        <DragDropProvider />\n        <GroupingState\n          grouping={grouping}\n          onGroupingChange={setGrouping}\n          columnGroupingEnabled\n          columnExtensions={tableGroupColumnExtension}\n        />\n        <SummaryState groupItems={groupSummaryItems} />\n        <IntegratedGrouping\n          columnExtensions={integratedGroupingColumnExtensions}\n        />\n        <IntegratedSummary calculator={summaryCalculator} />\n        <FilteringState filters={filters} onFiltersChange={setFilters} />\n        <IntegratedFiltering\n          columnExtensions={filteringColumnExtensions}></IntegratedFiltering>\n        <SelectionState\n          selection={selection}\n          onSelectionChange={setSelection}\n        />\n        <IntegratedSelection />\n        <VirtualTable cellComponent={ProvenanceCells} height={1000} />\n        <TableColumnVisibility\n          defaultHiddenColumnNames={defaultHiddenColumnNames}\n        />\n        <TableColumnResizing columnWidths={defaultColumnWidths} />\n        <TableHeaderRow showGroupingControls />\n        <TableSelection showSelectAll />\n        <TableFilterRow cellComponent={FilterCells} />\n        <TableGroupRow\n          rowComponent={TempRowComponent}\n          columnExtensions={tableGroupColumnExtension}\n          summaryCellComponent={(props) => (\n            <GroupCellContent\n              columns={columns}\n              provenanceData={provenanceData}\n              {...props}></GroupCellContent>\n          )}\n          contentComponent={() => {\n            return <div></div>;\n          }}\n          showColumnsWhenGrouped\n          stubCellComponent={(stubProps) => {\n            let shouldHideStub = false;\n            // if this stub prop matches last grouping, hide it\n            // this is used to fix a bug where the inner most grouped row is off by one td\n\n            if (grouping.length > 0) {\n              const groupedByRow = stubProps.tableRow.row.groupedBy;\n              shouldHideStub =\n                grouping[grouping.length - 1].columnName === groupedByRow;\n            }\n            return (\n              <td style={shouldHideStub ? { display: \"none\" } : null}></td>\n            );\n          }}\n        />\n        <Toolbar />\n        <ColumnChooser />\n        <GroupingPanel showGroupingControls></GroupingPanel>\n      </Grid>\n    </Paper>\n  );\n};\n\nfunction generateCategoricalScale(data, width) {\n  const uniqueValues = Array.from(new Set(data));\n  return d3.scaleBand().rangeRound([0, width]).padding(0).domain(uniqueValues);\n}\n\nfunction renderStimulusDefinition(provenanceData, stimulusColumnWidth) {\n  // TODO: Refactor to generalized\n  return {\n    title: \"Stimulus\",\n    name: \"visType\",\n    render: (rowData) => <span>{rowData.visType}</span>,\n    width: stimulusColumnWidth,\n  };\n}\n\nfunction renderUserIdColumn(provenanceData, userIdColumnWidth) {\n  return {\n    title: \"User Id\",\n    name: \"workerID\",\n    render: (rowData) => <span>{rowData.workerID}</span>,\n    width: userIdColumnWidth,\n    groupedSummaryComponent: () => <div></div>,\n  };\n}\n\n/**\n *\n * @param filter\n * @param value\n * @param accesssor\n */\nfunction filterCategoricalValue(filter, value, accesssor) {\n  if (!Array.isArray(value)) {\n    value = [value];\n  }\n  // for each value\n  let newValues = value;\n  if (accesssor) {\n    newValues = newValues.map(accesssor);\n  }\n  for (let i = 0; i < newValues.length; i++) {\n    if (Object.values(filter).includes(newValues[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction renderProvenanceNodeColumn(\n  currentProvenanceData,\n  eventColumnWidth,\n  handleProvenanceNodeClick\n) {\n  const eventWidth = 500;\n  const eventNodes = currentProvenanceData\n    .map((graph) => {\n      return graph.provenance.map((node) => node.event);\n    })\n    .flat()\n    .filter((item) => item !== \"startedProvenance\" && item !== \"Finished Task\");\n\n  let eventScale = generateCategoricalScale(eventNodes, eventWidth);\n\n  // Create mapping of event types to labels\n  const allObj = {};\n\n  Object.keys(eventMapping).forEach((eventKey) => {\n    allObj[eventKey] = eventMapping[eventKey].icon;\n  });\n\n  const ProvenanceSummary = ({ incomingData }) => {\n    const [partitionedData, setPartitionedData] = useState([]);\n    useEffect(() => {\n      if (incomingData && incomingData.length > 0) {\n        setPartitionedData(incomingData);\n      }\n    }, incomingData);\n\n    const partitionedNodes = partitionedData\n      .map((graph) => {\n        return graph.provenance.map((node) => node.event);\n      })\n      .flat()\n      .filter(\n        (item) => item !== \"startedProvenance\" && item !== \"Finished Task\"\n      );\n    if (partitionedNodes.length === 0) {\n      return <div></div>;\n    }\n    return (\n      <CategoricalFilter\n        width={eventWidth}\n        scale={eventScale}\n        labels={allObj}\n        data={partitionedNodes}></CategoricalFilter>\n    );\n  };\n\n  return {\n    title: \"Events Used\",\n    name: \"provenance\",\n    width: eventWidth,\n    cellStyle: {\n      maxWidth: eventWidth,\n      padding: \"4px 16px\",\n    },\n    customSort: (a, b) => a.provenance.length - b.provenance.length,\n    render: (renderData) =>\n      renderProvenanceNodeCell(renderData, handleProvenanceNodeClick),\n    customFilterAndSearch: (filter, value, row) => {\n      return filterCategoricalValue(filter, value, (node) => node.event);\n    },\n    groupedSummaryComponent: ({ incomingData }) => {\n      return (\n        <GroupDataResolver incomingData={incomingData}>\n          {({ partitionedData }) => {\n            const partitionedNodes = partitionedData\n              .map((graph) => {\n                return graph.provenance.map((node) => node.event);\n              })\n              .flat()\n              .filter(\n                (item) =>\n                  item !== \"startedProvenance\" && item !== \"Finished Task\"\n              );\n            if (partitionedNodes.length === 0) {\n              return <div></div>;\n            }\n            return (\n              <CategoricalFilter\n                width={eventWidth}\n                scale={eventScale}\n                labels={allObj}\n                data={partitionedNodes}></CategoricalFilter>\n            );\n          }}\n        </GroupDataResolver>\n      );\n    },\n    filterComponent: (props) => (\n      <CategoricalFilter\n        {...props}\n        width={eventWidth}\n        scale={eventScale}\n        labels={allObj}\n        data={eventNodes}></CategoricalFilter>\n    ),\n  };\n}\n\nconst GroupDataResolver = (props) => {\n  const { incomingData, children } = props;\n  const [partitionedData, setPartitionedData] = useState([]);\n  useEffect(() => {\n    if (incomingData && incomingData.length > 0) {\n      setPartitionedData(incomingData);\n    }\n  }, incomingData);\n  if (_.isFunction(children)) {\n    return children({ partitionedData });\n  }\n  return <div></div>;\n};\n\n/* Accuracy */\nfunction renderAccuracyCell(rowData, accuracyScale) {\n  return (\n    <svg width={100} height={20}>\n      <rect\n        x={accuracyScale(rowData.answer.accuracy)}\n        width={20}\n        height={20}></rect>\n    </svg>\n  );\n}\n\nfunction renderAccuracyColumn(currentProvenanceData, columnWidth) {\n  // TODO: Refactor to categorical or Numerical\n  let accuracyScale = generateCategoricalScale([\"1\", \"0\"], columnWidth);\n\n  return {\n    title: \"Accuracy\",\n    name: \"answer\",\n    width: columnWidth,\n    cellStyle: {\n      maxWidth: columnWidth,\n      padding: \"4px 16px\",\n    },\n    customSort: (a, b) => a.answer.accuracy - b.answer.accuracy,\n    render: (rowData) => renderAccuracyCell(rowData, accuracyScale),\n    customFilterAndSearch: (filter, value, row) => {\n      return filterCategoricalValue(\n        filter,\n        value,\n        (answer) => `${answer.accuracy}`\n      );\n    },\n    groupedSummaryComponent: ({ incomingData }) => {\n      return (\n        <GroupDataResolver incomingData={incomingData}>\n          {({ partitionedData }) => {\n            if (partitionedData.length === 0) {\n              return <div></div>;\n            }\n            return (\n              <CategoricalFilter\n                width={columnWidth}\n                scale={accuracyScale}\n                labels={{ \"1\": \"true\", \"0\": \"false\" }}\n                data={partitionedData.map(\n                  // TODO: fix from hard coded\n                  (graph) => graph.answer.correct\n                )}></CategoricalFilter>\n            );\n          }}\n        </GroupDataResolver>\n      );\n    },\n\n    filterComponent: (props) => (\n      <CategoricalFilter\n        {...props}\n        width={columnWidth}\n        scale={accuracyScale}\n        labels={{ \"1\": \"true\", \"0\": \"false\" }}\n        data={currentProvenanceData.map(\n          // TODO: fix from hard coded\n          (graph) => graph.answer.correct\n        )}></CategoricalFilter>\n    ),\n  };\n}\n\n/* Time */\nfunction renderTimeCell(rowData, timeScale) {\n  return (\n    <svg width={timeScale.range()?.[1]} height={20}>\n      <ProvenanceGraph performance={rowData} xScale={timeScale} />\n    </svg>\n  );\n}\nfunction renderTimeColumn(currentProvenanceData, columnWidth) {\n  const max = d3.max(currentProvenanceData, (datum) => datum.totalTime);\n  const timeScale = d3.scaleLinear().domain([0, max]).range([0, columnWidth]);\n\n  return {\n    title: \"Time To Complete\",\n    name: \"totalTime\",\n    width: columnWidth,\n    cellStyle: {\n      maxWidth: columnWidth,\n      padding: \"4px 16px\",\n    },\n    customSort: (a, b) => a.totalTime - b.totalTime,\n    render: (rowData) => renderTimeCell(rowData, timeScale),\n    customFilterAndSearch: (filter, value, row) => {\n      return filterQuantitativeValues(filter, value, row);\n    },\n    groupedSummaryComponent: ({ incomingData }) => {\n      return (\n        <GroupDataResolver incomingData={incomingData}>\n          {({ partitionedData }) => {\n            if (partitionedData.length === 0) {\n              return <div></div>;\n            }\n            return (\n              <QuantitativeFilter\n                xScale={timeScale}\n                data={partitionedData.map(\n                  (graph) => graph.totalTime\n                )}></QuantitativeFilter>\n            );\n          }}\n        </GroupDataResolver>\n      );\n    },\n    filterComponent: (props) => (\n      <QuantitativeFilter\n        {...props}\n        xScale={timeScale}\n        data={currentProvenanceData.map(\n          (graph) => graph.totalTime\n        )}></QuantitativeFilter>\n    ),\n  };\n}\n\nexport default DevExtremeTable;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport DevTable from \"./DevExtremeTable\";\nimport ProvenanceDataContext from \"./ProvenanceDataContext\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport LoaderStyles from \"./TableDataLoader.module.css\";\nimport Measure from \"react-measure\";\nimport { getSchema } from \"../fetchers/fetchMocks\";\nimport { useFetchAPIData } from \"../hooks/hooks\";\n\nconst TableDataLoader = (props) => {\n  const [height, setHeight] = useState(1000);\n  const {\n    currentTaskData,\n    handleProvenanceNodeClick,\n    handleTagCreation,\n  } = useContext(ProvenanceDataContext);\n  const [tableSchema, setTableSchema] = useState(null);\n\n  let [isLoading, isError, schemaFromServer] = useFetchAPIData(async () => {\n    return await getSchema(\"Performance\");\n  }, []);\n\n  // Set Schema\n  useEffect(() => {\n    let tableSchema = schemaFromServer;\n\n    const hiddenColumns = [\"id\"];\n    // TODO: make this smart, if > column is highly variable, don't show.\n    const hideAggregate = [\"participantID\", \"answer\"];\n\n    if (tableSchema) {\n      // append the provenance sequence nodes onto the end of performance schema\n\n      tableSchema = tableSchema.concat({\n        COLUMN_NAME: \"sequence\",\n        DATA_TYPE: \"provenance\",\n        ORDINAL_POSITION: schemaFromServer.length,\n      });\n\n      tableSchema = tableSchema.concat({\n        COLUMN_NAME: \"notes\",\n        DATA_TYPE: \"tag\",\n        ORDINAL_POSITION: schemaFromServer.length + 2,\n      });\n\n      tableSchema = tableSchema.map((column) => {\n        column.hideAggregate = hideAggregate.includes(column);\n        return column;\n      });\n\n      tableSchema = tableSchema.filter(\n        (column) => !hiddenColumns.includes(column.COLUMN_NAME)\n      );\n    }\n\n    setTableSchema(tableSchema);\n  }, [schemaFromServer]);\n  console.log(\"tableschema\", tableSchema);\n  const dependenciesLoaded = !!(\n    currentTaskData &&\n    currentTaskData.length > 0 &&\n    tableSchema\n  );\n\n  return dependenciesLoaded ? (\n    <DevTable\n      provenanceData={currentTaskData}\n      tableSchema={tableSchema}\n      handleProvenanceNodeClick={handleProvenanceNodeClick}\n      handleTagCreation={handleTagCreation}></DevTable>\n  ) : (\n    <div>\n      <Measure\n        bounds\n        onResize={(contentRect) => {\n          setHeight(contentRect.bounds.height);\n        }}>\n        {(measureRef) => {\n          console.log(\"height\", height);\n          return (\n            <div ref={measureRef} className={LoaderStyles.loader}>\n              <Skeleton height={height} variant=\"rect\" animation=\"wave\" />\n            </div>\n          );\n        }}\n      </Measure>\n    </div>\n  );\n};\n\nexport default TableDataLoader;\n","//@ts-nocheck\nimport React, { useMemo } from \"react\";\nimport ProvenanceIsolatedNodes from \"./ProvenanceIsolatedNodes\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowForward from \"@material-ui/icons/ArrowForward\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport PlayCircleOutline from \"@material-ui/icons/PlayCircleOutline\";\nimport PauseCircleOutline from \"@material-ui/icons/PauseCircleOutline\";\nimport * as d3 from \"d3\";\nimport { AutoSizer, List } from \"react-virtualized\";\n\nconst conditionEnums = Object.freeze({\n  adjMatrix: \"AM\",\n  nodeLink: \"NL\",\n});\nfunction parseTaskNumFromId(taskID) {\n  let taskNumber = taskID.match(/\\d/g);\n  taskNumber = taskNumber.join(\"\");\n  // remove leading zeros\n  return parseInt(taskNumber, 10);\n}\nconst ProvenanceController = ({\n  nodes,\n  selectedNode,\n  taskId,\n  participantId,\n  condition,\n}) => {\n  //  \"https://vdl.sci.utah.edu/mvnv-study/?vis=NL&taskNum=7&participantID=5588d7a1fdf99b304ee56840&taskID=S-task07/#c0203065-9927-42f5-88f6-07189cae6cff\";\n  console.log(nodes, selectedNode, taskId, participantId, condition);\n\n  const [playInterval, setPlayInterval] = React.useState(null);\n  const [hoveredItemId, setHoveredItemId] = React.useState(null);\n  const [selectedItemId, setSelectedItemIdInternal] = React.useState(\n    selectedNode.id\n  );\n\n  let url = `https://vdl.sci.utah.edu/mvnv-study/?vis=${\n    conditionEnums[condition]\n  }&taskNum=${parseTaskNumFromId(\n    taskId\n  )}&participantID=${participantId}&taskID=${taskId}/#${\n    nodes.find((node) => node.id === selectedItemId)?.dataID\n  }`;\n  console.log(\n    url,\n    url ===\n      \"https://vdl.sci.utah.edu/mvnv-study/?vis=NL&taskNum=7&participantID=5588d7a1fdf99b304ee56840&taskID=S-task07/#c0203065-9927-42f5-88f6-07189cae6cff\"\n  );\n\n  function handlePlayClick() {\n    // set if not selected\n    setPlayInterval(setInterval(handleForward, 1000));\n  }\n  function handlePauseClick() {\n    clearInterval(playInterval);\n    setPlayInterval(null);\n  }\n\n  const setSelectedItemId = (id) => {\n    // make async call to load data\n    if (id === selectedItemId) {\n      setSelectedItemIdInternal(null);\n    } else {\n      setSelectedItemIdInternal(id);\n    }\n  };\n\n  console.log(\"dywootto\", hoveredItemId);\n\n  function handleForward() {\n    // TODO handle case if\n    console.log(\"in forward\", selectedItemId);\n\n    setSelectedItemId((previousId) => {\n      if (!previousId) {\n        setSelectedItemId(nodes[0].id);\n      }\n      const currentIndex = nodes.findIndex((node) => node.id === previousId);\n      console.log(\"in forward\", currentIndex);\n\n      // if at the end, do nothing\n      if (currentIndex === nodes.length - 1 || currentIndex === -1) {\n        return nodes[0].id;\n      }\n      return nodes[currentIndex + 1].id;\n    });\n  }\n  function handleBackward() {\n    console.log(\"in backward\", selectedItemId);\n    if (!selectedItemId) {\n      setSelectedItemId(nodes[0].id);\n    }\n    const currentIndex = nodes.findIndex((node) => node.id === selectedItemId);\n    console.log(\"in backward\", currentIndex);\n\n    // if at the begining, do nothing\n    if (currentIndex < 1) {\n      return;\n    }\n    setSelectedItemId(nodes[currentIndex - 1].id);\n  }\n\n  return (\n    <div style={{ backgroundColor: \"white\" }}>\n      <div style={{ height: 825 }}>\n        <iframe width={\"100%\"} height={\"100%\"} src={url}></iframe>\n      </div>\n      <div\n        style={{\n          margin: \"0 auto\",\n          width: \"fit-content\",\n          display: \"grid\",\n          gridTemplateRows: \"50px 50px\",\n          gridTemplateColumns: \"min(max-content,1000)\",\n        }}>\n        <div style={{ gridRow: 1, overflow: \"scroll\" }}>\n          <ProvenanceIsolatedNodes\n            hoveredItemId={hoveredItemId}\n            handleHover={(id) => setHoveredItemId(id)}\n            selectedItemId={selectedItemId}\n            nodes={nodes}\n            handleProvenanceNodeClick={(node) =>\n              setSelectedItemId(node.id)\n            }></ProvenanceIsolatedNodes>\n          <AutoSizer>\n            {({ height, width }) => (\n              <TimeLine\n                width={width}\n                hoveredItemId={hoveredItemId}\n                setHoveredItemId={(id) => setHoveredItemId(id)}\n                selectedItemId={selectedItemId}\n                nodes={nodes}\n                setSelectedItemId={(node) =>\n                  setSelectedItemId(node.id)\n                }></TimeLine>\n            )}\n          </AutoSizer>\n        </div>\n        <div style={{ gridRow: 2, width: \"100%\", height: \"100%\" }}>\n          <div\n            style={{\n              margin: \"0 auto\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}>\n            <IconButton aria-label=\"delete\" onClick={handleBackward}>\n              <ArrowBack />\n            </IconButton>\n            {playInterval && (\n              <IconButton aria-label=\"delete\" onClick={handlePauseClick}>\n                <PauseCircleOutline />\n              </IconButton>\n            )}\n            {!playInterval && (\n              <IconButton aria-label=\"delete\" onClick={handlePlayClick}>\n                <PlayCircleOutline />\n              </IconButton>\n            )}\n\n            <IconButton aria-label=\"delete\" onClick={handleForward}>\n              <ArrowForward />\n            </IconButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProvenanceController;\n\nconst TimeLine = (props) => {\n  const {\n    width,\n    nodes,\n    setSelectedItemId,\n    setHoveredItemId,\n    selectedItemId,\n    hoveredItemId,\n  } = props;\n  console.log(\"dywootto width\", width);\n  function determineItemOpacity(node, selectedItemId, hoveredItemId) {\n    let opacity;\n    if (selectedItemId && node.id !== selectedItemId) {\n      opacity = 0.1;\n    } else if (hoveredItemId && node.id !== hoveredItemId) {\n      opacity = 0.1;\n    }\n    if (node.id === hoveredItemId || node.id === selectedItemId) {\n      opacity = 1;\n    }\n    return opacity;\n  }\n\n  const commonScale = useMemo(() => {\n    return d3\n      .scaleLinear()\n      .domain(d3.extent(nodes, (node) => node.time))\n      .range([5, width - 5]);\n  }, [nodes, width]);\n  console.log(\"commonScale\", commonScale.range());\n\n  return (\n    <svg width={width} height={35}>\n      {nodes.map((node, index) => {\n        const opacity = determineItemOpacity(\n          node,\n          selectedItemId,\n          hoveredItemId\n        );\n        //const opacity = node.id === selectedItemId ? 0.5 : 0.1;\n        return (\n          <rect\n            key={`item-${index}`}\n            onMouseEnter={() => setHoveredItemId(node.id)}\n            onMouseLeave={() => setHoveredItemId(null)}\n            onClick={() => setSelectedItemId(node)}\n            width={0.75}\n            x={commonScale(node.time)}\n            height={20}\n            opacity={opacity}></rect>\n        );\n      })}\n    </svg>\n  );\n};\n","import React, { useContext } from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\n\nimport TableDataLoader from \"../components/TableDataLoader\";\nimport ProvenanceDataContext from \"../components/ProvenanceDataContext\";\nimport ProvenanceController from \"../components/ProvenanceController\";\n\nconst Table = ({ location }) => {\n  const { currentlyVisitedNodes, setCurrentlyVisitedNodes } = useContext(\n    ProvenanceDataContext\n  );\n  console.log(currentlyVisitedNodes, setCurrentlyVisitedNodes);\n  return (\n    <React.Fragment>\n      <TableDataLoader />\n      {currentlyVisitedNodes && (\n        <Modal\n          open={true}\n          onClose={() => setCurrentlyVisitedNodes(null)}\n          style={{ backgroundColor: \"whitesmoke\" }}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\">\n          <ProvenanceController\n            {...currentlyVisitedNodes.props}\n            nodes={currentlyVisitedNodes.data}\n            selectedNode={currentlyVisitedNodes.data[0]}></ProvenanceController>\n        </Modal>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport styles from \"./Main.module.css\";\nimport _ from \"lodash\";\nimport { relativeProvenanceData } from \"./common/data/provenanceMocks.js\";\nimport MaterialTableWrapper from \"./components/ProvenanceTable\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport Home from \"./pages/Home\";\nimport Study from \"./pages/Study\";\nimport Upload from \"./pages/Upload\";\nimport Overview from \"./pages/Overview\";\nimport Export from \"./pages/Export\";\nimport Table from \"./pages/Table\";\n\nconst Main = ({ location }) => {\n  return (\n    <Wrapper>\n      <TransitionGroup className=\"transition-group\">\n        <CSSTransition key={location.key} timeout={500} classNames=\"fade\">\n          <section className=\"route-section\">\n            <Switch location={location}>\n              <Route path=\"/Home\" component={Home}></Route>\n              <Route path=\"/Study\" component={Study}></Route>\n              <Route path=\"/Upload\" component={Upload}></Route>\n              <Route path=\"/Overview\" component={Overview}></Route>\n              <Route path=\"/Table\" component={Table}></Route>\n              <Route path=\"/Export\" component={Export}></Route>\n            </Switch>\n          </section>\n        </CSSTransition>\n      </TransitionGroup>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  .fade-enter {\n    opacity: 0.01;\n  }\n\n  .fade-enter.fade-enter-active {\n    opacity: 1;\n    transition: opacity 300ms ease-in;\n  }\n\n  .fade-exit {\n    opacity: 1;\n  }\n\n  .fade-exit.fade-exit-active {\n    opacity: 0.01;\n    transition: opacity 300ms ease-in;\n  }\n\n  div.transition-group {\n    position: relative;\n  }\n\n  section.route-section {\n    position: absolute;\n    width: 100%;\n    top: 0;\n    left: 0;\n  }\n`;\nexport default withRouter(Main);\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from \"@material-ui/core/Typography\";\n\n\nexport default function CheckBox({condition,visible,checkBoxCallback}) {\n  const [checked, setChecked] = React.useState(true);\n\n  const handleChange = (evt) => {\n\n    evt.stopPropagation(); \n    checkBoxCallback(condition,evt.target.checked)\n    setChecked(evt.target.checked);\n  };\n  return (condition && visible ? <>\n      <Checkbox\n        checked={checked}\n        onChange={handleChange}\n        color=\"default\"\n        inputProps={{ 'aria-label': 'checkbox with default color' }}\n      />\n      <Typography\n                            // style={{ display: \"block\" }}\n                            color=\"primary\"\n                            variant=\"overline\">\n                            {condition}\n                        </Typography>\n      </> :null)\n    \n    {/* <div>\n      \n      <Checkbox\n        defaultChecked\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n      />\n      <Checkbox inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} />\n      <Checkbox disabled inputProps={{ 'aria-label': 'disabled checkbox' }} />\n      <Checkbox disabled checked inputProps={{ 'aria-label': 'disabled checked checkbox' }} />\n      <Checkbox\n        defaultChecked\n        indeterminate\n        inputProps={{ 'aria-label': 'indeterminate checkbox' }}\n      />\n      <Checkbox\n        defaultChecked\n        color=\"default\"\n        inputProps={{ 'aria-label': 'checkbox with default color' }}\n      />\n      <Checkbox\n        defaultChecked\n        size=\"small\"\n        inputProps={{ 'aria-label': 'checkbox with small size' }}\n      />\n    </div> */}\n\n}","import React, { useState, useContext } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ProvenanceDataContext from \"../components/ProvenanceDataContext\";\nimport Grid, { GridSpacing } from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport SortIcon from '@material-ui/icons/Sort';\n\nimport CheckBox from '../components/CheckBox'\n\n\n\n// const useStyles = makeStyles((theme: Theme) =>\n//     createStyles({\n//         root: {\n//             // backgroundColor: theme.palette.background.paper,\n//             'padding-top': 0,\n//             'padding-bottom': 0\n//         },\n//     }),\n// );\n\n\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        flexGrow: 1,\n        padding:'0px'\n    },\n    table: {\n        padding: \"10px\",\n    },\n    condition: {\n        fontSize: \"1em\",\n        color:\"white\",\n        paddingTop:\"10px\",\n        cursor:'pointer'\n    },\n    sort:{\n        cursor:'pointer',\n        marginTop:'16px', \n        marginLeft:'5px'\n    },\n    bullet: {\n        display: \"inline-block\",\n        margin: \"0 2px\",\n        transform: \"scale(0.8)\",\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nfunction MenuWrapper({option,index,handleMenuItemClickCallback,setHoveredRowCallback,hoveredRow,selectedIndex,conditions}){\n\n    let initialState = {}\n    conditions.map(c=>initialState[c] = true)\n    const [filterConditions,setConditions] = useState(initialState)\n\n    function checkBoxCallback(condition,checked){\n        let currentState = {... filterConditions}\n        currentState[condition]=checked;\n        setConditions(currentState)\n        \n    }\n\n    let checkboxes = conditions.map(c=><CheckBox key = {c} visible = {(index == hoveredRow || index == selectedIndex ) && option.type !== 'global'} condition ={c} checkBoxCallback={checkBoxCallback}></CheckBox>) \n\n    return (<MenuItem\n    key={option.prompt}\n    // disabled={index === 0}\n    selected={index === selectedIndex}\n    onClick={(event) => handleMenuItemClickCallback(event, index,{desc:true, metric:option['key'],conditions:filterConditions})}\n    onMouseEnter={()=>setHoveredRowCallback(index)}\n    onMouseLeave={()=>setHoveredRowCallback(selectedIndex)}\n>\n    {<div style={{ 'width': '150px' }} > <Typography\n        // style={{ display: \"block\" }}\n        color=\"primary\"\n        variant=\"overline\">\n        {option.prompt}\n    </Typography></div>} \n    <div onClick={(evt)=>evt.stopPropagation()}>\n    {checkboxes}\n        </div> \n    \n</MenuItem>)\n}\n\n\nexport default function SortMenu() {\n\n    \n    const { metrics, conditions,setHomeTaskSort } = useContext(ProvenanceDataContext);\n\n\n    let options = [{ prompt: 'by Task Name', key: 'name' , type:'global'}]; \n\n    if (metrics){\n        Object.keys(metrics).map(m=>options.push({ prompt: 'by ' + m, key: m , type:'metric'}))\n    }\n        \n        // { prompt: 'by Task ', key: 'accuracy' },\n        // { prompt: 'by task completion time', key: 'time' },\n        // { prompt: 'by difference in performance across conditions', key: 'diff' }\n\n\n    // console.log('metrics are ', metrics)\n\n    // console.log('conditions', conditions)\n\n\n\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n\n    const handleClickListItem = (event: React.MouseEvent<HTMLElement>) => {\n        // console.log('handleClickListItem')\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuItemClick = (event: React.MouseEvent<HTMLElement>, index: number, sortObj) => {\n        setSelectedIndex(index);\n        setHomeTaskSort(sortObj)\n        // console.log('handleMenuItemClick')\n\n        // setTaskSort(options[index].key)\n        setAnchorEl(null);\n\n    };\n\n    let [hoveredRow,setHoveredRow] = useState(selectedIndex)\n\n    let setHoveredRowCallback = (value)=>{\n        setHoveredRow (value)\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    return ( !conditions ? <></> : \n        <div className={classes.root} style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n            <List component=\"nav\" aria-label=\"Sort tasks\" className={classes.root}>\n                <ListItem\n                    button\n                    aria-haspopup=\"true\"\n                    aria-controls=\"lock-menu\"\n                    aria-label=\"Sort tasks\"\n                    onClick={handleClickListItem}\n                >\n                    <ListItemText primary=\"Sort tasks\" secondary={options[selectedIndex].prompt} />\n                </ListItem>\n            </List>\n            <Menu\n                id=\"lock-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {options.map((option, index) => (\n                  <MenuWrapper key={option.prompt} hoveredRow={hoveredRow} selectedIndex= {selectedIndex} conditions= {conditions} setHoveredRowCallback={setHoveredRowCallback} handleMenuItemClickCallback = {handleMenuItemClick} option={option} index={index}></MenuWrapper>  \n                ))}\n            </Menu>\n        </div>\n    );\n}\n\n    // <>\n\n       // const classes = useStyles();\n\n    // function MetricAxis({ data, axisLength }) {\n    //     let padding = 20\n    //     let width  = axisLength + 2*padding\n    //     let height = 50\n    //     return typeof(data.range[0]) == 'string' ? null : <svg height={height} width={width}>\n    //         <line\n    //             x1={padding}\n    //             y1={height/2}\n    //             x2={axisLength+padding}\n    //             y2={height/2}\n    //             style={{ stroke: \"white\", strokeWidth: 1 }}></line>\n    //             <text\n    //             style={{\n    //               fontSize: \"1em\",\n    //               textAnchor: \"middle\",\n    //               fill:\"white\" ,\n    //                 fontWeight:'400'               }}\n               \n    //             x={padding+axisLength/2}\n    //             y={height/2-5}>\n    //             {\" \"}\n    //             {data.metric.toUpperCase()}{\" \"}\n    //           </text>\n\n\n    //             <text\n    //             style={{\n    //               fontSize: \"1em\",\n    //               textAnchor: \"end\",\n    //               fill:\"white\" ,\n    //               alignmentBaseline:'middle'                 }}\n                 \n    //             x={padding - 3}\n    //             y={height/2}>\n    //             {\" \"}\n    //             {data.range[0]}{\" \"}\n    //           </text>\n    //           <text\n    //             style={{\n    //               fontSize: \"1em\",\n    //               textAnchor: \"start\",\n    //               fill:\"white\" ,\n    //             alignmentBaseline:'middle'               }}\n               \n    //             x={axisLength+padding}\n    //             y={height/2}>\n    //             {\" \"}\n    //             {data.range[1]}{\" \"}\n    //           </text>\n    //           <g style={{transform:\"translate(\" + (padding + axisLength/2) + 'px,' + (height/2 + 5) + 'px)'}}>   \n    //           <SortIcon  width={'16px'} height={'16px'} className={classes.sort}></SortIcon>\n\n    //           </g>\n              \n\n\n    //     </svg>\n    // }\n\n    //     <React.Fragment key={'Menu'}>\n\n    //         <Grid container className={classes.root} spacing={2}>\n    //             <Grid item xs={12}>\n    //                 <Grid container justify=\"flex-start\" spacing={2}>\n\n    //                     {/* <Grid key={\"condition\"} item>\n    //                         <Box height={rowHeight} width={572} mt={\"5px\"} mb={\"6px\"} mr={'10px'} boxShadow={0} style={{ fontWeight:'bolder' }}>\n    //                             <Typography className={classes.condition} variant=\"overline\">\n    //                             <SortIcon/> Condition\n    //                         </Typography>                            </Box>\n\n    //                     </Grid> */}\n\n    //                     <Grid key={\"tasks\"} item>\n    //                         <Box height={rowHeight} width={572} pt={\"5px\"} pb={\"6px\"} pr={'10px'} boxShadow={0} style={{ display:'inline-flex', fontWeight:'bolder'  }}>\n    //                             <Typography\n    //                                 className={classes.condition}\n    //                                 variant=\"overline\">\n    //                                 Task Name\n    //                              </Typography>\n    //                              <SortIcon className={classes.sort}></SortIcon>\n                                 \n    //                         </Box>\n    //                         </Grid>\n\n\n    //                     <Grid key={\"actions\"} item>\n    //                         <Box height={rowHeight} width={375} pt={\"5px\"} pb={\"6px\"} pr={'10px'} boxShadow={0} style={{ display:'inline-flex', fontWeight:'bolder'  }}>\n    //                             <Typography\n    //                                 className={classes.condition}\n    //                                 variant=\"overline\">\n    //                                 Interaction Sequence Length\n    //                              </Typography>\n    //                              <SortIcon className={classes.sort}></SortIcon>\n\n                                 \n    //                         </Box>\n\n    //                         <Box height={rowHeight} width={250} mt={\"5px\"} mb={\"6px\"} mr={'10px'} boxShadow={0} style={{display:'inline-flex',  fontWeight:'bolder'  }}>\n    //                             <Typography\n    //                                 className={classes.condition}\n    //                                 variant=\"overline\">\n    //                                  Participant Count\n    //                              </Typography>\n    //                              <SortIcon className={classes.sort}></SortIcon>\n\n                                 \n    //                         </Box>\n\n    //                     </Grid>\n    //                     <Grid key={\"metrics\"} style={{display:'inline-flex'}} item>\n\n    //                     {!metrics ? <></> : Object.keys(metrics).map(metric=>{\n    //                         let range = metrics[metric];\n    //                         let labelLength = metric.length * 10;\n    //                     return  <Box height={rowHeight} mt={\"5px\"} mb={\"6px\"} mr={'15px'} boxShadow={0} style={{display:'inline-flex',   fontWeight:'bolder'  }}>\n    //                         {/* <Typography\n    //                             className={classes.condition}\n    //                             variant=\"overline\">\n    //                              {metric}\n    //                             </Typography> */}\n    //                             <MetricAxis data={{metric,range}} axisLength={labelLength}></MetricAxis>\n\n    //                     </Box>\n    //                     })\n    //                 }\n\n    //                     {/* <Box height={rowHeight} mt={\"5px\"} mb={\"6px\"} mr={'15px'} boxShadow={0} style={{display:'inline-flex',   fontWeight:'bolder'  }}>\n    //                         <Typography\n    //                             className={classes.condition}\n    //                             variant=\"overline\">\n    //                              Choose Metrics\n    //                             </Typography>\n    //                     </Box> */}\n\n\n    //                     </Grid>\n\n    //                 </Grid>\n    //             </Grid>\n    //         </Grid>\n    //     </React.Fragment>\n\n    // </>\n\n\n\n","import React from \"react\";\nimport { createStyles, makeStyles, useTheme, Theme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport Box from '@material-ui/core/Box';\n\nimport styles from \"./SidePane.module.css\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport CloudUpload from \"@material-ui/icons/CloudUpload\";\nimport TableChart from \"@material-ui/icons/TableChart\";\nimport GetApp from \"@material-ui/icons/GetApp\";\nimport BarChart from \"@material-ui/icons/BarChart\";\nimport { Link, LinkProps, useLocation } from \"react-router-dom\";\nimport ProvenanceDataContext from \"./components/ProvenanceDataContext\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport SortMenu from './components/sortMenu'\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    typography: {\n      // In Chinese and Japanese the characters are usually larger,\n      // so a smaller fontsize may be appropriate.\n      fontSize: 18,\n    },\n    appBar: {\n      \"background-color\": '#ababab',\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  }),\n);\n\n\nconst SidePane = ({ }) => {\n  const {\n    taskStructure,\n    handleChangeSelectedTaskId,\n    selectedTaskIds\n  } = React.useContext(ProvenanceDataContext);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\n  const HomeLink = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Home\" {...props} />);\n  const StudyLink = React.forwardRef<\n  HTMLAnchorElement,\n  Omit<LinkProps, \"innerRef\" | \"to\">\n>((props, ref) => <Link innerRef={ref as any} to=\"/Study\" {...props} />);\n  const Upload = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Upload\" {...props} />);\n  const Overview = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Overview\" {...props} />);\n  const Table = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Table\" {...props} />);\n  const Export = React.forwardRef<\n    HTMLAnchorElement,\n    Omit<LinkProps, \"innerRef\" | \"to\">\n  >((props, ref) => <Link innerRef={ref as any} to=\"/Export\" {...props} />);\n\n\n  let taskInfo = taskStructure.find(t => t.key == selectedTaskIds[0]);\n\n\n  let location = useLocation();\n  function appBarWidget() {\n    if (location.pathname.includes('Home')) {\n      return <SortMenu></SortMenu>\n    } else {\n      return <>\n        <FormControl className={styles.SelectedTaskInput}>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={selectedTaskIds[0]}\n            onChange={handleChangeSelectedTaskId}\n            label=\"name\">\n            {taskStructure.map((value) => {\n              return (\n                <MenuItem key={value.key} value={value.key}>\n                  {value.name}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <Box ml={3} >\n          <Typography variant=\"button\" noWrap dangerouslySetInnerHTML={{ __html: taskInfo.prompt }} >\n          </Typography>\n        </Box>\n      </>\n    }\n  }\n\n  function makeIcon(item) {\n    let isCurrent = location.pathname.includes(item.id);\n    const Icon = item.icon\n    return isCurrent ? <Icon style={{ color: 'rgb(93, 131, 210)' }}> </Icon> : <Icon></Icon>\n  }\n\n  return (<div className={classes.root}>\n    <CssBaseline />\n    <AppBar\n      position=\"fixed\"\n      className={clsx(classes.appBar, {\n        [classes.appBarShift]: open,\n      })}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n          className={clsx(classes.menuButton, {\n            [classes.hide]: open,\n          })}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        {appBarWidget()}\n        {/* {taskInfo.prompt} */}\n\n\n\n      </Toolbar>\n    </AppBar>\n    <Drawer\n      variant=\"permanent\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        }),\n      }}\n    >\n      <div className={classes.toolbar}>\n        <IconButton onClick={handleDrawerClose}>\n          {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n        </IconButton>\n\n      </div>\n      <Divider />\n      <List>\n        {/* <ListItem component={HomeLink}>\n          <img className={styles.logo} src={\"./Experi.png\"}></img>\n        </ListItem> */}\n        {[\n          { text: \"Home\", id: \"Home\", link: HomeLink, icon: HomeIcon },\n          { text: \"Study\", id: \"Study\", link: StudyLink, icon: ComputerIcon },\n          { text: \"Upload\", id: \"Upload\", link: Upload, icon: CloudUpload },\n          { text: \"Provenance Prep \", id: \"Overview\", link: Overview, icon: BarChart },\n          {\n            text: \"Provenance Analysis\",\n            link: Table,\n            id: \"Table\",\n            icon: TableChart,\n          },\n          { text: \"Export\", link: Export, icon: GetApp },\n        ].map((item, index) => {\n          return (\n            //added key={index} to get rid of unique key error\n            <React.Fragment key={index}>\n              <ListItem button component={item.link}>\n                <ListItemIcon>{makeIcon(item)}</ListItemIcon>\n                <ListItemText primary={item.text} />\n              </ListItem>\n            </React.Fragment>\n          );\n        })}\n      </List>\n\n      <Divider />\n    </Drawer>\n\n  </div>)\n\n};\n\nexport default SidePane;\n","import React from \"react\";\nimport { MemoryRouter, Link as RouterLink } from \"react-router-dom\";\nimport styles from \"./App.module.css\";\nimport Main from \"./Main\";\nimport SidePane from \"./SidePane\";\nimport \"antd/dist/antd.css\";\nimport { ProvenanceDataContextProvider } from \"./components/ProvenanceDataContext\";\n//import { fetchProvenance } from \"./firebase/fetchData\";\n//fetchProvenance();\nfunction App() {\n  return (\n    <div className=\"App\">\n      {\n        <ProvenanceDataContextProvider>\n          <MemoryRouter initialEntries={[\"/Home\"]} initialIndex={0}>\n            <div className={styles.container}>\n              <div className={styles.sidePane}>\n                <SidePane></SidePane>\n              </div>\n              <div className={styles.main}>\n                <Main></Main>\n              </div>\n            </div>\n          </MemoryRouter>\n        </ProvenanceDataContextProvider>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"EventSearch_searchContainer__3w0LZ\",\"searchBar\":\"EventSearch_searchBar__3PGaY\",\"searchOptions\":\"EventSearch_searchOptions__3hOQJ\",\"outerSearchBar\":\"EventSearch_outerSearchBar__3wMHs\",\"outerSearchOptions\":\"EventSearch_outerSearchOptions__2tSHp\",\"outerSearchDiscard\":\"EventSearch_outerSearchDiscard__2_Aj4\"};"],"sourceRoot":""}